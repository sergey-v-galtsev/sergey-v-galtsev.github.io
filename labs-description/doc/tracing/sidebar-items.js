window.SIDEBAR_ITEMS = {"macro":[["debug","Constructs an event at the debug level."],["debug_span","Constructs a span at the debug level."],["enabled","Checks whether a span or event is enabled based on the provided metadata."],["error","Constructs an event at the error level."],["error_span","Constructs a span at the error level."],["event","Constructs a new `Event`."],["event_enabled","Tests whether an event with the specified level and target would be enabled."],["info","Constructs an event at the info level."],["info_span","Constructs a span at the info level."],["span","Constructs a new span."],["span_enabled","Tests whether a span with the specified level and target would be enabled."],["trace","Constructs an event at the trace level."],["trace_span","Constructs a span at the trace level."],["warn","Constructs an event at the warn level."],["warn_span","Constructs a span at the warn level."]],"mod":[["collect","Collects and records trace data."],["dispatch","Dispatches trace events to a `Collect`."],["event","Events represent single points in time during the execution of a program."],["field","Structured data associated with `Span`s and `Event`s."],["instrument","Attach a span to a `std::future::Future`."],["level_filters","Trace verbosity level filtering."],["span","Spans represent periods of time in which a program was executing in a particular context."]],"struct":[["Dispatch","`Dispatch` trace data to a [`Collect`]."],["Event","`Event`s represent single points in time where something occurred during the execution of a program."],["Level","Describes the level of verbosity of a span or event."],["Metadata","Metadata describing a span or event."],["Span","A handle representing a span, with the capability to enter the span if it exists."]],"trait":[["Collect","Trait representing the functions required to collect trace data."],["Instrument","Attaches spans to a [`std::future::Future`]."],["Value","A field value of an erased type."]]};