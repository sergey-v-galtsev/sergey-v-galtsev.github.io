window.SIDEBAR_ITEMS = {"constant":[["BOOT_CODE","Адрес, куда релоцируется код функции [`switch_from_real_mode_to_long_mode()`]. Чтобы он был доступен из реального режима работы, в котором стартует Application Processor."],["BOOT_CODE_PLUS_STACK_SIZE","Размер в памяти, который должны занимать код инициализации [`switch_from_real_mode_to_long_mode()`] и необходимые ему параметры [`BootStack`]."],["BOOT_STACK","Адрес структуры [`BootStack`] с параметрами для кода инициализации [`switch_from_real_mode_to_long_mode()`]."]],"fn":[["boot_ap","Запуск Application Processor с Bootstrap Processor. Аргумент `phys2virt` — виртуальная страница, с которой начинается линейное отображение всей физической памяти в виртуальную, см. [`memory::phys2virt_map()`]. Аргумент `cpu` задаёт структуру [`Cpu`] для запускаемого Application Processor."],["copy_switch_mode_code","Релоцирует код начальной загрузки Application Processor, расположенный в функции [`switch_from_real_mode_to_long_mode()`] в заданный адрес `boot_code_address`."],["init_ap","Завершает инициализацию Application Processor. Аргумент `cpu` задаёт структуру [`Cpu`] для запускаемого Application Processor. Через `initialized` запускаемый Application Processor сигнализирует запускающему Bootstrap Processor, что инициализация AP завершена."],["prepare_boot_code","Подготовка кода и стека начальной инициализации Application Processor. Возвращает физический адрес, куда сохранён код и стек инициализации. Аргумент `phys2virt` — виртуальная страница, с которой начинается линейное отображение всей физической памяти в виртуальную, см. [`memory::phys2virt_map()`]. Аргумент `cpu` задаёт структуру [`Cpu`] для запускаемого Application Processor. Через `initialized` запускаемый Application Processor сигнализирует запускающему Bootstrap Processor, что инициализация AP завершена."],["real_mode_address","Преобразует заданный физический адрес `address` в [`Phys`]."],["signal_initialized","Сигнализирует запускающему процессору Bootstrap Processor, что Application Processor закончил свою инициализацию."],["switch_from_real_mode_to_long_mode","Переключает Application Processor из реального режима в 64-битный режим и выполняет начальную инициализацию процессора."],["switch_mode_code_size","Вычисляет размер кода начальной загрузки Application Processor, расположенного в функции [`switch_from_real_mode_to_long_mode()`]."],["wait_initialized","Ждёт пока запускаемый Application Processor не завершит свою инициализацию. Если этого не произойдёт за отведённый `timeout`, возвращает ошибку [`Error::Timeout`]."]],"struct":[["BootStack","Стек с дополнительной информацией для загрузки Application Processor."]]};