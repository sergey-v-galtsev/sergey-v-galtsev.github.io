window.SIDEBAR_ITEMS = {"constant":[["FAIL","Цвет для печати сообщения о провале теста."],["PASS","Цвет для печати сообщения об успешном завершении теста."]],"fn":[["alloc_error_handler","Обработчик ошибок аллокации памяти."],["exit_qemu","Выхода из qemu при запуске тестов с кодом `exit_code`. Требует указания аргумента `-device isa-debug-exit,iobase=0xF4,iosize=0x04` при запуске qemu."],["fail_test","Отмечает интеграционный тест как проваленный."],["halt","Останавливает процессор инструкцией `hlt` при запрещённых внешних прерываниях."],["init","Инициализация всех подсистем ядра. Аргумент `boot_info` содержит информацию от [`bootloader`]."],["init_subsystems","Инициализация части подсистем ядра для тестов. Аргумент `boot_info` содержит информацию от [`bootloader`], `subsystems` задаёт набор подсистем, которые нужно инициализировать."],["pass_test","Отмечает интеграционный тест как прошедший."],["test_runner","Запускает набор тестов `tests`."]],"mod":[["allocator","Аллокаторы памяти общего назначения."],["error","Перечисление для возможных ошибок [`Error`] и соответствующий [`Result`]."],["fs","Файловая система."],["interrupts","Система обработки прерываний."],["log","Поддержка логирования макросами библиотеки [`tracing`]."],["memory","Здесь находится часть работы с памятью, которая происходит только в ядре."],["process","Здесь находится часть работы с процессами, которая происходит только в ядре."],["smp","Поддержка симметричной многопроцессорности (Symmetric multiprocessing, SMP)."],["time","Здесь находится часть работы со временем, которая происходит только в ядре."]],"static":[["SYSTEM_INFO","Страница памяти с общей информацией о системе."]],"struct":[["ExitCode","Код выхода из qemu при запуске тестов."],["Subsystems","Разбивка на подсистемы для возможности инициализации только части из них в тестах."]],"trait":[["Testable","Определяет интерфейс запуска теста."]]};