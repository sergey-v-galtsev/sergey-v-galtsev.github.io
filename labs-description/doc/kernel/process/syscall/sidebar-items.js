window.SIDEBAR_ITEMS = {"fn":[["check_block","Проверяет, что `address` и `size` задают корректно выровненный диапазон страниц, целиком лежащий внутри одной из двух непрерывных половин адресного пространства. Возвращает блок соответствующих виртуальных страниц."],["check_frame","Проверяет, что заданная виртуальная страница `page` отображена в адресное пространство процесса `process` с корректно заданными флагами `flags`. Возвращает физический фрейм, в который она отображена."],["check_frames","Проверяет, что заданный блок виртуальных страниц `block` отображён в адресное пространство процесса `process` с корректно заданными флагами `flags`. Возвращает вектор физических фрейм, в который отображены эти страницы."],["check_page_flags","Проверяет, что `flags` задаёт валидный набор флагов отображения страниц, в котором обязательно должны быть включены флаги присутствия страницы в памяти и разрешения доступа со стороны кода пользователя. Возвращает входные `flags` в виде [`PageTableFlags`]."],["check_process_permissions","Проверяет, что процесс `process` имеет право модифицировать целевой процесс, заданный своим идентификатором `dst_pid`. Поглощает блокировку `process`, выдавая взамен блокировку на целевой процесс. Целевой процесс может совпадать с `process`."],["copy_mapping","Выполняет системный вызов `syscall::copy_mapping(dst_pid, src_block, dst_block, flags)`."],["exit","Выполняет системный вызов `syscall::exit(code)`."],["exofork","Выполняет системный вызов `syscall::exofork()`."],["init","Инициализация системных вызовов. Подготавливает процессор к выполнению инструкций syscall и sysret."],["log_value","Выполняет системный вызов `syscall::log_value(string, value)`."],["map","Выполняет системный вызов `syscall::map(dst_pid, dst_block, flags)`."],["map_pages_to_frames","Выполняет отображение `src_frames` в `dst_pages` с флагами `flags` в адресное пространство процесса `process`. Количества элементов в `src_frames` и `dst_pages` должны совпадать."],["sched_yield","Выполняет системный вызов `syscall::sched_yield()`."],["set_state","Выполняет системный вызов `syscall::set_state(dst_pid, state)`."],["set_trap_handler","Выполняет системный вызов `syscall::set_trap_handler(dst_pid, trap_handler, trap_stack)`."],["syscall","Выполняет диспетчеризацию системных вызовов по аргументу `number` — номеру системного вызова."],["syscall_trampoline","Получает управление при выполнении инструкции syscall."],["sysret","С помощью инструкции sysret возвращает управление в контекст пользователя `context`."],["unmap","Выполняет системный вызов `syscall::unmap(dst_pid, dst_block)`."]]};