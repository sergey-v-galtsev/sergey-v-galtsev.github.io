window.SIDEBAR_ITEMS = {"constant":[["INDIRECT_BLOCK_ARITY","Арность дерева отображения блоков."],["MAX_HEIGHT","Максимальная высота дерева отображения блоков."],["NO_BLOCK","Зарезервированный номер блока, означающий что блок не выделен."]],"enum":[["Kind","Тип объекта с данными — inode."]],"fn":[["find_tree","Вспомогательная функция для обхода леса отображения блоков [`Inode`]. По заданному количеству `tree_count` деревьев в лесу и номеру блока с данными `leaf_number` выдает кортеж с номером нужного дерева, количеством листьев в этом дереве и номером листа в этом дереве, который соответствует листу `leaf_number` леса."],["next_level","Возвращает срез потомков узла `node` в лесу отображения блоков [`Inode`]. При необходимости, то есть когда `*node` равен [`NO_BLOCK`], выделяет косвенный блок для них из `block_bitmap` и заполняет его записями [`NO_BLOCK`]."],["remove_tree","Удаляет дерево или поддерево на которое указывает запись `node` из леса отображения блоков [`Inode`]. Высота поддерева передаётся в `height`. Освобождаемые косвенные блоки передаются в `block_bitmap`."],["traverse_tree","Обходит дерево или поддерево на которое указывает запись `node` из леса отображения блоков [`Inode`] в поисках листа номер `leaf_number` в этом поддереве. Высота поддерева передаётся в `height`, а количество листьев в нём — в `leaf_count`. При необходимости выделяет косвенные блоки — узлы дерева — из `block_bitmap`."]],"struct":[["Inode","Метаинформация об объекте с данными — inode."],["Iter","Итератор по всем записям директории, — и занятым, и свободным."],["List","Итератор по занятым записям директории."]]};