var searchIndex = JSON.parse('{\
"acpi":{"doc":"A library for parsing ACPI tables. This crate can be used …","t":[4,8,8,3,3,2,13,2,13,13,13,13,13,13,2,13,2,3,2,2,13,4,3,13,13,13,13,13,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,0,11,11,11,11,11,11,12,12,0,10,11,0,11,12,11,0,11,11,12,0,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,12,12,12,12,12,12,12,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,13,3,13,13,3,3,3,13,13,4,13,13,13,13,13,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,13,13,4,13,13,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,13,3,13,3,13,3,13,3,13,3,13,13,3,13,13,3,13,3,13,13,3,3,13,3,13,3,13,3,3,4,3,4,13,13,13,3,13,3,13,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,3,3,4,13,13,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,3,13,13,4,3,3,13,13,13,4,3,4,3,4,13,13,13,4,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AcpiError","AcpiHandler","AcpiTable","AcpiTables","AmlTable","HpetInfo","IncorrectSignature","InterruptModel","InvalidChecksum","InvalidDsdtAddress","InvalidFacsAddress","InvalidGenericAddress","InvalidMadt","InvalidOemId","MadtError","NoValidRsdp","PciConfigRegions","PhysicalMapping","PlatformInfo","PowerProfile","Rsdp","RsdpError","Sdt","SdtInvalidChecksum","SdtInvalidOemId","SdtInvalidSignature","SdtInvalidTableId","TableMissing","address","bgrt","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","drop","dsdt","eq","fadt","fmt","fmt","fmt","from","from","from","from","from","from","from_rsdp","from_rsdt","from_tables_direct","from_validated_rsdp","get_sdt","handler","header","hpet","into","into","into","into","into","into","length","length","madt","map_physical_region","mapped_length","mcfg","new","physical_address","physical_start","platform","platform_info","region_length","revision","sdt","sdts","search_for_rsdp_bios","ssdts","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unmap_physical_region","validated","virtual_start","0","0","0","0","0","0","0","Bgrt","Bitmap","ImageType","Reserved","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","fmt","from","from","hash","header","image_address","image_offset","image_type","into","into","orientation_offset","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","was_displayed","AppliancePc","ArmBootArchFlags","Desktop","EnterpriseServer","Fadt","FixedFeatureFlags","IaPcBootArchFlags","Mobile","PerformanceServer","PowerProfile","Reserved","SohoServer","Tablet","Unspecified","Workstation","acpi_disable","acpi_enable","all_procs_support_c1_power_state","arm_boot_arch","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c2_configured_for_mp_system","c_state_control","case_is_sealed","century","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","day_alarm","dont_enable_msi","dont_enable_pcie_aspm","dont_probe_vga","dsdt_address","duty_offset","duty_width","eq","facs_address","flags","flush_size","flush_stride","fmt","from","from","from","from","from","gpe0_block","gpe1_base","gpe1_block","header","iapc_boot_arch","implements_psci","into","into","into","into","into","lapics_must_use_cluster_model_for_logical_mode","legacy_devices_are_accessible","local_xapics_must_use_physical_destination_mode","month_alarm","motherboard_implements_8042","no_benefit_to_s3","no_rtc_wake_in_fixed_register_space","ospm_may_leave_gpe_wake_events_armed_before_s5","pm1a_control_block","pm1a_event_block","pm1b_control_block","pm1b_event_block","pm2_control_block","pm_timer_block","pm_timer_is_32_bit","power_button_is_control_method","power_profile","pstate_control","reset_register","reset_value","rtc_sts_is_valid_after_wakeup_from_s4","rtc_wakes_system_from_s4","s4bios_req","sci_interrupt","sleep_button_is_control_method","sleep_control_register","sleep_status_register","smi_cmd_port","supports_docking","supports_equivalent_to_wbinvd","supports_pciexp_wake_in_pm1","supports_system_reset_via_fadt","system_is_headless","system_is_hw_reduced_acpi","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_hvc_as_psci_conduit","use_instr_after_write_to_slp_typx","use_pm_or_hpet_for_monotonically_decreasing_timers","use_time_and_alarm_namespace_for_rtc","validate","wbinvd_flushes_all_caches","worst_c2_latency","worst_c3_latency","0","HpetInfo","HpetTable","None","Other","PageProtection","Protected4K","Protected64K","base_address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clock_tick_unit","event_timer_block_id","fmt","fmt","from","from","from","hardware_rev","header","hpet_number","into","into","into","legacy_irq_capable","main_counter_is_64bits","new","num_comparators","page_protection","pci_vendor_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","EntryHeader","GicInterruptTranslationService","GicInterruptTranslationServiceEntry","GicMsiFrame","GicMsiFrameEntry","GicRedistributor","GicRedistributorEntry","Gicc","GiccEntry","Gicd","GicdEntry","InterruptOverrideEntryHasInvalidBus","InterruptSourceOverride","InterruptSourceOverrideEntry","InvalidLocalNmiLine","IoApic","IoApicEntry","IoSapic","IoSapicEntry","LocalApic","LocalApicAddressOverride","LocalApicAddressOverrideEntry","LocalApicEntry","LocalApicNmi","LocalApicNmiEntry","LocalSapic","LocalSapicEntry","LocalX2Apic","LocalX2ApicEntry","Madt","MadtEntry","MadtEntryIter","MadtError","MpsIntiInvalidPolarity","MpsIntiInvalidTriggerMode","MultiprocessorWakeup","MultiprocessorWakeupEntry","NmiSource","NmiSourceEntry","PlatformInterruptSource","PlatformInterruptSourceEntry","UnexpectedEntry","X2ApicNmi","X2ApicNmiEntry","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","entries","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","next","parse_interrupt_model","supports_8259","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Mcfg","McfgEntry","PciConfigRegions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","header","into","into","into","new","physical_address","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Disabled","PlatformInfo","PmTimer","Processor","ProcessorInfo","ProcessorState","Running","WaitingForSipi","address","application_processors","base","boot_processor","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from","from","from","interrupt","interrupt_model","into","into","into","into","into","is_ap","local_apic_id","new","new","pm_timer","power_profile","processor_info","processor_uid","state","supports_32bit","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AccessSize","AddressSpace","ByteAccess","DWordAccess","EmbeddedController","FunctionalFixedHardware","GeneralIo","GenericAddress","GenericSerialBus","Ipmi","OemDefined","PciBarTarget","PciConfigSpace","PlatformCommunicationsChannel","QWordAccess","SMBus","SystemCmos","SystemIo","SystemMemory","Undefined","WordAccess","access_size","address","address_space","bit_offset","bit_width","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","ActiveHigh","ActiveLow","All","Apic","Apic","Edge","InterruptModel","InterruptSourceOverride","IoApic","Level","Lint0","Lint1","LocalInterruptLine","NmiLine","NmiProcessor","NmiSource","Polarity","ProcessorUid","SameAsBus","SameAsBus","TriggerMode","Unknown","address","also_has_legacy_pics","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","global_system_interrupt","global_system_interrupt","global_system_interrupt_base","id","interrupt_source_overrides","into","into","into","into","into","into","into","into","into","into","io_apics","isa_source","line","local_apic_address","local_apic_nmi_lines","nmi_sources","polarity","polarity","processor","trigger_mode","trigger_mode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","AEST","BDAT","BERT","BGRT","CDIT","CEDT","CPEP","CRAT","CSRT","DBG2","DBGP","DMAR","DRTM","DSDT","ECDT","EINJ","ERST","ETDT","ExtendedField","FACS","FADT","FPDT","GTDT","HEST","HPET","IBFT","IORT","IVRS","LPIT","MADT","MCFG","MCHI","MPAM","MPST","MSCT","MSDM","NFIT","PCCT","PHAT","PMTT","PRMT","PSDT","RASF","RGRT","RSDT","SBST","SDEI","SDEV","SLIC","SLIT","SPCR","SPMI","SRAT","SSDT","STAO","SVKL","SdtHeader","Signature","TCPA","TPM2","UEFI","WAET","WDAT","WDRT","WPBT","WSMT","XENV","XSDT","access","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone_into","clone_into","clone_into","cmp","creator_id","creator_revision","eq","fmt","fmt","from","from","from","into","into","into","length","oem_id","oem_id","oem_revision","oem_table_id","oem_table_id","partial_cmp","revision","signature","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate"],"q":["acpi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::AcpiError","","","","","","","acpi::bgrt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::fadt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::fadt::PowerProfile","acpi::hpet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::madtacpi::madt::MadtEntry","","","","","","","","","","","","","","","","","acpi::mcfg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::platform::address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::platform::address::AddressSpace","acpi::platform::interrupt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","acpi::platform::interrupt::InterruptModel","acpi::platform::interrupt::NmiProcessor","acpi::sdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","An implementation of this trait must be provided to allow …","All types representing ACPI tables should implement this …","","","","","","","","","","","","","","","Describes a physical mapping created by …","","","","","","","","","","","Physical address of the start of the AML stream (excluding …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>AcpiTables</code> if you have the physical address of …","Create an <code>AcpiTables</code> if you have the physical address of …","Construct an <code>AcpiTables</code> from a custom set of “discovered…","Create an <code>AcpiTables</code> if you have a <code>PhysicalMapping</code> of the …","Create a mapping to a SDT, given its signature. This …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Length of the table in bytes.","Length (in bytes) of the AML stream.","","Given a physical address and a size, map a region of …","","","Construct a new <code>PhysicalMapping</code>. <code>mapped_length</code> may differ …","Physical address of the start of the SDT, including the …","","","Convenience method for contructing a <code>PlatformInfo</code>. This is …","","The revision of ACPI that the system uses, as inferred …","","","Search for the RSDP on a BIOS platform. This accesses …","","","","","","","","","","","","","","","","","","","","","Unmap the given physical mapping. This is called when a …","Whether this SDT has been validated. This is set to <code>true</code> …","","","","","","","","","The BGRT table contains information about a boot graphic …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the orientation offset of the image. Degrees are …","","","","","","","","","","","","","","","","Represents the Fixed ACPI Description Table (FADT). This …","","","","","","","","","","","","","If true, all processors implement the C1 power state.","","","","","","","","","","","","If true, the C2 power state is configured to work on a …","","If true, the system supports no expansion capabilities and …","","","","","","","","","","","If true, OSPM <em>must not</em> enable message-signaled interrupts.","If true, OSPM <em>must not</em> enable PCIe ASPM control.","If true, OSPM <em>must not</em> blindly probe VGA hardware. VGA …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","If true, the system implements PSCI.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, all LAPICs must be configured using the cluster …","If true, legacy user-accessible devices are available on …","If true, all LXAPICs must be configured using physical …","","If true, the motherboard exposes an IO port 60/64 keyboard …","If true, the system can achieve equal or better power …","If true, the RTC wake status is not supported in fixed …","If true, the platform supports OSPM leaving GPE wake …","","","","","","","If true, indicates that the PM timer is a 32-bit value. If …","If true, the power button is handled as a control method …","","","","","If true, the contents of the <code>RTC_STS</code> register are valid …","If true, the RTC alarm function can wake the system from …","","On systems with an i8259 PIC, this is the vector the …","If true, the sleep button is handled as a control method …","","","The system port address of the SMI Command Port. This port …","If true, the system supports docking.","If true, an equivalent to the x86 WBINVD instruction is …","If set, the platform supports the <code>PCIEXP_WAKE_STS</code> and …","If true, the system supports system reset via the …","If true, the system cannot detect the monitor or …","If true, this system is a hardware-reduced ACPI platform, …","","","","","","","","","","","","","","","","","","","","If true, OSPM must use HVC instead of SMC as the PSCI …","If true, OSPM must use a processor instruction after …","If true, OSPM should use the ACPI power management timer …","If true, OSPM <em>must not</em> use the RTC via its IO ports, …","","If true, WBINVD properly flushes all caches and  memory …","The worst-case latency to enter and exit the C2 state, in …","The worst-case latency to enter and exit the C3 state, in …","","Information about the High Precision Event Timer (HPET)","","","","","Access to the rest of the 4KiB, relative to the base …","Access to the rest of the 64KiB, relative to the base …","","","","","","","","The minimum number of clock ticks that can be set without …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","This field will appear for ARM processors that support …","","","","","","","","","","If this entry is present, the system has an I/O SAPIC, …","","","","","","","","","","","Represents the MADT - this contains the MADT header …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a set of regions of physical memory used to …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the physical address of the start of the configuration …","","","","","","","","","","","","A processor in this state is unusable, and you must not …","<code>PlatformInfo</code> allows the collection of some basic …","Information about the ACPI Power Management Timer (ACPI PM …","","","","A Running processor is currently brought up and running …","A processor waiting for a SIPI (Startup Inter-processor …","ACPI defines a Generic Address Structure (GAS), which …","Application processors should be brought up in the order …","A generic address to the register block of ACPI PM Timer.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this processor is the Bootstrap Processor (BSP), …","The ID of the local APIC of the processor. Will be less …","","","","","On <code>x86_64</code> platforms that support the APIC, the processor …","Corresponds to the <code>_UID</code> object of the processor’s <code>Device</code>…","The state of this processor. Check that the processor is …","This field is <code>true</code> if the hardware supports 32-bit timer, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a register in the configuration space of a PCI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Describes an interrupt controller based around the …","","","Describes a difference in the mapping of an ISA interrupt …","","","","","","","","Describes a Global System Interrupt that should be enabled …","","","","","","This model is only chosen when the MADT does not describe …","The physical address at which to access this I/O APIC.","If this field is set, you must remap and mask all the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The global system interrupt number where this I/O APIC’s …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a field which may or may not be present within …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All SDTs share the same header, and are <code>length</code> bytes long. …","","","","","","","","","","","","Access the field if it’s present for the given revision …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Check that: a) The signature matches the one given b) The …"],"i":[0,0,0,0,0,0,1,0,1,7,7,7,7,1,0,1,0,0,0,0,7,0,0,7,7,7,7,7,9,0,2,1,11,14,7,9,2,1,11,14,7,9,1,1,2,2,11,1,0,1,7,9,2,1,11,14,7,9,11,11,11,11,11,2,64,0,2,1,11,14,7,9,14,9,0,65,2,0,2,14,2,0,11,2,11,0,11,11,11,1,2,1,11,14,7,9,2,1,11,14,7,9,2,1,11,14,7,9,65,14,2,66,67,68,69,70,71,72,0,24,0,24,23,24,23,24,23,24,23,24,24,24,24,23,24,24,23,23,23,23,23,24,23,24,23,24,23,24,23,24,23,24,23,23,28,0,28,28,0,0,0,28,28,0,28,28,28,28,28,31,31,27,31,31,28,27,29,30,31,28,27,29,30,27,31,27,31,28,27,29,30,28,27,29,30,31,29,29,29,31,31,31,28,31,31,31,31,28,31,28,27,29,30,31,31,31,31,31,30,31,28,27,29,30,27,29,27,31,29,27,27,27,31,31,31,31,31,31,27,27,31,31,31,31,27,27,31,31,27,31,31,31,27,27,27,27,27,27,28,27,29,30,31,28,27,29,30,31,28,27,29,30,31,28,27,29,30,30,27,27,29,31,27,31,31,73,0,0,33,33,0,33,33,34,35,33,34,35,33,34,34,34,33,34,35,33,34,34,35,34,35,33,34,34,34,34,34,34,34,35,33,34,35,33,34,35,33,34,0,74,0,74,0,74,0,74,0,74,0,39,74,0,39,74,0,74,0,74,74,0,0,74,0,74,0,74,0,0,0,0,0,39,39,74,0,74,0,74,0,39,74,0,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,36,36,37,39,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,37,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,38,38,37,37,36,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,37,38,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,39,36,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,0,0,42,40,41,42,40,41,40,41,40,41,40,41,42,40,41,42,42,40,41,40,40,40,41,42,40,41,42,40,41,42,40,41,44,0,0,0,0,0,44,44,0,109,46,109,109,46,21,44,45,109,46,21,44,45,44,45,44,45,44,45,44,45,109,46,21,44,45,0,21,109,46,21,44,45,45,45,46,21,21,21,21,45,45,46,44,45,109,46,21,44,45,109,46,21,44,45,109,46,21,44,45,0,0,48,48,47,47,47,0,47,47,47,47,47,47,48,47,47,47,47,48,48,32,32,32,32,32,47,48,32,47,48,32,47,48,32,47,48,32,47,48,32,47,48,32,47,48,32,47,48,32,47,48,32,47,48,48,32,47,48,32,47,48,32,110,53,53,52,0,58,54,0,0,0,54,51,51,0,0,0,0,0,52,53,54,0,58,49,57,49,50,51,52,53,54,55,56,57,58,49,50,51,52,53,54,55,56,57,58,49,50,51,52,53,54,55,56,57,58,49,50,51,52,53,54,55,56,57,58,55,56,49,49,57,49,50,51,52,53,54,55,56,57,58,57,55,50,57,57,57,55,56,50,55,56,49,50,51,52,53,54,55,56,57,58,49,50,51,52,53,54,55,56,57,58,49,50,51,52,53,54,55,56,57,58,111,112,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,13,13,13,13,13,13,13,13,13,13,60,13,60,19,13,60,19,13,19,60,19,13,60,19,13,13,19,19,13,13,13,60,19,13,60,19,13,19,19,19,19,19,19,13,19,19,60,19,13,13,60,19,13,60,19,13,60,19,13,19],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[2],[2],0,[[1,1],3],0,[[1,4],[[6,[5]]]],[[7,4],8],[[9,4],8],[[]],[[]],[[]],[[]],[[]],[[]],[10,[[6,[11,7]]]],[[12,10],[[6,[11,7]]]],[[12,[15,[13,14]],[16,[9]],[17,[9]]],11],[[[2,[18]]],[[6,[11,7]]]],[[11,13],[[6,[[16,[2]],7]]]],[2],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[10,10],2],[2,10],0,[[10,20,10,10],2],0,[2,10],0,[11,[[6,[21,7]]]],[2,10],0,0,0,[[],[[6,[11,7]]]],0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[2],0,[2,20],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[23,23],[24,24],[[]],[[]],[[24,24],25],[[24,24],3],[[24,4],8],[[]],[[]],[24],[23,19],0,[23],[23,24],[[]],[[]],[23,26],[[24,24],[[16,[25]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],0,[23,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,3],0,[27,3],0,[28,28],[27,27],[29,29],[30,30],[[]],[[]],[[]],[[]],0,[29,3],[29,3],[29,3],[31,[[6,[10,7]]]],0,0,[[28,28],3],[31,[[6,[10,7]]]],0,0,0,[[28,4],8],[[]],[[]],[[]],[[]],[[]],[31,[[6,[[16,[32]],7]]]],0,[31,[[6,[[16,[32]],7]]]],[31,19],0,[30,3],[[]],[[]],[[]],[[]],[[]],[27,3],[29,3],[27,3],0,[29,3],[27,3],[27,3],[27,3],[31,[[6,[32,7]]]],[31,[[6,[32,7]]]],[31,[[6,[[16,[32]],7]]]],[31,[[6,[[16,[32]],7]]]],[31,[[6,[[16,[32]],7]]]],[31,[[6,[[16,[32]],7]]]],[27,3],[27,3],[31,28],0,[31,[[6,[32,7]]]],0,[27,3],[27,3],0,0,[27,3],[31,[[6,[[16,[32]],7]]]],[31,[[6,[[16,[32]],7]]]],0,[27,3],[27,3],[27,3],[27,3],[27,3],[27,3],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],[[],22],[[],22],[30,3],[27,3],[27,3],[29,3],[31,[[6,[7]]]],[27,3],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[33,4],8],[[34,4],8],[[]],[[]],[[]],[34,12],[35,19],0,[[]],[[]],[[]],[34,3],[34,3],[11,[[6,[34,7]]]],[34,12],0,[34,26],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[[]],[37,38],[[39,4],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,16],[37,[[6,[7]]]],[37,3],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[41,41],[[]],[[]],[[40,4],8],[[41,4],8],[[]],[[]],[[]],[42,19],[[]],[[]],[[]],[11,[[6,[40,7]]]],[[40,26,12,12,12],[[16,[43]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[45,45],[[]],[[]],[[44,44],3],[[45,45],3],[[44,4],8],[[45,4],8],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,[31,[[6,[[16,[46]],7]]]],[11,[[6,[21,7]]]],0,0,0,0,0,0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[48,48],[32,32],[[]],[[]],[[]],[[47,47],3],[[48,48],3],[[32,32],3],[[47,4],8],[[48,4],8],[[32,4],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[12,[[6,[48]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,4],8],[[50,4],8],[[51,4],8],[[52,4],8],[[53,4],8],[[54,4],8],[[55,4],8],[[56,4],8],[[57,4],8],[[58,4],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[60,[59]],12],[[16,[59]]]],[13,61],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[60,[[0,[62,59]]]]],[[60,[[0,[62,59]]]]]],[19,19],[13,13],[[]],[[]],[[]],[[13,13],25],0,0,[[13,13],3],[[13,4],8],[[13,4],8],[[]],[[]],[[]],[[]],[[]],[[]],0,[19,61],0,0,[19,61],0,[[13,13],[[16,[25]]]],0,0,[[]],[[]],[[]],[[],63],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[],22],[[19,13],[[6,[7]]]]],"p":[[4,"RsdpError"],[3,"PhysicalMapping"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[4,"AcpiError"],[6,"Result"],[3,"AmlTable"],[15,"usize"],[3,"AcpiTables"],[15,"u8"],[3,"Signature"],[3,"Sdt"],[3,"BTreeMap"],[4,"Option"],[3,"Vec"],[3,"Rsdp"],[3,"SdtHeader"],[3,"NonNull"],[3,"PlatformInfo"],[3,"TypeId"],[3,"Bgrt"],[4,"ImageType"],[4,"Ordering"],[15,"u16"],[3,"FixedFeatureFlags"],[4,"PowerProfile"],[3,"IaPcBootArchFlags"],[3,"ArmBootArchFlags"],[3,"Fadt"],[3,"GenericAddress"],[4,"PageProtection"],[3,"HpetInfo"],[3,"HpetTable"],[3,"EntryHeader"],[3,"Madt"],[3,"MadtEntryIter"],[4,"MadtError"],[3,"PciConfigRegions"],[3,"McfgEntry"],[3,"Mcfg"],[15,"u64"],[4,"ProcessorState"],[3,"Processor"],[3,"PmTimer"],[4,"AddressSpace"],[4,"AccessSize"],[3,"IoApic"],[3,"NmiLine"],[4,"LocalInterruptLine"],[4,"NmiProcessor"],[4,"Polarity"],[4,"TriggerMode"],[3,"InterruptSourceOverride"],[3,"NmiSource"],[3,"Apic"],[4,"InterruptModel"],[8,"Copy"],[3,"ExtendedField"],[15,"str"],[8,"Clone"],[3,"String"],[8,"AcpiTable"],[8,"AcpiHandler"],[13,"Rsdp"],[13,"SdtInvalidSignature"],[13,"SdtInvalidOemId"],[13,"SdtInvalidTableId"],[13,"SdtInvalidChecksum"],[13,"TableMissing"],[13,"InvalidMadt"],[13,"Reserved"],[4,"MadtEntry"],[3,"LocalApicEntry"],[3,"IoApicEntry"],[3,"InterruptSourceOverrideEntry"],[3,"NmiSourceEntry"],[3,"LocalApicNmiEntry"],[3,"LocalApicAddressOverrideEntry"],[3,"IoSapicEntry"],[3,"LocalSapicEntry"],[3,"PlatformInterruptSourceEntry"],[3,"LocalX2ApicEntry"],[3,"X2ApicNmiEntry"],[3,"GiccEntry"],[3,"GicdEntry"],[3,"GicMsiFrameEntry"],[3,"GicRedistributorEntry"],[3,"GicInterruptTranslationServiceEntry"],[3,"MultiprocessorWakeupEntry"],[13,"LocalApic"],[13,"IoApic"],[13,"InterruptSourceOverride"],[13,"NmiSource"],[13,"LocalApicNmi"],[13,"LocalApicAddressOverride"],[13,"IoSapic"],[13,"LocalSapic"],[13,"PlatformInterruptSource"],[13,"LocalX2Apic"],[13,"X2ApicNmi"],[13,"Gicc"],[13,"Gicd"],[13,"GicMsiFrame"],[13,"GicRedistributor"],[13,"GicInterruptTranslationService"],[13,"MultiprocessorWakeup"],[3,"ProcessorInfo"],[13,"OemDefined"],[13,"Apic"],[13,"ProcessorUid"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[18,8,8,10,10,10,10,10,10,10,10,10],"n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[4,0,0,5,4,5,4,5,4,5,4,5],"f":[0,0,0,[[],1],[1,2],[1,2],[[[3,[1]]]],[[[3,[1]]]],[[1,2]],[[1,2]],[[[3,[1]]]],[[[3,[1]]]]],"p":[[15,"usize"],[15,"bool"],[8,"RangeBounds"],[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[0],"p":[]},\
"bootloader":{"doc":"This library part of the bootloader allows kernels to …","t":[2,0,14,13,13,13,3,13,13,13,3,13,13,13,13,3,3,4,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BootInfo","bootinfo","entry_point","AcpiNvs","AcpiReclaimable","BadMemory","BootInfo","BootInfo","Bootloader","Empty","FrameRange","FrameZero","InUse","Kernel","KernelStack","MemoryMap","MemoryRegion","MemoryRegionType","Package","PageTable","Reserved","TlsTemplate","Usable","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","deref","deref_mut","end_addr","end_frame_number","eq","eq","eq","eq","file_size","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","is_empty","mem_size","memory_map","new","physical_memory_offset","range","region_type","start_addr","start_addr","start_frame_number","tls_template","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["bootloader","","","bootloader::bootinfo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Provides boot information to the kernel.","Defines the entry point function.","ACPI NVS memory","ACPI reclaimable memory","Area containing bad memory","This structure represents the information that the …","Memory used for storing the boot information.","Memory used by the bootloader.","An empty region with size 0","A range of frames with an exclusive upper bound.","Frame at address zero.","Memory that is already in use.","Memory used for loading the kernel.","Memory used for the kernel stack.","A map of the physical memory regions of the underlying …","Represents a region of physical memory.","Represents possible types for memory regions.","Memory used for storing the supplied package","Memory used for creating page tables.","Memory reserved by the hardware. Not usable.","Information about the thread local storage (TLS) template.","Unused memory, can be freely used by the kernel.","","","","","","","","","","","","","","","","","","","Returns the physical end address of the memory region.","The frame <em>number</em> of the first 4KiB frame that does no …","","","","","The number of data bytes in the template.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the frame range contains no frames.","The total number of bytes that the TLS segment should have …","A map of the physical memory regions of the underlying …","Create a new FrameRange from the passed start_addr and …","The offset into the virtual address space where the …","The range of frames that belong to the region.","The type of the region.","Returns the physical start address of the memory region.","The virtual start address of the thread local storage …","The frame <em>number</em> of the first 4KiB frame in the region.","Returns information about the thread local storage segment …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,3,3,0,3,3,3,0,3,3,3,3,0,0,0,3,3,3,0,3,5,1,2,3,10,4,5,1,2,3,10,4,1,2,3,4,5,5,2,2,1,2,3,4,4,5,1,2,3,10,4,5,1,2,3,10,4,5,1,2,3,10,4,2,4,10,2,10,1,1,2,4,2,10,5,1,2,3,10,4,5,1,2,3,10,4,5,1,2,3,10,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5],[5],[2,6],0,[[1,1],7],[[2,2],7],[[3,3],7],[[4,4],7],0,[[5,8],9],[[1,8],9],[[2,8],9],[[3,8],9],[[10,8],9],[[4,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,7],0,0,[[6,6],2],0,0,0,[2,6],0,0,[10,[[11,[4]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13]],"p":[[3,"MemoryRegion"],[3,"FrameRange"],[4,"MemoryRegionType"],[3,"TlsTemplate"],[3,"MemoryMap"],[15,"u64"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"BootInfo"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":["byteorder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,21,1,2,21,1,2,21,21,21,21,21,1,2,21,1,2,21,1,2,21,1,2,1,2,1,2,1,2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,1,2,21,1,2,21,1,2,21,1,2,21,21,1,2,21,1,2,21,21,1,2,21,1,2,21,1,2,21,1,2,1,2,1,2,1,2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,1,2,21,1,2,21,1,2,21,1,2,21,21,1,2,21,1,2,21,21,1,2,21,1,2,21,1,2,21,1,2],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[[]],[[]],[[1,1],[[7,[3]]]],[[2,2],[[7,[3]]]],[[],8],[[]],[[]],[[],9],[[]],[[]],[[],10],[[]],[[],11],[[]],[[],12],[[],12],[[]],[[],13],[[],13],[[]],[14,13],[14,10],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[14,18],[14,18],[14,18],[14,15],[14,15],[14,15],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[8],[[]],[9],[[]],[10],[[]],[11],[[]],[12],[12],[[]],[13],[13],[[]],[[]],[[13,14]],[[10,14]],[15],[15],[15],[[]],[[]],[[]],[16],[16],[16],[[]],[[]],[[]],[17],[17],[17],[17],[[]],[[]],[[]],[18],[18],[18],[18],[[]],[[]],[[]],[[18,14]],[[18,14]],[[18,14]],[[15,14]],[[15,14]],[[15,14]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"usize"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"p":[]},\
"chrono":{"doc":"Chrono: Date and Time for Rust","t":[13,13,13,3,3,8,13,3,13,13,8,16,13,2,13,2,13,13,13,2,17,17,18,18,17,17,18,18,13,13,13,13,13,4,3,2,2,2,2,13,13,13,2,2,3,2,3,4,13,4,13,13,8,13,13,2,8,13,13,2,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,11,0,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,10,11,11,10,11,10,11,10,11,11,10,11,11,10,11,10,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,11,11,11,11,13,13,13,4,13,13,13,13,13,13,3,3,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,4,3,4,6,3,13,13,13,13,13,13,13,2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,11,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,17,17,18,18,17,17,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,8,16,13,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"n":["April","August","AutoSi","Date","DateTime","Datelike","December","Duration","DurationExceedsLimit","DurationExceedsTimestamp","DurationRound","Err","February","FixedOffset","Fri","IsoWeek","January","July","June","LocalResult","MAX_DATE","MAX_DATETIME","MAX_UTC","MAX_UTC","MIN_DATE","MIN_DATETIME","MIN_UTC","MIN_UTC","March","May","Micros","Millis","Mon","Month","Months","NaiveDate","NaiveDateTime","NaiveTime","NaiveWeek","Nanos","November","October","Offset","ParseError","ParseMonthError","ParseResult","ParseWeekdayError","RoundingError","Sat","SecondsFormat","Secs","September","SubsecRound","Sun","Thu","TimeZone","Timelike","TimestampExceedsLimit","Tue","Utc","Wed","Weekday","abs","add","add","add","add","add_assign","add_assign","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add_signed","checked_add_signed","checked_sub","checked_sub_signed","checked_sub_signed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","date","date_naive","day","day","day","day0","day0","day0","days","default","default","div","duration_round","duration_round","duration_trunc","duration_trunc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from_i64","from_i64","from_local","from_std","from_str","from_str","from_str","from_str","from_u32","from_u64","from_u64","from_utc","from_utc","hash","hash","hash","hash","hash","hour","hour","hour12","hour12","hours","into","into","into","into","into","into","into","into","into","into","is_zero","iso_week","iso_week","iso_week","max_value","microseconds","milliseconds","min_value","minute","minute","minutes","month","month","month","month0","month0","month0","mul","naive","naive_local","naive_local","naive_utc","naive_utc","name","nanosecond","nanosecond","nanoseconds","neg","new","num_days","num_days_from_ce","num_days_from_ce","num_days_from_monday","num_days_from_sunday","num_hours","num_microseconds","num_milliseconds","num_minutes","num_nanoseconds","num_seconds","num_seconds_from_midnight","num_seconds_from_midnight","num_weeks","number_from_monday","number_from_month","number_from_sunday","offset","offset","offset","ordinal","ordinal","ordinal","ordinal0","ordinal0","ordinal0","parse_from_rfc2822","parse_from_rfc3339","parse_from_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pred","pred","pred","pred_opt","prelude","round_subsecs","second","second","seconds","signed_duration_since","signed_duration_since","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","succ","succ","succ","succ_opt","time","timestamp","timestamp_micros","timestamp_millis","timestamp_nanos","timestamp_subsec_micros","timestamp_subsec_millis","timestamp_subsec_nanos","timezone","timezone","to_std","trunc_subsecs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weekday","weekday","weeks","with_day","with_day","with_day","with_day0","with_day0","with_day0","with_hour","with_hour","with_minute","with_minute","with_month","with_month","with_month","with_month0","with_month0","with_month0","with_nanosecond","with_nanosecond","with_ordinal","with_ordinal","with_ordinal","with_ordinal0","with_ordinal0","with_ordinal0","with_second","with_second","with_timezone","with_timezone","with_year","with_year","with_year","year","year","year","year_ce","year_ce","years_since","years_since","zero","BadFormat","Day","Error","Fixed","Fixed","Hour","Hour12","Impossible","Internal","Internal","InternalFixed","InternalNumeric","Invalid","IsoWeek","IsoYear","IsoYearDiv100","IsoYearMod100","Item","Literal","LongMonthName","LongWeekdayName","LowerAmPm","Minute","Month","Nanosecond","Nanosecond","Nanosecond3","Nanosecond6","Nanosecond9","None","NotEnough","NumDaysFromSun","Numeric","Numeric","Ordinal","OutOfRange","Pad","ParseError","ParseErrorKind","ParseResult","Parsed","RFC2822","RFC3339","Second","ShortMonthName","ShortWeekdayName","Space","Space","StrftimeItems","Timestamp","TimezoneName","TimezoneOffset","TimezoneOffsetColon","TimezoneOffsetColonZ","TimezoneOffsetZ","TooLong","TooShort","UpperAmPm","WeekFromMon","WeekFromSun","WeekdayFromMon","Year","YearDiv100","YearMod100","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","day","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hour_div_12","hour_mod_12","into","into","into","into","into","into","into","into","into","isoweek","isoyear","isoyear_div_100","isoyear_mod_100","kind","minute","month","nanosecond","new","offset","ordinal","parse","second","set_ampm","set_day","set_hour","set_hour12","set_isoweek","set_isoyear","set_isoyear_div_100","set_isoyear_mod_100","set_minute","set_month","set_nanosecond","set_offset","set_ordinal","set_second","set_timestamp","set_week_from_mon","set_week_from_sun","set_weekday","set_year","set_year_div_100","set_year_mod_100","strftime","timestamp","to_datetime","to_datetime_with_timezone","to_fixed_offset","to_naive_date","to_naive_datetime_with_offset","to_naive_time","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","week_from_mon","week_from_sun","weekday","year","year_div_100","year_mod_100","0","0","0","0","0","1","0","StrftimeItems","borrow","borrow_mut","clone","fmt","from","into","into_iter","new","next","try_from","try_into","type_id","IsoWeek","MAX","MAX","MAX_DATE","MAX_DATETIME","MIN","MIN","MIN_DATE","MIN_DATETIME","NaiveDate","NaiveDateTime","NaiveTime","NaiveWeek","add","add","add","add","add","add","add_assign","add_assign","add_assign","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_local_timezone","and_time","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add_months","checked_add_signed","checked_add_signed","checked_sub_months","checked_sub_signed","checked_sub_signed","clone","clone","clone","clone","cmp","cmp","cmp","cmp","date","day","day","day0","day0","days","default","default","default","duration_round","duration_trunc","eq","eq","eq","eq","first_day","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_hms","from_hms_micro","from_hms_micro_opt","from_hms_milli","from_hms_milli_opt","from_hms_nano","from_hms_nano_opt","from_hms_opt","from_isoywd","from_isoywd_opt","from_num_days_from_ce","from_num_days_from_ce_opt","from_num_seconds_from_midnight","from_num_seconds_from_midnight_opt","from_str","from_str","from_str","from_timestamp","from_timestamp_opt","from_weekday_of_month","from_weekday_of_month_opt","from_ymd","from_ymd_opt","from_yo","from_yo_opt","hash","hash","hash","hour","hour","into","into","into","into","into","iso_week","iso_week","iter_days","iter_weeks","last_day","minute","minute","month","month","month0","month0","nanosecond","nanosecond","new","num_seconds_from_midnight","ordinal","ordinal","ordinal0","ordinal0","overflowing_add_signed","overflowing_sub_signed","parse_from_str","parse_from_str","parse_from_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pred","pred_opt","second","second","signed_duration_since","signed_duration_since","signed_duration_since","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","succ","succ_opt","time","timestamp","timestamp_micros","timestamp_millis","timestamp_nanos","timestamp_subsec_micros","timestamp_subsec_millis","timestamp_subsec_nanos","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","week","week","week0","weekday","weekday","with_day","with_day","with_day0","with_day0","with_hour","with_hour","with_minute","with_minute","with_month","with_month","with_month0","with_month0","with_nanosecond","with_nanosecond","with_ordinal","with_ordinal","with_ordinal0","with_ordinal0","with_second","with_second","with_year","with_year","year","year","year","Ambiguous","FixedOffset","LocalResult","None","Offset","Offset","Single","TimeZone","Utc","and_hms_micro_opt","and_hms_milli_opt","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","datetime_from_str","earliest","east","east_opt","eq","eq","eq","fix","fix","fix","fmt","fmt","fmt","fmt","fmt","from","from","from","from_local_date","from_local_datetime","from_offset","from_offset","from_offset","from_utc_date","from_utc_datetime","hash","hash","into","into","into","isoywd","isoywd_opt","latest","local_minus_utc","map","offset_from_local_date","offset_from_local_date","offset_from_local_date","offset_from_local_datetime","offset_from_local_datetime","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_date","offset_from_utc_date","offset_from_utc_datetime","offset_from_utc_datetime","offset_from_utc_datetime","single","timestamp","timestamp_millis","timestamp_millis_opt","timestamp_nanos","timestamp_opt","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","utc_minus_local","west","west_opt","ymd","ymd_opt","yo","yo_opt","0","0","1","Date","DateTime","Datelike","FixedOffset","Month","NaiveDate","NaiveDateTime","NaiveTime","Offset","SecondsFormat","SubsecRound","TimeZone","Timelike","Utc","Weekday"],"q":["chronochrono::formatchrono::format::Fixed","chrono::format::Item","","","","","chrono::format::Numeric","chrono::format::strftime","","","","","","","","","","","","","chrono::naivechrono::offset","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","chrono::offset::LocalResult","","","chrono::prelude","","","","","","","","","","","","","",""],"d":["April","August","Automatically select one of <code>Secs</code>, <code>Millis</code>, <code>Micros</code>, or <code>Nanos</code> …","ISO 8601 calendar date with time zone.","ISO 8601 combined date and time with time zone.","The common set of methods for date component.","December","ISO 8601 time duration with nanosecond precision.","Error when <code>Duration.num_nanoseconds</code> exceeds the limit.","Error when the Duration exceeds the Duration from or until …","Extension trait for rounding or truncating a DateTime by a …","Error that can occur in rounding or truncating","February","","Friday.","","January","July","June","","The maximum possible <code>Date</code>.","The maximum possible <code>DateTime&lt;Utc&gt;</code>.","The maximum possible <code>Date</code>.","The maximum possible <code>DateTime&lt;Utc&gt;</code>.","The minimum possible <code>Date</code>.","The minimum possible <code>DateTime&lt;Utc&gt;</code>.","The minimum possible <code>Date</code>.","The minimum possible <code>DateTime&lt;Utc&gt;</code>.","March","May","Use fixed 6 subsecond digits. This corresponds to …","Use fixed 3 subsecond digits. This corresponds to …","Monday.","The month of the year.","A duration in calendar months","","","","","Use fixed 9 subsecond digits. This corresponds to …","November","October","","","An error resulting from reading <code>&lt;Month&gt;</code> value with <code>FromStr</code>.","","An error resulting from reading <code>Weekday</code> value with <code>FromStr</code>.","An error from rounding by <code>Duration</code>","Saturday.","Specific formatting options for seconds. This may be …","Format whole seconds only, with no decimal point nor …","September","Extension trait for subsecond rounding or truncation to a …","Sunday.","Thursday.","","The common set of methods for time component.","Error when <code>DateTime.timestamp_nanos</code> exceeds the limit.","Tuesday.","","Wednesday.","The day of week.","Returns the duration as an absolute (non-negative) value.","","","","","","","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date and given …","","","","","","","","","","","","","","","","","","","","","Add two durations, returning <code>None</code> if overflow occurred.","Adds given <code>Duration</code> to the current date.","Adds given <code>Duration</code> to the current date and time.","Subtract two durations, returning <code>None</code> if overflow …","Subtracts given <code>Duration</code> from the current date.","Subtracts given <code>Duration</code> from the current date and time.","","","","","","","","","","","","","","Retrieves a date component","Retrieves the Date without an associated timezone","Returns the day of month starting from 1.","","","Returns the day of month starting from 0.","","","Makes a new <code>Duration</code> with given number of days. Equivalent …","","","","Return a copy rounded by Duration.","","Return a copy truncated by Duration.","","","","","","","","","","","","","Format a duration using the ISO 8601 format","","","","","","","","","","","","","","","Formatting (and parsing) utilities for date and time.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert this <code>DateTime&lt;Utc&gt;</code> instance into a …","Convert this <code>DateTime&lt;FixedOffset&gt;</code> instance into a …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Makes a new <code>DateTime</code> with given <strong>local</strong> datetime and offset …","Creates a <code>time::Duration</code> object from <code>std::time::Duration</code>","","","","","","","Returns an Option from a i64, assuming a 1-index, January …","Makes a new <code>Date</code> with given <em>UTC</em> date and offset. The local …","Makes a new <code>DateTime</code> with given <em>UTC</em> datetime and offset. …","","","","","","Returns the hour number from 0 to 23.","","Returns the hour number from 1 to 12 with a boolean flag, …","Returns the hour number from 1 to 12 with a boolean flag, …","Makes a new <code>Duration</code> with given number of hours. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the duration equals <code>Duration::zero()</code>.","Returns the ISO week.","","","The maximum possible <code>Duration</code>: <code>i64::MAX</code> milliseconds.","Makes a new <code>Duration</code> with given number of microseconds.","Makes a new <code>Duration</code> with given number of milliseconds.","The minimum possible <code>Duration</code>: <code>i64::MIN</code> milliseconds.","Returns the minute number from 0 to 59.","","Makes a new <code>Duration</code> with given number of minutes. …","Returns the month number starting from 1.","","","Returns the month number starting from 0.","","","","Date and time types unconcerned with timezones.","Returns a view to the naive local date.","Returns a view to the naive local datetime.","Returns a view to the naive UTC date.","Returns a view to the naive UTC datetime.","Get the name of the month","Returns the number of nanoseconds since the whole non-leap …","","Makes a new <code>Duration</code> with given number of nanoseconds.","","Construct a new <code>Months</code> from a number of months","Returns the total number of whole days in the duration.","Counts the days in the proleptic Gregorian calendar, with …","Counts the days in the proleptic Gregorian calendar, with …","Returns a day-of-week number starting from Monday = 0.","Returns a day-of-week number starting from Sunday = 0.","Returns the total number of whole hours in the duration.","Returns the total number of whole microseconds in the …","Returns the total number of whole milliseconds in the …","Returns the total number of whole minutes in the duration.","Returns the total number of whole nanoseconds in the …","Returns the total number of whole seconds in the duration.","Returns the number of non-leap seconds past the last …","Returns the number of non-leap seconds past the last …","Returns the total number of whole weeks in the duration.","Returns a day-of-week number starting from Monday = 1. …","Returns a month-of-year number starting from January = 1.","Returns a day-of-week number starting from Sunday = 1.","The time zone, which calculates offsets from the local …","Retrieves an associated offset from UTC.","Retrieves an associated offset from UTC.","Returns the day of year starting from 1.","","","Returns the day of year starting from 0.","","","Parses an RFC 2822 date and time string such as …","Parses an RFC 3339 and ISO 8601 date and time string such …","Parses a string with the specified format string and …","","","Compare two DateTimes based on their true time, ignoring …","","Makes a new <code>Date</code> for the prior date.","The previous day in the week.","The previous month.","Makes a new <code>Date</code> for the prior date.","A convenience module appropriate for glob imports (…","Return a copy rounded to the specified number of subsecond …","Returns the second number from 0 to 59.","","Makes a new <code>Duration</code> with given number of seconds. Panics …","Subtracts another <code>Date</code> from the current date. Returns a …","Subtracts another <code>DateTime</code> from the current date and time. …","","","","","","","","","Makes a new <code>Date</code> for the next date.","The next day in the week.","The next month.","Makes a new <code>Date</code> for the next date.","Retrieves a time component. Unlike <code>date</code>, this is not …","Returns the number of non-leap seconds since January 1, …","Returns the number of non-leap-microseconds since January …","Returns the number of non-leap-milliseconds since January …","Returns the number of non-leap-nanoseconds since January …","Returns the number of microseconds since the last second …","Returns the number of milliseconds since the last second …","Returns the number of nanoseconds since the last second …","Retrieves an associated time zone.","Retrieves an associated time zone.","Creates a <code>std::time::Duration</code> object from <code>time::Duration</code>","Return a copy truncated to the specified number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the day of week.","","","Makes a new <code>Duration</code> with given number of weeks. …","Makes a new value with the day of month (starting from 1) …","","","Makes a new value with the day of month (starting from 0) …","","","Makes a new value with the hour number changed.","","Makes a new value with the minute number changed.","","Makes a new value with the month number (starting from 1) …","","","Makes a new value with the month number (starting from 0) …","","","Makes a new value with nanoseconds since the whole …","","Makes a new value with the day of year (starting from 1) …","","","Makes a new value with the day of year (starting from 0) …","","","Makes a new value with the second number changed.","","Changes the associated time zone. This does not change the …","Changes the associated time zone. The returned <code>DateTime</code> …","Makes a new value with the year number changed.","","","Returns the year number in the calendar date.","","","Returns the absolute year number starting from 1 with a …","Returns the absolute year number starting from 1 with a …","Returns the number of whole years from the given <code>base</code> …","Retrieve the elapsed years from now to the given <code>DateTime</code>.","A duration where the stored seconds and nanoseconds are …","There was an error on the formatting string, or there were …","Day of the month (FW=PW=2).","Issues a formatting error. Used to signal an invalid …","Fixed-format item types.","Fixed-format item.","Hour number in the 24-hour clocks (FW=PW=2).","Hour number in the 12-hour clocks (FW=PW=2).","There is no possible date and time value with given set of …","Internal uses only.","Internal uses only.","An opaque type representing fixed-format item types for …","An opaque type representing numeric item types for …","The input string has some invalid character sequence for …","Week number in the ISO week date (FW=PW=2).","Year in the ISO week date (FW=4, PW=∞). May accept years …","Year in the ISO week date, divided by 100 (FW=PW=2). …","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be …","A single formatting item. This is used for both formatting …","A literally printed and parsed text.","Full month names.","Full day of the week names.","AM/PM.","The number of minutes since the last whole hour (FW=PW=2).","Month (FW=PW=2).","The number of nanoseconds since the last whole second …","An optional dot plus one or more digits for left-aligned …","Same as <code>Nanosecond</code> but the accuracy is fixed to 3.","Same as <code>Nanosecond</code> but the accuracy is fixed to 6.","Same as <code>Nanosecond</code> but the accuracy is fixed to 9.","No padding.","Given set of fields is not enough to make a requested date …","Day of the week, where Sunday = 0 and Saturday = 6 …","Numeric item types. They have associated formatting width …","Numeric item. Can be optionally padded to the maximal …","Day of the year (FW=PW=3).","Given field is out of permitted range.","Padding characters for numeric items.","An error from the <code>parse</code> function.","The category of parse error","Same as <code>Result&lt;T, ParseError&gt;</code>.","Parsed parts of date and time. There are two classes of …","RFC 2822 date and time syntax. Commonly used for email and …","RFC 3339 &amp; ISO 8601 date and time syntax.","The number of seconds since the last whole minute …","Abbreviated month names.","Abbreviated day of the week names.","Space padding.","Whitespace. Prints literally but reads zero or more …","","The number of non-leap seconds since the midnight UTC on …","Timezone name.","Same as <code>TimezoneOffsetColon</code> but prints no colon. Parsing …","Offset from the local time to UTC (<code>+09:00</code> or <code>-04:00</code> or …","Offset from the local time to UTC (<code>+09:00</code> or <code>-04:00</code> or <code>Z</code>).","Same as <code>TimezoneOffsetColonZ</code> but prints no colon. Parsing …","All formatting items have been read but there is a …","The input string has been prematurely ended.","AM/PM.","Week number, where the week 1 starts at the first Monday …","Week number, where the week 1 starts at the first Sunday …","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","Full Gregorian year (FW=4, PW=∞). May accept years …","Gregorian year divided by 100 (century number; FW=PW=2). …","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","Zero (<code>0</code>) padding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Day of the month (1–28, 1–29, 1–30 or 1–31 …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hour number divided by 12 (0–1). 0 indicates AM and 1 …","Hour number modulo 12 (0–11).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","ISO week number (1–52 or 1–53 depending on the year).","Year in the ISO week date.","Year in the ISO week date, divided by 100. Implies that …","Year in the ISO week date, modulo 100. Implies that the …","The category of parse error","Minute number (0–59).","Month (1–12).","The number of nanoseconds since the whole second (0–…","Returns the initial value of parsed parts.","Offset from the local time to UTC, in seconds.","Day of the year (1–365 or 1–366 depending on the year).","Tries to parse given string into <code>parsed</code> with given …","Second number (0–60, accounting for leap seconds).","Tries to set the <code>hour_div_12</code> field from given value. (<code>false</code>…","Tries to set the <code>day</code> field from given value.","Tries to set both <code>hour_div_12</code> and <code>hour_mod_12</code> fields from …","Tries to set the <code>hour_mod_12</code> field from given hour number …","Tries to set the <code>isoweek</code> field from given value.","Tries to set the <code>isoyear</code> field from given value.","Tries to set the <code>isoyear_div_100</code> field from given value.","Tries to set the <code>isoyear_mod_100</code> field from given value.","Tries to set the <code>minute</code> field from given value.","Tries to set the <code>month</code> field from given value.","Tries to set the <code>nanosecond</code> field from given value.","Tries to set the <code>offset</code> field from given value.","Tries to set the <code>ordinal</code> field from given value.","Tries to set the <code>second</code> field from given value.","Tries to set the <code>timestamp</code> field from given value.","Tries to set the <code>week_from_mon</code> field from given value.","Tries to set the <code>week_from_sun</code> field from given value.","Tries to set the <code>weekday</code> field from given value.","Tries to set the <code>year</code> field from given value.","Tries to set the <code>year_div_100</code> field from given value.","Tries to set the <code>year_mod_100</code> field from given value.","<code>strftime</code>/<code>strptime</code>-inspired date and time formatting syntax.","The number of non-leap seconds since the midnight UTC on …","Returns a parsed timezone-aware date and time out of given …","Returns a parsed timezone-aware date and time out of given …","Returns a parsed fixed time zone offset out of given …","Returns a parsed naive date out of given fields.","Returns a parsed naive date and time out of given fields, …","Returns a parsed naive time out of given fields.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Week number, where the week 1 starts at the first Monday …","Week number, where the week 1 starts at the first Sunday …","Day of the week.","Year.","Year divided by 100. Implies that the year is &gt;= 1 BCE …","Year modulo 100. Implies that the year is &gt;= 1 BCE when …","","","","","","","","Parsing iterator for <code>strftime</code>-like format strings.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Creates a new parsing iterator from the <code>strftime</code>-like …","","","","","ISO 8601 week.","The maximum possible <code>NaiveDate</code> (December 31, 262143 CE).","The maximum possible <code>NaiveDateTime</code>.","The maximum possible <code>NaiveDate</code> (December 31, 262143 CE).","The maximum possible <code>NaiveDateTime</code>.","The minimum possible <code>NaiveDate</code> (January 1, 262145 BCE).","The minimum possible <code>NaiveDateTime</code>.","The minimum possible <code>NaiveDate</code> (January 1, 262145 BCE).","The minimum possible <code>NaiveDateTime</code>.","ISO 8601 calendar date without timezone. Allows for every …","ISO 8601 combined date and time without timezone.","ISO 8601 time without timezone. Allows for the nanosecond …","A week represented by a <code>NaiveDate</code> and a <code>Weekday</code> which is …","An addition of months to <code>NaiveDate</code> clamped to valid days …","","","","","","","","","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Converts the <code>NaiveDateTime</code> into the timezone-aware …","Makes a new <code>NaiveDateTime</code> from the current date and given …","","","","","","","","","","","Add a duration in <code>Months</code> to the date","Adds the <code>days</code> part of given <code>Duration</code> to the current date.","Adds given <code>Duration</code> to the current date and time.","Subtract a duration in <code>Months</code> from the date","Subtracts the <code>days</code> part of given <code>Duration</code> from the current …","Subtracts given <code>Duration</code> from the current date and time.","","","","","","","","","Retrieves a date component.","Returns the day of month starting from 1.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of month starting from 0.","Returns a <code>RangeInclusive&lt;T&gt;</code> representing the whole week …","","","","","","","","","","Returns a date representing the first day of the week.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveTime</code> from the number of seconds since …","Makes a new <code>NaiveTime</code> from the number of seconds since …","","","","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and …","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","","","","Returns the hour number from 0 to 23.","Returns the hour number from 0 to 23.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an iterator that steps by days across all …","Returns an iterator that steps by weeks across all …","Returns a date representing the last day of the week.","Returns the minute number from 0 to 59.","Returns the minute number from 0 to 59.","Returns the month number starting from 1.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the month number starting from 0.","Returns the number of nanoseconds since the whole non-leap …","Returns the number of nanoseconds since the whole non-leap …","Makes a new <code>NaiveDateTime</code> from date and time components. …","Returns the number of non-leap seconds past the last …","Returns the day of year starting from 1.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of year starting from 0.","Adds given <code>Duration</code> to the current time, and also returns …","Subtracts given <code>Duration</code> from the current time, and also …","Parses a string with the specified format string and …","Parses a string with the specified format string and …","Parses a string with the specified format string and …","","","","","Makes a new <code>NaiveDate</code> for the previous calendar date.","Makes a new <code>NaiveDate</code> for the previous calendar date.","Returns the second number from 0 to 59.","Returns the second number from 0 to 59.","Subtracts another <code>NaiveDate</code> from the current date. Returns …","Subtracts another <code>NaiveDateTime</code> from the current date and …","Subtracts another <code>NaiveTime</code> from the current time. Returns …","A subtraction of Months from <code>NaiveDate</code> clamped to valid …","","","","","","","","","","","","Makes a new <code>NaiveDate</code> for the next calendar date.","Makes a new <code>NaiveDate</code> for the next calendar date.","Retrieves a time component.","Returns the number of non-leap seconds since the midnight …","Returns the number of non-leap <em>microseconds</em> since midnight …","Returns the number of non-leap <em>milliseconds</em> since midnight …","Returns the number of non-leap <em>nanoseconds</em> since midnight …","Returns the number of microseconds since the last whole …","Returns the number of milliseconds since the last whole …","Returns the number of nanoseconds since the last whole …","","","","","","","","","","","","","","","","Returns the <code>NaiveWeek</code> that the date belongs to, starting …","Returns the ISO week number starting from 1.","Returns the ISO week number starting from 0.","Returns the day of week.","Returns the day of week.","Makes a new <code>NaiveDate</code> with the day of month (starting from …","Makes a new <code>NaiveDateTime</code> with the day of month (starting …","Makes a new <code>NaiveDate</code> with the day of month (starting from …","Makes a new <code>NaiveDateTime</code> with the day of month (starting …","Makes a new <code>NaiveDateTime</code> with the hour number changed.","Makes a new <code>NaiveTime</code> with the hour number changed.","Makes a new <code>NaiveDateTime</code> with the minute number changed.","Makes a new <code>NaiveTime</code> with the minute number changed.","Makes a new <code>NaiveDate</code> with the month number (starting from …","Makes a new <code>NaiveDateTime</code> with the month number (starting …","Makes a new <code>NaiveDate</code> with the month number (starting from …","Makes a new <code>NaiveDateTime</code> with the month number (starting …","Makes a new <code>NaiveDateTime</code> with nanoseconds since the whole …","Makes a new <code>NaiveTime</code> with nanoseconds since the whole …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDateTime</code> with the day of year (starting …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDateTime</code> with the day of year (starting …","Makes a new <code>NaiveDateTime</code> with the second number changed.","Makes a new <code>NaiveTime</code> with the second number changed.","Makes a new <code>NaiveDate</code> with the year number changed.","Makes a new <code>NaiveDateTime</code> with the year number changed.","Returns the year number in the calendar date.","Returns the year number in the calendar date.","Returns the year number for this ISO week.","Given local time representation has multiple results and …","The time zone with fixed offset, from UTC-23:59:59 to …","The conversion result from the local time to the …","Given local time representation is invalid. This can occur …","The offset from the local time to UTC.","An associated offset type. This type is used to store the …","Given local time representation has a single unique result.","The time zone.","The UTC time zone. This is the most efficient time zone …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date and given …","","","","","","","","","","Parses a string with the specified format string and …","Returns <code>Some</code> for the earliest possible conversion result, …","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with …","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with …","","","","Returns the fixed offset from UTC to the local time stored.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the local <code>NaiveDate</code> to the timezone-aware <code>Date</code> if …","Converts the local <code>NaiveDateTime</code> to the timezone-aware …","Reconstructs the time zone from the offset.","","","Converts the UTC <code>NaiveDate</code> to the local time. The UTC is …","Converts the UTC <code>NaiveDateTime</code> to the local time. The UTC …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Makes a new <code>Date</code> from ISO week date (year and week …","Makes a new <code>Date</code> from ISO week date (year and week …","Returns <code>Some</code> for the latest possible conversion result, or …","Returns the number of seconds to add to convert from UTC …","Maps a <code>LocalResult&lt;T&gt;</code> into <code>LocalResult&lt;U&gt;</code> with given …","Creates the offset(s) for given local <code>NaiveDate</code> if …","","","Creates the offset(s) for given local <code>NaiveDateTime</code> if …","","","Creates the offset for given UTC <code>NaiveDate</code>. This cannot …","","","Creates the offset for given UTC <code>NaiveDateTime</code>. This …","","","Returns <code>Some</code> only when the conversion result is unique, or …","Makes a new <code>DateTime</code> from the number of non-leap seconds …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap seconds …","","","","","","","","","","Returns the single unique conversion result, or panics …","Returns the number of seconds to add to convert from the …","Makes a new <code>FixedOffset</code> for the Western Hemisphere with …","Makes a new <code>FixedOffset</code> for the Western Hemisphere with …","Makes a new <code>Date</code> from year, month, day and the current …","Makes a new <code>Date</code> from year, month, day and the current …","Makes a new <code>Date</code> from year, day of year (DOY or “ordinal…","Makes a new <code>Date</code> from year, day of year (DOY or “ordinal…","","","","","","","","","","","","","","","","","",""],"i":[14,14,10,0,0,0,14,0,11,11,0,52,14,0,12,0,14,14,14,0,0,0,3,4,0,0,3,4,14,14,10,10,12,0,0,0,0,0,0,10,14,14,0,0,0,0,0,0,12,0,10,14,0,12,12,0,0,11,12,0,12,0,1,1,3,4,4,3,4,3,3,3,3,3,3,3,3,3,1,3,10,4,11,12,13,14,15,16,1,3,10,4,11,12,13,14,15,16,1,3,4,1,3,4,1,3,10,4,11,12,13,14,15,16,1,3,4,4,4,53,3,4,53,3,4,1,4,4,1,52,4,52,4,1,3,10,4,11,12,13,14,15,16,1,1,3,3,10,4,4,11,11,12,12,13,13,14,15,16,0,1,3,10,4,4,4,11,12,13,14,15,16,12,14,4,1,4,4,12,14,14,12,14,3,4,3,4,12,14,15,54,4,54,54,1,1,3,10,4,11,12,13,14,15,16,1,53,3,4,1,1,1,1,54,4,1,53,3,4,53,3,4,1,0,3,4,3,4,14,54,4,1,1,15,1,53,53,12,12,1,1,1,1,1,1,54,54,1,12,14,12,0,3,4,53,3,4,53,3,4,4,4,4,1,3,4,15,3,12,14,3,0,55,54,4,1,3,4,1,3,3,4,4,4,3,4,3,12,14,3,4,4,4,4,4,4,4,4,3,4,1,55,1,3,10,4,11,12,13,14,15,16,1,3,10,4,11,12,13,14,15,16,1,3,10,4,11,12,13,14,15,16,53,3,4,1,53,3,4,53,3,4,54,4,54,4,53,3,4,53,3,4,54,4,53,3,4,53,3,4,54,4,3,4,53,3,4,53,3,4,53,53,3,4,1,41,36,39,0,39,36,36,41,36,37,0,0,41,36,36,36,36,0,39,37,37,37,36,36,36,37,37,37,37,35,41,36,0,39,36,41,0,0,0,0,0,37,37,36,37,37,35,39,0,36,37,37,37,37,37,41,41,37,36,36,36,36,36,36,35,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,42,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,40,41,42,34,35,36,37,38,39,40,41,42,42,42,34,35,36,37,38,39,40,41,42,42,42,42,42,40,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,34,35,36,37,38,39,40,41,42,42,42,42,42,42,42,56,57,58,59,60,59,61,0,43,43,43,43,43,43,43,43,43,43,43,43,0,18,26,0,0,18,26,0,0,0,0,0,0,18,18,26,26,8,8,18,26,8,18,18,18,18,18,18,18,18,26,18,45,18,26,31,8,45,18,26,31,8,18,18,26,18,18,26,18,26,31,8,18,26,31,8,26,18,26,18,26,45,18,26,8,26,26,18,26,31,8,45,45,18,18,26,26,31,8,8,45,18,26,31,8,8,8,8,8,8,8,8,8,18,18,18,18,8,8,18,26,8,26,26,18,18,18,18,18,18,18,26,8,26,8,45,18,26,31,8,18,26,18,18,45,26,8,18,26,18,26,26,8,26,8,18,26,18,26,8,8,18,26,8,18,26,31,8,18,18,26,8,18,26,8,18,18,18,26,26,26,8,8,8,18,26,8,18,18,26,26,26,26,26,26,26,26,45,18,26,31,8,45,18,26,31,8,45,18,26,31,8,18,31,31,18,26,18,26,18,26,26,8,26,8,18,26,18,26,26,8,18,26,18,26,26,8,18,26,18,26,31,44,0,0,44,0,2,44,0,0,44,44,44,44,44,5,20,44,5,20,44,5,20,44,2,44,5,5,5,20,44,62,5,20,5,5,20,20,44,5,20,44,2,2,2,5,20,2,2,5,44,5,20,44,2,2,44,5,44,2,5,20,2,5,20,2,5,20,2,5,20,44,2,2,2,2,2,5,20,44,5,20,44,5,20,44,44,5,5,5,2,2,2,2,63,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[1,1],1],[[[3,[2]],1],[[3,[2]]]],[[[4,[2]],5],[[4,[2]]]],[[[4,[2]],1],[[4,[2]]]],[[[3,[2]],1]],[[[4,[2]],1]],[[[3,[2]],6,6,6],[[4,[2]]]],[[[3,[2]],6,6,6,6],[[4,[2]]]],[[[3,[2]],6,6,6,6],[[7,[[4,[2]]]]]],[[[3,[2]],6,6,6,6],[[4,[2]]]],[[[3,[2]],6,6,6,6],[[7,[[4,[2]]]]]],[[[3,[2]],6,6,6,6],[[4,[2]]]],[[[3,[2]],6,6,6,6],[[7,[[4,[2]]]]]],[[[3,[2]],6,6,6],[[7,[[4,[2]]]]]],[[[3,[2]],8],[[7,[[4,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],[[7,[1]]]],[[[3,[2]],1],[[7,[[3,[2]]]]]],[[[4,[2]],1],[[7,[[4,[2]]]]]],[[1,1],[[7,[1]]]],[[[3,[2]],1],[[7,[[3,[2]]]]]],[[[4,[2]],1],[[7,[[4,[2]]]]]],[1,1],[[[3,[[0,[9,2]]]]],[[3,[[0,[9,2]]]]]],[10,10],[[[4,[[0,[9,2]]]]],[[4,[[0,[9,2]]]]]],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[[1,1],17],[[[3,[2]],3],17],[[[4,[2]],4],17],[[[4,[2]]],[[3,[2]]]],[[[4,[2]]],18],[[],6],[[[3,[2]]],6],[[[4,[2]]],6],[[],6],[[[3,[2]]],6],[[[4,[2]]],6],[19,1],[[],[[4,[20]]]],[[],[[4,[5]]]],[[1,21],1],[1,22],[[[4,[2]],1],[[22,[[4,[2]]]]]],[1,22],[[[4,[2]],1],[[22,[[4,[2]]]]]],[[1,1],23],[[[3,[2]],3],23],[[10,10],23],[[[4,[2]],4],23],[[11,11],23],[[12,12],23],[[13,13],23],[[14,14],23],[[15,15],23],[[16,16],23],[[1,24],25],[[1,24],25],[[[3,[2]],24],25],[[[3,[2]],24],25],[[10,24],25],[[[4,[2]],24],25],[[[4,[2]],24],25],[[11,24],25],[[11,24],25],[[12,24],25],[[12,24],25],[[13,24],25],[[13,24],25],[[14,24],25],[[15,24],25],[[16,24],25],0,[[]],[[]],[[]],[[[4,[20]]],[[4,[5]]]],[[[4,[5]]],[[4,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,[[7,[12]]]],[19,[[7,[14]]]],[26,[[4,[2]]]],[27,[[22,[1,0]]]],[28,[[29,[[4,[20]]]]]],[28,[[29,[[4,[5]]]]]],[28,[[22,[12]]]],[28,[[22,[14]]]],[6,[[7,[14]]]],[30,[[7,[12]]]],[30,[[7,[14]]]],[18,[[3,[2]]]],[26,[[4,[2]]]],[[[3,[2]]]],[[[4,[2]]]],[12],[14],[15],[[],6],[[[4,[2]]],6],[[]],[[]],[19,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,23],[[],31],[[[3,[2]]],31],[[[4,[2]]],31],[[],1],[19,1],[19,1],[[],1],[[],6],[[[4,[2]]],6],[19,1],[[],6],[[[3,[2]]],6],[[[4,[2]]],6],[[],6],[[[3,[2]]],6],[[[4,[2]]],6],[[1,21],1],0,[[[3,[2]]],18],[[[4,[2]]],26],[[[3,[2]]],18],[[[4,[2]]],26],[14,28],[[],6],[[[4,[2]]],6],[19,1],[1,1],[6,15],[1,19],[[],21],[[],21],[12,6],[12,6],[1,19],[1,[[7,[19]]]],[1,19],[1,19],[1,[[7,[19]]]],[1,19],[[],6],[[],6],[1,19],[12,6],[14,6],[12,6],0,[[[3,[2]]]],[[[4,[2]]]],[[],6],[[[3,[2]]],6],[[[4,[2]]],6],[[],6],[[[3,[2]]],6],[[[4,[2]]],6],[28,[[29,[[4,[5]]]]]],[28,[[29,[[4,[5]]]]]],[[28,28],[[29,[[4,[5]]]]]],[[1,1],[[7,[17]]]],[[[3,[2]],3],[[7,[17]]]],[[[4,[2]],4],[[7,[17]]]],[[15,15],[[7,[17]]]],[[[3,[2]]],[[3,[2]]]],[12,12],[14,14],[[[3,[2]]],[[7,[[3,[2]]]]]],0,[32],[[],6],[[[4,[2]]],6],[19,1],[[[3,[2]],[3,[2]]],1],[[[4,[2]],[4,[2]]],1],[[1,1],1],[[[3,[2]],[3,[2]]],1],[[[3,[2]],1],[[3,[2]]]],[[[4,[2]],[4,[2]]],1],[[[4,[2]],5],[[4,[2]]]],[[[4,[2]],1],[[4,[2]]]],[[[3,[2]],1]],[[[4,[2]],1]],[[[3,[2]]],[[3,[2]]]],[12,12],[14,14],[[[3,[2]]],[[7,[[3,[2]]]]]],[[[4,[2]]],8],[[[4,[2]]],19],[[[4,[2]]],19],[[[4,[2]]],19],[[[4,[2]]],19],[[[4,[2]]],6],[[[4,[2]]],6],[[[4,[2]]],6],[[[3,[2]]],2],[[[4,[2]]],2],[1,[[22,[27,0]]]],[32],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],12],[[[3,[2]]],12],[[[4,[2]]],12],[19,1],[6,7],[[[3,[2]],6],[[7,[[3,[2]]]]]],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[3,[2]],6],[[7,[[3,[2]]]]]],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[3,[2]],6],[[7,[[3,[2]]]]]],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[3,[2]],6],[[7,[[3,[2]]]]]],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[3,[2]],6],[[7,[[3,[2]]]]]],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[3,[2]],6],[[7,[[3,[2]]]]]],[[[4,[2]],6],[[7,[[4,[2]]]]]],[6,7],[[[4,[2]],6],[[7,[[4,[2]]]]]],[[[3,[2]]],[[3,[2]]]],[[[4,[2]]],[[4,[2]]]],[21,7],[[[3,[2]],21],[[7,[[3,[2]]]]]],[[[4,[2]],21],[[7,[[4,[2]]]]]],[[],21],[[[3,[2]]],21],[[[4,[2]]],21],[[]],[[]],[[[3,[2]],[3,[2]]],[[7,[6]]]],[[[4,[2]],[4,[2]]],[[7,[6]]]],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],0,[[],42],[[34,34],23],[[35,35],23],[[36,36],23],[[37,37],23],[[38,38],23],[[39,39],23],[[40,40],23],[[41,41],23],[[42,42],23],[[34,24],25],[[35,24],25],[[36,24],25],[[37,24],25],[[38,24],25],[[39,24],25],[[40,24],25],[[40,24],25],[[41,24],25],[[42,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[40,41],0,0,0,[[],42],0,0,[[42,28],29],0,[[42,23],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,19],29],[[42,12],29],[[42,19],29],[[42,19],29],[[42,19],29],0,0,[42,[[29,[[4,[5]]]]]],[42,[[29,[[4,[2]]]]]],[42,[[29,[5]]]],[42,[[29,[18]]]],[[42,21],[[29,[26]]]],[42,[[29,[8]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[43,43],[[43,24],25],[[]],[[]],[[]],[28,43],[43,[[7,[39]]]],[[],22],[[],22],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,15]],[[18,1],18],[[26,1],26],[[26,5],26],[[8,5],8],[[8,1],8],[[18,1]],[[26,1]],[[8,1]],[[18,6,6,6],26],[[18,6,6,6,6],26],[[18,6,6,6,6],[[7,[26]]]],[[18,6,6,6,6],26],[[18,6,6,6,6],[[7,[26]]]],[[18,6,6,6,6],26],[[18,6,6,6,6],[[7,[26]]]],[[18,6,6,6],[[7,[26]]]],[[26,2],[[44,[[4,[2]]]]]],[[18,8],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,15],[[7,[18]]]],[[18,1],[[7,[18]]]],[[26,1],[[7,[26]]]],[[18,15],[[7,[18]]]],[[18,1],[[7,[18]]]],[[26,1],[[7,[26]]]],[18,18],[26,26],[31,31],[8,8],[[18,18],17],[[26,26],17],[[31,31],17],[[8,8],17],[26,18],[18,6],[26,6],[18,6],[26,6],[45,[[46,[18]]]],[[],18],[[],26],[[],8],[[26,1],[[22,[26]]]],[[26,1],[[22,[26]]]],[[18,18],23],[[26,26],23],[[31,31],23],[[8,8],23],[45,18],[[45,24],25],[[18,24],25],[[18,24],25],[[26,24],25],[[26,24],25],[[31,24],25],[[8,24],25],[[8,24],25],[[]],[[]],[[]],[[]],[[]],[[6,6,6],8],[[6,6,6,6],8],[[6,6,6,6],[[7,[8]]]],[[6,6,6,6],8],[[6,6,6,6],[[7,[8]]]],[[6,6,6,6],8],[[6,6,6,6],[[7,[8]]]],[[6,6,6],[[7,[8]]]],[[21,6,12],18],[[21,6,12],[[7,[18]]]],[21,18],[21,[[7,[18]]]],[[6,6],8],[[6,6],[[7,[8]]]],[28,[[29,[18]]]],[28,[[29,[26]]]],[28,[[29,[8]]]],[[19,6],26],[[19,6],[[7,[26]]]],[[21,6,12,47],18],[[21,6,12,47],[[7,[18]]]],[[21,6,6],18],[[21,6,6],[[7,[18]]]],[[21,6],18],[[21,6],[[7,[18]]]],[18],[26],[8],[26,6],[8,6],[[]],[[]],[[]],[[]],[[]],[18,31],[26,31],0,0,[45,18],[26,6],[8,6],[18,6],[26,6],[18,6],[26,6],[26,6],[8,6],[[18,8],26],[8,6],[18,6],[26,6],[18,6],[26,6],[[8,1]],[[8,1]],[[28,28],[[29,[18]]]],[[28,28],[[29,[26]]]],[[28,28],[[29,[8]]]],[[18,18],[[7,[17]]]],[[26,26],[[7,[17]]]],[[31,31],[[7,[17]]]],[[8,8],[[7,[17]]]],[18,18],[18,[[7,[18]]]],[26,6],[8,6],[[18,18],1],[[26,26],1],[[8,8],1],[[18,15]],[[18,18],1],[[18,1],18],[[26,26],1],[[26,5],26],[[26,1],26],[[8,1],8],[[8,5],8],[[8,8],1],[[18,1]],[[26,1]],[[8,1]],[18,18],[18,[[7,[18]]]],[26,8],[26,19],[26,19],[26,19],[26,19],[26,6],[26,6],[26,6],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],33],[[],33],[[],33],[[],33],[[],33],[[18,12],45],[31,6],[31,6],[18,12],[26,12],[[18,6],[[7,[18]]]],[[26,6],[[7,[26]]]],[[18,6],[[7,[18]]]],[[26,6],[[7,[26]]]],[[26,6],[[7,[26]]]],[[8,6],[[7,[8]]]],[[26,6],[[7,[26]]]],[[8,6],[[7,[8]]]],[[18,6],[[7,[18]]]],[[26,6],[[7,[26]]]],[[18,6],[[7,[18]]]],[[26,6],[[7,[26]]]],[[26,6],[[7,[26]]]],[[8,6],[[7,[8]]]],[[18,6],[[7,[18]]]],[[26,6],[[7,[26]]]],[[18,6],[[7,[18]]]],[[26,6],[[7,[26]]]],[[26,6],[[7,[26]]]],[[8,6],[[7,[8]]]],[[18,21],[[7,[18]]]],[[26,21],[[7,[26]]]],[18,21],[26,21],[31,21],0,0,0,0,0,0,0,0,0,[[[44,[[3,[2]]]],6,6,6,6],[[44,[[4,[2]]]]]],[[[44,[[3,[2]]]],6,6,6,6],[[44,[[4,[2]]]]]],[[[44,[[3,[2]]]],6,6,6,6],[[44,[[4,[2]]]]]],[[[44,[[3,[2]]]],6,6,6],[[44,[[4,[2]]]]]],[[[44,[[3,[2]]]],8],[[44,[[4,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[20,20],[[[44,[9]]],[[44,[9]]]],[[28,28],[[29,[4]]]],[44,7],[21,5],[21,[[7,[5]]]],[[5,5],23],[[20,20],23],[[[44,[48]],44],23],[[],5],[5,5],[20,5],[[5,24],25],[[5,24],25],[[20,24],25],[[20,24],25],[[[44,[49]],24],25],[[]],[[]],[[]],[18,[[44,[3]]]],[26,[[44,[4]]]],[[]],[5,5],[20,20],[18,3],[26,4],[5],[[[44,[50]]]],[[]],[[]],[[]],[[21,6,12],3],[[21,6,12],[[44,[3]]]],[44,7],[5,21],[[44,51],44],[18,44],[[5,18],[[44,[5]]]],[[20,18],[[44,[20]]]],[26,44],[[5,26],[[44,[5]]]],[[20,26],[[44,[20]]]],[18],[[5,18],5],[[20,18],20],[26],[[5,26],5],[[20,26],20],[44,7],[[19,6],4],[19,4],[19,[[44,[4]]]],[19,4],[[19,6],[[44,[4]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],33],[[],33],[[],33],[[[44,[49]]],49],[5,21],[21,5],[21,[[7,[5]]]],[[21,6,6],3],[[21,6,6],[[44,[3]]]],[[21,6],3],[[21,6],[[44,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Duration"],[8,"TimeZone"],[3,"Date"],[3,"DateTime"],[3,"FixedOffset"],[15,"u32"],[4,"Option"],[3,"NaiveTime"],[8,"Clone"],[4,"SecondsFormat"],[4,"RoundingError"],[4,"Weekday"],[3,"ParseWeekdayError"],[4,"Month"],[3,"Months"],[3,"ParseMonthError"],[4,"Ordering"],[3,"NaiveDate"],[15,"i64"],[3,"Utc"],[15,"i32"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"NaiveDateTime"],[3,"Duration"],[15,"str"],[6,"ParseResult"],[15,"u64"],[3,"IsoWeek"],[15,"u16"],[3,"TypeId"],[3,"InternalNumeric"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[3,"InternalFixed"],[4,"Item"],[3,"ParseError"],[4,"ParseErrorKind"],[3,"Parsed"],[3,"StrftimeItems"],[4,"LocalResult"],[3,"NaiveWeek"],[3,"RangeInclusive"],[15,"u8"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[8,"FnMut"],[8,"DurationRound"],[8,"Datelike"],[8,"Timelike"],[8,"SubsecRound"],[13,"Internal"],[13,"Literal"],[13,"Space"],[13,"Numeric"],[13,"Fixed"],[13,"Internal"],[8,"Offset"],[13,"Single"],[13,"Ambiguous"]]},\
"cobs":{"doc":"","t":[13,3,3,13,13,3,4,4,3,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["AddSingle","CobsDecoder","CobsEncoder","DataComplete","DataContinue","DecodeReport","DecodeResult","DecoderState","EncoderState","Grab","GrabChain","Idle","ModifyFromStartAndPushAndSkip","ModifyFromStartAndSkip","NoData","PushResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","decode","decode_in_place","decode_in_place_report","decode_in_place_with_sentinel","decode_with_sentinel","default","dst_used","encode","encode_with_sentinel","feed","feed","finalize","finalize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","max_encoding_length","new","new","push","push","push","src_used","try_encode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0"],"q":["cobs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cobs::DecodeResult","cobs::DecoderState","","cobs::PushResult","",""],"d":["The returned byte should be placed at the current end of …","The <code>CobsDecoder</code> type is used to decode a stream of bytes …","The <code>CobsEncoder</code> type is used to encode a stream of bytes …","We have received a complete and well-encoded COBS message. …","The following byte should be appended to the current end …","A report of the source and destination bytes used during …","<code>DecodeResult</code> represents the possible non-error outcomes of …","The <code>DecoderState</code> is used to track the current state of a …","The <code>EncoderState</code> is used to track the current state of a …","1-254 bytes, can be header or 00","255 bytes, will be a header next","State machine has not received any non-zero bytes","The byte at the given index should be replaced with the …","The byte at the given index should be replaced with the …","The given input byte did not prompt an output byte, either …","<code>PushResult</code> is used to represent the changes to an (encoded)","","","","","","","","","","","","","","","","Decodes the <code>source</code> buffer into the <code>dest</code> buffer.","Decodes a message in-place.","Decodes a message in-place.","Decodes a message in-place using an arbitrary sentinel …","Decodes the <code>source</code> buffer into the <code>dest</code> buffer using an …","Create a default initial state representation for a COBS …","","Encodes the <code>source</code> buffer into the <code>dest</code> buffer.","Encodes the <code>source</code> buffer into the <code>dest</code> buffer using an …","Push a single byte into the streaming CobsDecoder. Return …","Push a single encoded byte into the state machine. If the …","Complete encoding of the output message. Does NOT terminate","Finalize the encoding process for a single message. The …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calculates the maximum possible size of an encoded message …","Create a new streaming Cobs Decoder. Provide the output …","Create a new streaming Cobs Encoder","Push a slice of bytes into the streaming CobsDecoder. …","Push a slice of data to be encoded","Push a single unencoded byte into the encoder state machine","","Attempts to encode the <code>source</code> buffer into the <code>dest</code> buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[13,0,0,9,9,0,0,0,0,8,8,8,13,13,9,0,9,13,6,8,4,10,1,9,13,6,8,4,10,1,1,0,0,0,0,0,1,4,0,0,6,8,10,1,6,8,4,10,1,9,13,6,8,4,10,1,9,13,6,8,4,10,1,0,6,10,6,10,1,4,0,9,13,6,8,4,10,1,9,13,6,8,4,10,1,9,13,6,8,4,10,1,15,16,17,18,19,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[],[[3,[2]]]],[[],[[3,[2]]]],[[],[[3,[4]]]],[5,[[3,[2]]]],[5,[[3,[2]]]],[[],1],0,[[],2],[5,2],[[6,5],[[3,[[7,[2]],2]]]],[[8,5],[[3,[9]]]],[10,[[3,[2]]]],[1],[[6,11],12],[[8,11],12],[[4,11],12],[[10,11],12],[[1,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[],6],[[],10],[6,[[3,[7,2]]]],[10,3],[[1,5],13],0,[[],[[3,[2]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0],"p":[[3,"EncoderState"],[15,"usize"],[4,"Result"],[3,"DecodeReport"],[15,"u8"],[3,"CobsDecoder"],[4,"Option"],[4,"DecoderState"],[4,"DecodeResult"],[3,"CobsEncoder"],[3,"Formatter"],[6,"Result"],[4,"PushResult"],[3,"TypeId"],[13,"DataContinue"],[13,"Grab"],[13,"GrabChain"],[13,"AddSingle"],[13,"ModifyFromStartAndSkip"],[13,"ModifyFromStartAndPushAndSkip"]]},\
"convert_case":{"doc":"Converts to and from various cases.","t":[13,13,4,8,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Alternating","Camel","Case","Casing","Cobol","Flat","FromCasing","Kebab","Lower","Pascal","ScreamingSnake","Snake","Title","Toggle","Train","Upper","UpperCamel","UpperFlat","UpperSnake","all_cases","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","from_case","from_case","into","into","to_case","to_case","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["convert_case","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Alternating case strings are delimited by spaces.  …","Camel case strings are lowercase, but for every word …","Defines the type of casing a string can be.","Describes items that can be converted into a case.","Cobol case strings are delimited by hyphens <code>-</code> and are all …","Flat case strings are all lowercase, with no delimiter.  …","Holds information about parsing before converting into a …","Kebab case strings are delimited by hyphens <code>-</code> and are all …","Lowercase strings are delimited by spaces and all …","Pascal case strings are lowercase, but for every word the …","Screaming snake case is an alternative name for upper …","Snake case strings are delimited by underscores <code>_</code> and are …","Title case strings are delimited by spaces. Only the …","Toggle case strings are delimited by spaces.  All …","Train case strings are delimited by hyphens <code>-</code>.  All …","Uppercase strings are delimited by spaces and all …","Upper camel case is an alternative name for Pascal case.","Upper flat case strings are all uppercase, with no …","Upper snake case strings are delimited by underscores <code>_</code> …","Returns a vector with all case enum variants.  This was …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>FromCasing</code> struct, which saves information about …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","References <code>self</code> and converts to the given case.","","","","","","","",""],"i":[1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,6,1,1,1,1,1,6,1,10,6,6,1,10,6,1,6,1,6,1,6,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[[]],[[]],[[]],[[]],[1,1],[[]],[[1,1],3],[[1,4],5],[[]],[[]],[1,6],[[6,1],6],[[]],[[]],[1,7],[[6,1],7],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9]],"p":[[4,"Case"],[3,"Vec"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"FromCasing"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"Casing"]]},\
"cow_fork":{"doc":"","t":[17,17,5,5,5,5,5,5,5],"n":["DEPTH","MAX_NAME","check_main_signature","copy_address_space","copy_page_table","cow_fork","fork_tree","main","trap_handler"],"q":["cow_fork","","","","","","","",""],"d":["","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[0,0,[[]],[[1,[3,[2]]],4],[[1,5,[3,[2]],6],4],[[[3,[2]]],[[4,[7]]]],[[8,9,10,[3,[2]]]],[[]],[11]],"p":[[4,"Pid"],[6,"Page"],[3,"Block"],[6,"Result"],[15,"u32"],[6,"Virt"],[15,"bool"],[3,"Vec"],[3,"String"],[15,"char"],[3,"TrapInfo"]]},\
"derive_more":{"doc":"<code>derive_more</code>","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"eager_fork":{"doc":"","t":[17,17,5,5,5,5,5,5],"n":["DEPTH","MAX_NAME","check_main_signature","copy_address_space","copy_page_table","eager_fork","fork_tree","main"],"q":["eager_fork","","","","","","",""],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[0,0,[[]],[1,2],[[1,3,4],2],[[],[[2,[5]]]],[[6,7,8]],[[]]],"p":[[4,"Pid"],[6,"Result"],[15,"u32"],[6,"Virt"],[15,"bool"],[3,"Vec"],[3,"String"],[15,"char"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":[4,2,13,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,12,12],"n":["Either","Left","Left","Right","Right","all","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow_mut","clone","clone_from","cmp","collect","count","deref","deref_mut","either","either_into","either_with","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","find","find_map","flip","fmt","fmt","fold","for_both","for_each","from","from","hash","into","into","into_future","into_inner","into_iter","into_iter","is_left","is_right","last","left","left_and_then","left_or","left_or_default","left_or_else","len","map","map_left","map_right","next","next_back","nth","partial_cmp","partition","poll","position","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","try_from","try_into","try_left","try_right","type_id","unwrap_left","unwrap_right","0","0"],"q":["either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","either::Either",""],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","","A value of type <code>L</code>.","","A value of type <code>R</code>.","","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","Evaluate the provided expression for both <code>Either::Left</code> and …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","Map <code>f</code> over the contained value and return the result in the","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","","","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","Returns the left value","Returns the right value","",""],"i":[0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,20,21],"f":[0,0,0,0,0,[1,2],[1,2],[1],[1,3],[1],[1,1],[[[4,[1]]],[[1,[4,4]]]],[[[4,[1]]],[[1,[4,4]]]],[1,3],[1,1],[1],[1],[[]],[[]],[[[1,[5,5]]],[[1,[5,5]]]],[[[1,[5,5]],[1,[5,5]]]],[[[1,[6,6]],1],7],[1],[1,8],[1],[1],[1],[1],[1],[[[1,[9,9]],1],2],[[1,3]],[[1,3]],[1],[[[1,[10,10]]],[[10,[1]]]],[1],[[[1,[11,11]]],[[11,[1]]]],[[[1,[10,10]]],[[10,[1]]]],[1],[1,11],[1,11],[1,1],[[[1,[12,12]],13],14],[[1,13],14],[1],0,[1],[10,1],[[]],[[[1,[15,15]]]],[1,10],[[]],[[]],[1],[[]],[1,1],[1,2],[1,2],[1,11],[1,11],[1,1],[1],[1],[1],[1,8],[1,1],[1,1],[1,1],[1,11],[1,11],[[1,8],11],[[[1,[16,16]],1],[[11,[7]]]],[1],[[[4,[1]],17],18],[1,[[11,[8]]]],[1,11],[1],[1,11],[1,1],[1],[1],[1],[1],[[],10],[[],10],0,0,[[],19],[1],[1],0,0],"p":[[4,"Either"],[15,"bool"],[15,"str"],[3,"Pin"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[15,"usize"],[8,"PartialEq"],[4,"Result"],[4,"Option"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[8,"PartialOrd"],[3,"Context"],[4,"Poll"],[3,"TypeId"],[13,"Left"],[13,"Right"]]},\
"exit":{"doc":"","t":[5,5,5],"n":["check_main_signature","exit","main"],"q":["exit","",""],"d":["","",""],"i":[0,0,0],"f":[[[]],[1,2],[[]]],"p":[[15,"usize"],[15,"never"]]},\
"hash32":{"doc":"32-bit hashing machinery","t":[8,3,3,8,8,16,3,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["BuildHasher","BuildHasherDefault","FnvHasher","Hash","Hasher","Hasher","Murmur3Hasher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_hasher","build_hasher","clone","default","default","default","eq","finish","finish","finish","fmt","from","from","from","hash","hash_slice","into","into","into","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write"],"q":["hash32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["See <code>core::hash::BuildHasher</code> for details","See <code>core::hash::BuildHasherDefault</code> for details","32-bit Fowler-Noll-Vo hasher","See <code>core::hash::Hash</code> for details","See <code>core::hash::Hasher</code> for details","See <code>core::hash::BuildHasher::Hasher</code>","32-bit MurmurHash3 hasher","","","","","","","See <code>core::hash::BuildHasher.build_hasher</code>","","","","","","","See <code>core::hash::Hasher.finish</code>","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given <code>Hasher</code>.","Feeds a slice of this type into the given <code>Hasher</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>const</code> constructor","","","","","","","","","","See <code>core::hash::Hasher.write</code>","",""],"i":[0,0,0,0,0,12,0,2,3,1,2,3,1,12,1,1,2,3,1,1,7,2,3,1,2,3,1,13,13,2,3,1,1,2,3,1,2,3,1,2,3,1,7,2,3],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1,1],[[],2],[[],3],[[],1],[[1,1],4],[[],5],[2,5],[3,5],[[[1,[[0,[6,7]]]],8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[]],[2],[3]],"p":[[3,"BuildHasherDefault"],[3,"FnvHasher"],[3,"Murmur3Hasher"],[15,"bool"],[15,"u32"],[8,"Default"],[8,"Hasher"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"BuildHasher"],[8,"Hash"]]},\
"heapless":{"doc":"<code>static</code> friendly data structures that don’t require …","tn":["Arc","BinaryHeap","Deque","Entry","FnvIndexMap","FnvIndexSet","HistoryBuffer","IndexMap","IndexSet","LinearMap","Occupied","OccupiedEntry","OldestOrdered","String","Vacant","VacantEntry","Vec","as_mut","as_mut","as_mut_ptr","as_mut_slices","as_mut_str","as_mut_vec","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","as_slices","as_str","back","back_mut","binary_heap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","capacity","capacity","capacity","clear","clear","clear","clear","clear","clear","clear","clear_with","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","contains_key","contains_key","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","difference","drop","drop","drop","drop","ends_with","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","extend_from_slice","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_slice","from_str","front","front_mut","get","get","get","get_mut","get_mut","get_mut","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","insert","insert","insert","insert","insert","intersection","into","into","into","into","into","into","into","into","into","into","into","into_array","into_bytes","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_full","is_full","is_subset","is_superset","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","key","key","keys","keys","last","last","last_mut","len","len","len","len","len","mpmc","ne","ne","ne","new","new","new","new","new","new","new","new_with","next","oldest_ordered","partial_cmp","partial_cmp","pool","pop","pop","pop_back","pop_back_unchecked","pop_front","pop_front_unchecked","pop_unchecked","push","push","push_back","push_back_unchecked","push_front","push_front_unchecked","push_str","push_unchecked","recent","remove","remove","remove","remove","remove","remove_entry","resize","resize_default","retain","retain_mut","serialize","serialize","serialize","serialize","serialize","set_len","sorted_linked_list","spsc","starts_with","swap_remove","swap_remove","swap_remove_unchecked","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","values","values","values_mut","values_mut","write","write_char","write_str","write_str","0","0","BinaryHeap","Kind","Max","Min","PeekMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from","from","from","into","into","into","into","into_iter","into_vec","is_empty","iter","iter_mut","len","new","peek","peek_mut","pop","pop","pop_unchecked","push","push_unchecked","serialize","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","MpMcQueue","Q16","Q2","Q32","Q4","Q64","Q8","borrow","borrow_mut","default","dequeue","enqueue","from","into","new","try_from","try_into","type_id","Box","Init","Node","Pool","Uninit","alloc","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","deref","deref_mut","eq","fmt","fmt","free","from","from","from","from","from","grow","grow_exact","hash","init","into","into","into","into","into","new","partial_cmp","singleton","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Box","Data","Pool","alloc","arc","as_mut","as_ref","borrow","borrow_mut","cmp","deref","deref_mut","drop","eq","fmt","fmt","forget","freeze","from","grow","grow_exact","hash","init","into","partial_cmp","to_string","try_from","try_into","type_id","Arc","ArcInner","Data","Pool","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","drop","eq","fmt","fmt","from","from","hash","into","into","new","partial_cmp","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","FindMut","Iter","Kind","LinkedIndexU16","LinkedIndexU8","LinkedIndexUsize","Max","Min","Node","SortedLinkedList","SortedLinkedListIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref_mut","drop","drop","eq","eq","eq","find_mut","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_iter","is_empty","is_full","iter","new_u16","new_u8","new_usize","next","partial_cmp","partial_cmp","partial_cmp","peek","pop","pop","pop_unchecked","push","push_unchecked","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Consumer","Iter","IterMut","Producer","Queue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clone","clone","clone_into","clone_into","default","dequeue","dequeue","dequeue_unchecked","dequeue_unchecked","drop","enqueue","enqueue","enqueue_unchecked","enqueue_unchecked","eq","fmt","from","from","from","from","from","hash","hash","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_full","iter","iter_mut","len","len","len","new","next","next","next_back","next_back","peek","peek","ready","ready","split","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["heaplessheapless::Entry","","heapless::binary_heap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::mpmc","","","","","","","","","","","","","","","","","","heapless::pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::pool::singleton","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::pool::singleton::arc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::sorted_linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::spsc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A fixed capacity double-ended queue.","A view into an entry in the map","A <code>heapless::IndexMap</code> using the default FNV hasher","A <code>heapless::IndexSet</code> using the default FNV hasher. A list …","A “history buffer”, similar to a write-only ring …","Fixed capacity <code>IndexMap</code>","Fixed capacity <code>IndexSet</code>.","A fixed capacity map / dictionary that performs lookups …","The entry corresponding to the key <code>K</code> exists in the map","An occupied entry which can be manipulated","An iterator on the underlying buffer ordered from oldest …","A fixed capacity <code>String</code>","The entry corresponding to the key <code>K</code> does not exist in the …","A view into an empty slot in the underlying map","A fixed capacity <code>Vec</code>","","","Returns a raw pointer to the vector’s buffer, which may …","Returns a pair of mutable slices which contain, in order, …","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","Returns a raw pointer to the vector’s buffer.","","","","","","Returns the array slice backing the buffer, without …","Extracts a slice containing the entire vector.","Returns a pair of slices which contain, in order, the …","Extracts a string slice containing the entire string.","Provides a reference to the back element, or None if the …","Provides a mutable reference to the back element, or None …","A priority queue implemented with a binary heap.","","","","","","","","","","","","","","","","","","","","","","","Returns the maximum number of elements the deque can hold.","Returns the capacity of the buffer, which is the length of …","Returns the number of elements the map can hold","Returns the number of elements the set can hold","Returns the number of elements that the map can hold","Returns the maximum number of elements the String can hold","Returns the maximum number of elements the vector can hold.","Clears the deque, removing all values.","Clears the buffer, replacing every element with the …","Remove all key-value pairs in the map, while preserving …","Clears the set, removing all values.","Clears the map, removing all key-value pairs","Truncates this <code>String</code>, removing all contents.","Clears the vector, removing all values.","Clears the buffer, replacing every element with the given …","","","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns true if the map contains a value for the specified …","Returns true if the map contains a value for the specified …","","","","","","","","","","","","","","","","","","Visits the values representing the difference, i.e. the …","","","","","Returns <code>true</code> if <code>needle</code> is a suffix of the Vec.","Returns an entry for the corresponding key","","","","","","","","","","","","","","","","","","","","Extends the vec from an iterator.","","Clones and writes all elements in a slice to the buffer.","Clones and appends all elements in a slice to the <code>Vec</code>.","Get the first key-value pair","Get the first value","Get the first key-value pair, with mutable access to the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Constructs a new vector with a fixed capacity of <code>N</code> and …","","Provides a reference to the front element, or None if the …","Provides a mutable reference to the front element, or None …","Gets a reference to the value associated with this entry","Returns a reference to the value corresponding to the key.","Returns a reference to the value corresponding to the key","Gets a mutable reference to the value associated with this …","Returns a mutable reference to the value corresponding to …","Returns a mutable reference to the value corresponding to …","","","","","","","","","Overwrites the underlying map’s value with this entry’…","Inserts this entry into to underlying map, yields a …","Inserts a key-value pair into the map.","Adds a value to the set.","Inserts a key-value pair into the map.","Inserts an element at position <code>index</code> within the vector, …","Visits the values representing the intersection, i.e. the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the contents of the vector as an array of length <code>M</code> …","Converts a <code>String</code> into a byte vector.","","","","","","","","","","","","","Consumes this entry to yield to key associated with it","Consumes this entry and yields a reference to the …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns whether the deque is empty.","Returns true if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns true if the map contains no elements","Returns true if the vec is empty","Returns whether the deque is full (i.e. if …","Returns true if the vec is full","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Examples","Returns an iterator over the deque.","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the values of the set, in their …","An iterator visiting all key-value pairs in arbitrary …","Returns an iterator that allows modifying each value.","Return an iterator over the key-value pairs of the map, in …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key that this entity corresponds to","Get the key associated with this entry","Return an iterator over the keys of the map, in their order","An iterator visiting all keys in arbitrary order","Get the last key-value pair","Get the last value","Get the last key-value pair, with mutable access to the …","Returns the number of elements currently in the deque.","Returns the current fill level of the buffer.","Return the number of key-value pairs in the map.","Returns the number of elements in the set.","Returns the number of elements in this map","A fixed capacity Multiple-Producer Multiple-Consumer …","","","","Constructs a new, empty deque with a fixed capacity of <code>N</code>","Constructs a new history buffer.","Creates an empty <code>IndexMap</code>.","Creates an empty <code>IndexSet</code>","Creates an empty <code>LinearMap</code>","Constructs a new, empty <code>String</code> with a fixed capacity of <code>N</code> …","Constructs a new, empty vector with a fixed capacity of <code>N</code>","Constructs a new history buffer, where every element is …","","Returns an iterator for iterating over the buffer from …","","","A heap-less, interrupt-safe, lock-free memory pool (*)","Removes the last character from the string buffer and …","Removes the last element from a vector and returns it, or …","Removes the item from the back of the deque and returns …","Removes an item from the back of the deque and returns it, …","Removes the item from the front of the deque and returns …","Removes an item from the front of the deque and returns …","Removes the last element from a vector and returns it","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the front of the deque","Appends an <code>item</code> to the front of the deque","Appends a given string slice onto the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Returns a reference to the most recently written value.","Removes this entry from the map and yields its value","Same as <code>swap_remove</code>","Removes a value from the set. Returns <code>true</code> if the value …","Removes a key from the map, returning the value at the key …","Removes and returns the element at position <code>index</code> within …","Removes this entry from the map and yields its …","Resizes the Vec in-place so that len is equal to new_len.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","","","","","","Forces the length of the vector to <code>new_len</code>.","A fixed sorted priority linked list, similar to <code>BinaryHeap</code> …","Fixed capacity Single Producer Single Consumer (SPSC) queue","Returns <code>true</code> if <code>needle</code> is a prefix of the Vec.","Remove the key-value pair equivalent to <code>key</code> and return its …","Removes an element from the vector and returns it.","Removes an element from the vector and returns it.","Visits the values representing the symmetric difference, …","","","","","","","","","Shortens this <code>String</code> to the specified length.","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visits the values representing the union, i.e. all the …","Return an iterator over the values of the map, in their …","An iterator visiting all values in arbitrary order","Return an iterator over mutable references to the the …","An iterator visiting all values mutably in arbitrary order","Writes an element to the buffer, overwriting the oldest …","","","","","","A priority queue implemented with a binary heap.","The binary heap kind: min-heap or max-heap","Max-heap","Min-heap","Structure wrapping a mutable reference to the greatest …","","","","","","","","","Returns the capacity of the binary heap.","Drops all items from the binary heap.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the underlying <code>Vec&lt;T,N&gt;</code>. Order is arbitrary and …","Checks if the binary heap is empty.","Returns an iterator visiting all values in the underlying …","Returns a mutable iterator visiting all values in the …","Returns the length of the binary heap.","Creates an empty BinaryHeap as a $K-heap.","Returns the <em>top</em> (greatest if max-heap, smallest if …","Returns a mutable reference to the greatest item in the …","Removes the <em>top</em> (greatest if max-heap, smallest if …","Removes the peeked value from the heap and returns it.","Removes the <em>top</em> (greatest if max-heap, smallest if …","Pushes an item onto the binary heap.","Pushes an item onto the binary heap without first checking …","","","","","","","","","","","","","","","MPMC queue with a capacity for N elements N must be a …","MPMC queue with a capability for 16 elements.","MPMC queue with a capability for 2 elements.","MPMC queue with a capability for 32 elements.","MPMC queue with a capability for 4 elements.","MPMC queue with a capability for 64 elements.","MPMC queue with a capability for 8 elements.","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Adds an <code>item</code> to the end of the queue","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates an empty queue","","","","A memory block","Initialized type state","Unfortunate implementation detail required to use the …","A lock-free memory pool","Uninitialized type state","Claims a memory block from the pool","","","","","","","","","","","","","","","","","","","Returns a memory block to the pool","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Increases the capacity of the pool","Increases the capacity of the pool","","Initializes this memory block","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty pool","","<code>Pool</code> as a global singleton","","","","","","","","","","","","","","","","","A memory block that belongs to the global memory pool, <code>POOL</code>","The type of data that can be allocated on this pool","A global singleton memory pool","Claims a memory block from the pool","Like <code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather …","","","","","","","","","","","","Forgets the contents of this memory block without running …","(DO NOT USE, SEE DEPRECATION) Freezes the contents of this …","Returns the argument unchanged.","Increases the capacity of the pool","Increases the capacity of the pool","","Initializes this memory block","Calls <code>U::from(self)</code>.","","","","","","<code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather than …","Unfortunate implementation detail required to use the …","The data behind the Arc pointer","Pool of Arc pointers","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>Arc</code>","","","","","","","","","","Comes from <code>SortedLinkedList::find_mut</code>.","Iterator for the linked list.","The linked list kind: min-list or max-list","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Marker for Max sorted <code>SortedLinkedList</code>.","Marker for Min sorted <code>SortedLinkedList</code>.","A node in the <code>SortedLinkedList</code>.","The linked list.","Trait for defining an index for the linked list, never …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find an element in the list that can be changed and …","This will resort the element into the correct position in …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the linked list is empty.","Checks if the linked list is full.","Get an iterator over the sorted list.","Create a new linked list.","Create a new linked list.","Create a new linked list.","","","","","Peek at the first element.","Pops the first element in the list.","This will pop the element from the list.","Pop an element from the list without checking so the list …","Pushes an element to the linked list and sorts it into …","Pushes a value onto the list without checking if the list …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A queue “consumer”; it can dequeue items from the queue","An iterator over the items of a queue","A mutable iterator over the items of a queue","A queue “producer”; it can enqueue items into the queue","A statically allocated single producer single consumer …","","","","","","","","","","","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","","","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, without …","Returns the item in the front of the queue, without …","","Adds an <code>item</code> to the end of the queue","Adds an <code>item</code> to the end of the queue, returns back the <code>item</code>…","Adds an <code>item</code> to the end of the queue, without checking if …","Adds an <code>item</code> to the end of the queue, without checking if …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if the queue is empty","Returns <code>true</code> if the queue is full","Iterates from the front of the queue to the back","Returns an iterator that allows modifying each value","Returns the number of elements in the queue","Returns the number of elements in the queue","Returns the number of elements in the queue","Creates an empty queue with a fixed capacity of <code>N - 1</code>","","","","","Returns a reference to the item in the front of the queue …","Returns the item in the front of the queue without …","Returns if there are any items to dequeue. When this …","Returns if there is any space to enqueue a new item. When …","Splits a queue into producer and consumer endpoints","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,17,0,0,0,17,0,0,1,1,1,2,3,3,1,5,3,3,1,1,5,1,2,3,2,2,0,2,5,17,30,31,8,9,10,3,1,12,2,5,17,30,31,8,9,10,3,1,12,2,5,8,9,10,3,1,2,5,8,9,10,3,1,5,2,8,9,10,3,1,12,2,8,9,10,3,1,12,3,1,9,8,10,2,5,8,9,10,3,1,5,3,1,3,1,8,9,10,3,1,9,2,5,10,1,1,8,8,9,10,3,3,3,1,1,1,1,1,1,5,5,8,8,9,9,1,1,1,5,1,8,9,8,2,5,8,9,10,3,3,1,2,5,17,30,31,8,9,10,3,3,3,3,3,3,3,3,3,3,1,12,8,9,10,3,3,3,1,1,3,2,2,30,8,10,30,8,10,3,3,1,1,8,10,8,10,30,31,8,9,10,1,9,2,5,17,30,31,8,9,10,3,1,12,1,3,2,2,2,8,8,8,9,10,1,1,1,12,31,30,9,2,8,9,10,1,2,1,9,9,2,8,9,10,2,8,10,30,31,8,10,8,9,8,2,5,8,9,10,0,3,3,3,2,5,8,9,10,3,1,5,12,5,3,1,0,3,1,2,2,2,2,1,3,1,2,2,2,2,3,1,5,30,8,9,10,1,30,1,1,1,1,8,9,10,3,1,1,0,0,1,8,1,1,9,2,8,9,10,3,1,12,3,3,1,2,5,17,30,31,8,9,10,3,1,1,12,2,5,17,30,31,8,9,10,3,1,12,2,5,17,30,31,8,9,10,3,1,12,9,8,10,8,10,5,3,3,1,60,61,0,0,0,0,0,62,63,37,38,62,63,37,38,37,37,37,37,37,38,38,37,38,37,62,63,37,38,62,63,37,38,37,37,37,37,37,37,37,37,37,37,38,37,37,37,37,37,62,63,37,38,62,63,37,38,62,63,37,38,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,42,44,44,64,42,44,43,46,64,42,44,43,46,44,44,44,44,44,44,42,64,42,44,43,46,42,42,44,44,64,42,44,43,46,42,44,0,44,64,42,44,43,46,64,42,44,43,46,64,42,44,43,46,0,65,0,65,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,65,65,47,47,47,47,47,47,47,47,0,0,66,0,48,48,67,48,67,48,48,48,48,48,48,48,48,48,67,48,48,67,48,48,48,48,48,67,48,67,48,67,0,0,0,0,0,0,0,0,0,0,0,68,69,70,53,54,52,49,50,51,68,69,70,53,54,52,49,50,51,49,50,51,49,50,51,49,50,51,52,52,53,52,49,50,51,53,52,53,49,50,51,68,69,70,53,54,52,49,50,51,68,69,70,53,54,52,49,50,51,54,53,53,53,53,53,53,54,49,50,51,53,53,52,53,53,53,49,50,51,68,69,70,53,54,52,49,50,51,68,69,70,53,54,52,49,50,51,68,69,70,53,54,52,49,50,51,0,0,0,0,0,55,58,59,56,57,55,58,59,56,57,55,56,57,55,58,55,58,55,55,56,55,56,55,55,57,55,57,55,55,55,58,59,56,57,55,55,55,58,59,56,57,55,55,58,59,55,55,55,55,55,56,57,55,58,59,58,59,55,56,56,57,55,55,58,55,58,59,56,57,55,58,59,56,57,55,58,59,56,57],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1,1],[1],[2],[3,4],[3,1],[1],[5],[3],[3,4],[1],[1,1],[5],[1],[2],[3,4],[2,6],[2,6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,7],[5,7],[8,7],[9,7],[10,7],[3,7],[1,7],[2],[5],[8],[9],[10],[3],[1],[5],[2,2],[8,8],[9,9],[10,10],[3,3],[1,1],[[[12,[11]]],[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],13],[[1,1],13],[9,14],[8,14],[10,14],[[],2],[[],5],[[],8],[[],9],[[],10],[[],3],[[],1],[5],[3,4],[1],[3,4],[1],[[],[[16,[[8,[15]]]]]],[[],[[16,[[9,[15]]]]]],[[],[[16,[10]]]],[[],[[16,[3]]]],[[],[[16,[1]]]],0,[2],[5],[10],[1],[1,14],[8,17],[[8,8],14],[[9,9],14],[[10,10],14],[[3,4],14],[[3,4],14],[[3,3],14],[1,14],[[1,1],14],[1,14],[1,14],[1,14],[1,14],[5],[5],[8],[8],[9],[9],[1],[1],[1],[5],[1,16],[8,6],[9,6],[8,6],[[[2,[18]],19],20],[[5,19],20],[[8,19],20],[[9,19],20],[[10,19],20],[[3,19],20],[[3,19],20],[[1,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,3],[22,3],[23,3],[24,3],[25,3],[26,3],[27,3],[4,3],[[]],[28,3],[[]],[[]],[[],8],[[],9],[[],10],[29,3],[29,3],[29,3],[[],1],[[],[[16,[1]]]],[4,[[16,[3]]]],[2,6],[2,6],[30],[8,6],[10,6],[30],[8,6],[10,6],[3],[3],[1],[1],[8],[10],[8],[10],[30],[31,16],[8,[[16,[6]]]],[9,[[16,[14]]]],[10,[[16,[6]]]],[[1,7],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[16,[1]]]],[3,[[1,[25]]]],[2],[2],[2],[8],[8],[8],[9],[10],[1],[1],[1],[[]],[31],[30],[[9,9],14],[2,14],[8,14],[9,14],[10,14],[1,14],[2,14],[1,14],[[9,9],14],[[9,9],14],0,0,0,0,0,0,0,[30],[31],[8,32],[10,32],[8,6],[9,6],[8,6],[2,7],[5,7],[8,7],[9,7],[10,7],0,[[3,4],14],[[3,4],14],[[3,3],14],[[],2],[[],5],[[],[[8,[15]]]],[[],[[9,[15]]]],[[],10],[[],3],[[],1],[[],5],[12,6],[5,12],[[3,3],[[6,[13]]]],[[1,1],[[6,[13]]]],0,[3,[[6,[33]]]],[1,6],[2,6],[2],[2,6],[2],[1],[[3,33],16],[1,16],[2,16],[2],[2,16],[2],[[3,4],16],[1],[5,6],[30],[8,6],[9,14],[10,6],[[1,7]],[30],[[1,7],16],[[1,7],16],[1],[1],[8,16],[9,16],[10,16],[3,16],[1,16],[[1,7]],0,0,[1,14],[8,6],[[1,7]],[[1,7]],[[9,9],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[3,7]],[[1,7]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],[[16,[[1,[11]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[9,9],32],[8,32],[10,32],[8,32],[10,32],[5],[[3,33],[[16,[36]]]],[[3,4],[[16,[36]]]],[[[1,[25]],4],20],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,7],[37],[37,37],[[]],[[],37],[38],[38],[[],[[16,[37]]]],[38],[[37,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37],[37,1],[37,14],[37,39],[37,40],[37,7],[[],37],[37,6],[37,[[6,[38]]]],[37,6],[38],[37],[37,16],[37],[37,16],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],0,0,0,0,0,0,0,[[]],[[]],[[],41],[41,6],[41,16],[[]],[[]],[[],41],[[],16],[[],16],[[],35],0,0,0,0,0,[42,[[6,[[44,[43]]]]]],[44],[44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44],13],[44],[44],[[44,44],14],[[44,19],20],[[44,19],20],[[42,44]],[[]],[[]],[[]],[[]],[[]],[42,7],[[42,45],7],[44],[[[44,[43]]],[[44,[46]]]],[[]],[[]],[[]],[[]],[[]],[[],42],[[44,44],[[6,[13]]]],0,[[],34],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,0,[[],[[6,[[47,[43]]]]]],0,[47],[47],[[]],[[]],[[47,47],13],[47],[47],[47],[[47,47],14],[[47,19],20],[[47,19],20],[[[47,[46]]],[[47,[43]]]],[[[47,[43]]],[[47,[46]]]],[[]],[[],7],[45,7],[47],[[[47,[43]]],[[47,[46]]]],[[]],[[47,47],[[6,[13]]]],[[],34],[[],16],[[],16],[[],35],0,0,0,0,[48],[[]],[[]],[[]],[[]],[48,48],[[]],[[48,48],13],[48],[48],[[48,48],14],[[48,19],20],[[48,19],20],[[]],[[]],[48],[[]],[[]],[[],[[16,[48]]]],[[48,48],[[6,[13]]]],[[]],[[],34],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,49],[50,50],[51,51],[[]],[[]],[[]],[[49,49],13],[[50,50],13],[[51,51],13],[52],[52],[53],[52],[[49,49],14],[[50,50],14],[[51,51],14],[53,[[6,[52]]]],[52],[[53,19],20],[[49,19],20],[[50,19],20],[[51,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,14],[53,14],[53,54],[[],[[53,[50]]]],[[],[[53,[49]]]],[[],[[53,[51]]]],[54,6],[[49,49],[[6,[13]]]],[[50,50],[[6,[13]]]],[[51,51],[[6,[13]]]],[53,6],[53,16],[52],[53],[53,16],[53],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,7],[56,7],[57,7],[55,55],[58,58],[[]],[[]],[[],55],[55,6],[56,6],[55],[56],[55],[55,16],[57,16],[55],[57],[[55,55],14],[[55,19],20],[[]],[[]],[[]],[[]],[[]],[55],[55],[[]],[[]],[[]],[[]],[[]],[55],[55],[[]],[[]],[55,14],[55,14],[55,58],[55,59],[55,7],[56,7],[57,7],[[],55],[58,6],[59,6],[58,6],[59,6],[55,6],[56,6],[56,14],[57,14],[55],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35]],"p":[[3,"Vec"],[3,"Deque"],[3,"String"],[15,"str"],[3,"HistoryBuffer"],[4,"Option"],[15,"usize"],[3,"IndexMap"],[3,"IndexSet"],[3,"LinearMap"],[8,"Clone"],[3,"OldestOrdered"],[4,"Ordering"],[15,"bool"],[3,"BuildHasherDefault"],[4,"Result"],[4,"Entry"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"i8"],[15,"u64"],[15,"u32"],[15,"u16"],[15,"u8"],[15,"i64"],[15,"i32"],[15,"i16"],[8,"IntoIterator"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Iterator"],[15,"char"],[3,"String"],[3,"TypeId"],[3,"Error"],[3,"BinaryHeap"],[3,"PeekMut"],[3,"Iter"],[3,"IterMut"],[3,"MpMcQueue"],[3,"Pool"],[4,"Uninit"],[3,"Box"],[19,"MaybeUninit"],[4,"Init"],[3,"Box"],[3,"Arc"],[3,"LinkedIndexU8"],[3,"LinkedIndexU16"],[3,"LinkedIndexUsize"],[3,"FindMut"],[3,"SortedLinkedList"],[3,"Iter"],[3,"Queue"],[3,"Consumer"],[3,"Producer"],[3,"Iter"],[3,"IterMut"],[13,"Occupied"],[13,"Vacant"],[4,"Min"],[4,"Max"],[3,"Node"],[8,"Pool"],[8,"Pool"],[3,"ArcInner"],[3,"Min"],[3,"Max"],[3,"Node"]]},\
"itertools":{"doc":"Extra iterator adaptors, functions and macros.","tn":["Both","Continue","Diff","Done","Either","EitherOrBoth","First","FirstMismatch","FoldWhile","Itertools","Last","Left","Left","Longer","Middle","MinMax","MinMaxResult","MultiUnzip","NoElements","OneElement","Only","PeekingNext","Position","Right","Right","Shorter","all","all","all_equal","any","any","as_mut","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","as_ref","assert_equal","at_most_one","batching","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both","cartesian_product","chain","chain","circular_tuple_windows","clone","clone","clone","clone","clone","clone_from","cloned","cmp","coalesce","collect","collect_tuple","concat","concat","cons_tuples","contains","count","dedup","dedup_by","dedup_by_with_count","dedup_with_count","deref","deref_mut","diff_with","dropping","dropping_back","either","either_into","either_with","enumerate","eq","eq","eq","eq","eq","equal","exactly_one","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","filter_map_ok","filter_ok","find","find_map","find_or_first","find_or_last","find_position","flatten_ok","flip","flip","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold1","fold_ok","fold_options","fold_results","fold_while","for_each","foreach","format","format_with","from","from","from","from","from","from","from","has_left","has_right","hash","hash","interleave","interleave","interleave_shortest","intersperse","intersperse","intersperse_with","intersperse_with","into","into","into","into","into","into","into","into","into_future","into_inner","into_inner","into_inner","into_iter","into_iter","into_option","iproduct","is_both","is_done","is_left","is_left","is_right","is_right","iterate","izip","last","left","left","left_and_then","left_and_then","left_or","left_or_default","left_or_else","len","map","map_any","map_into","map_left","map_left","map_ok","map_results","map_right","map_right","max","merge","merge","merge_by","merge_join_by","merge_join_by","min","minmax","minmax_by","minmax_by_key","multiunzip","multiunzip","multiunzip","multizip","next","next_back","next_tuple","nth","or_default","pad_using","partial_cmp","partition","partition","partition_map","partition_result","peeking_next","peeking_take_while","poll","position","position_max","position_max_by","position_max_by_key","position_min","position_min_by","position_min_by_key","position_minmax","position_minmax_by","position_minmax_by_key","positions","process_results","product1","put_back","reduce","repeat_call","repeat_n","rev","rfind","rfold","right","right","right_and_then","right_and_then","right_or","right_or_default","right_or_else","set_from","size_hint","step","structs","sum1","take_while_ref","traits","tree_fold1","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tuple_combinations","tuple_windows","tuples","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unwrap_left","unwrap_right","update","while_some","with_position","zip","zip_eq","zip_eq","zip_longest","0","0","0","1","1","1","2","0","0","0","0","0","1","0","0","0","0","1","0","0","0","0","Batching","CircularTupleWindows","Coalesce","ConsTuples","Dedup","DedupBy","DedupByWithCount","DedupWithCount","ExactlyOneError","FilterMapOk","FilterOk","FlattenOk","Format","FormatWith","Interleave","InterleaveShortest","Intersperse","IntersperseWith","Iterate","MapInto","MapOk","MapResults","Merge","MergeBy","MergeJoinBy","PadUsing","PeekingTakeWhile","Positions","ProcessResults","Product","PutBack","RepeatCall","RepeatN","Step","TakeWhileRef","TupleBuffer","TupleCombinations","TupleWindows","Tuples","Unfold","Update","WhileSome","WithPosition","Zip","ZipEq","ZipLongest","all","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","collect","collect","collect","count","count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_parts","last","last","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","peeking_next","put_back","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","state","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_value","HomogeneousTuple"],"q":["itertools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","itertools::Diff","","","","","","","itertools::Either","","itertools::EitherOrBoth","","","","itertools::FoldWhile","","itertools::MinMaxResult","","","itertools::Position","","","","itertools::structsitertools::traits"],"d":["Both values are present.","Continue folding with this value","A type returned by the <code>diff_with</code> function.","Fold is complete and will return this value","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Value that either holds a single A or B, or both.","This is the first element.","The index of the first non-matching element along with …","An enum used for controlling the execution of <code>fold_while</code>.","An <code>Iterator</code> blanket implementation that provides extra …","This is the last element.","A value of type <code>L</code>.","Only the left value of type <code>A</code> is present.","The total number of elements that were in <code>I</code> along with the …","This is neither the first nor the last element.","More than one element in the iterator, the first element …","<code>MinMaxResult</code> is an enum returned by <code>minmax</code>.","An iterator that can be unzipped into multiple collections.","Empty iterator","Iterator with one element, so the minimum and maximum are …","This is the only element.","An iterator that allows peeking at an element before …","A value yielded by <code>WithPosition</code>. Indicates the position of …","A value of type <code>R</code>.","Only the right value of type <code>B</code> is present.","The total number of elements that were in <code>J</code> along with the …","Test whether the predicate holds for all elements in the …","","Check whether all elements compare equal.","Test whether the predicate holds for any elements in the …","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","Converts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to …","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","Converts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;A, &amp;B&gt;</code>.","Assert that two iterables produce equal sequences, with …","If the iterator yields no elements, Ok(None) will be …","A “meta iterator adaptor”. Its closure receives a …","","","","","","","","","","","","","If Both, return <code>Some</code> tuple containing left and right.","Return an iterator adaptor that iterates over the …","Create an iterator that first iterates <code>i</code> and then <code>j</code>.","Chain zero or more iterators together into one sequence.","Return an iterator over all windows, wrapping back to the …","","","","","","","Create an iterator that clones each element from &amp;T to T","","Return an iterator adaptor that uses the passed-in closure …","","Collects all items from the iterator into a tuple of a …","Combine all an iterator’s elements into one element by …","Combine all an iterator’s elements into one element by …","Create an iterator that maps for example iterators of …","Returns <code>true</code> if the given item is present in this iterator.","","Remove duplicates from sections of consecutive identical …","Remove duplicates from sections of consecutive identical …","Remove duplicates from sections of consecutive identical …","Remove duplicates from sections of consecutive identical …","","","Compares every element yielded by both <code>i</code> and <code>j</code> with the …","Consume the first <code>n</code> elements from the iterator eagerly, …","Consume the last <code>n</code> elements from the iterator eagerly, and …","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","Iterate <code>iterable</code> with a running index.","","","","","","Return <code>true</code> if both iterables produce equal sequences …","If the iterator yields exactly one element, that element …","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Return an iterator adaptor that filters and transforms …","Return an iterator adaptor that filters every <code>Result::Ok</code> …","","","Find the value of the first element satisfying a predicate …","Find the value of the first element satisfying a predicate …","Find the position and value of the first element …","Return an iterator adaptor that flattens every <code>Result::Ok</code> …","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","Convert <code>EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;B, A&gt;</code>.","","","","","","","Perform a fold operation over the iterable.","","Accumulator of the elements in the iterator.","Fold <code>Result</code> values from an iterator.","Fold <code>Option</code> values from an iterator.","See <code>.fold_ok()</code>.","An iterator method that applies a function, producing a …","","Run the closure <code>f</code> eagerly on each element of the iterator.","Format all iterator elements, separated by <code>sep</code>.","Format all iterator elements, separated by <code>sep</code>.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If <code>Left</code>, or <code>Both</code>, return true, otherwise, return false.","If <code>Right</code>, or <code>Both</code>, return true, otherwise, return false.","","","Create an iterator that interleaves elements in <code>i</code> and <code>j</code>.","Alternate elements from two iterators until both have run …","Alternate elements from two iterators until at least one …","Iterate <code>iterable</code> with a particular value inserted between …","An iterator adaptor to insert a particular value between …","Iterate <code>iterable</code> with a particular value created by a …","An iterator adaptor to insert a particular value created …","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","Return the inner value.","Return the value in the continue or done.","","Convert the inner value to an iterator.","<code>into_option</code> creates an <code>Option</code> of type <code>(T, T)</code>. The returned …","Create an iterator over the “cartesian product” of …","If Right, return true otherwise, return false. Equivalent …","Return true if <code>self</code> is <code>Done</code>, false if it is <code>Continue</code>.","Return true if the value is the <code>Left</code> variant.","If Left, return true otherwise, return false. Exclusive …","Return true if the value is the <code>Right</code> variant.","If Right, return true otherwise, return false. Exclusive …","Creates a new iterator that infinitely applies function to …","Create an iterator running multiple iterators in lockstep.","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","If <code>Left</code>, or <code>Both</code>, return <code>Some</code> with the left value, …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","Map <code>f</code> over the contained value and return the result in the","Apply the functions <code>f</code> and <code>g</code> on the value <code>a</code> and <code>b</code> …","Convert each item of the iterator using the <code>Into</code> trait.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or …","Return an iterator adaptor that applies the provided …","See <code>.map_ok()</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Apply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or …","Return the maximum value of the iterable.","Create an iterator that merges elements in <code>i</code> and <code>j</code>.","Return an iterator adaptor that merges the two base …","Return an iterator adaptor that merges the two base …","Return an iterator adaptor that merge-joins items from the …","Create an iterator that merges items from both this and …","Return the minimum value of the iterable.","Return the minimum and maximum elements in the iterator.","Return the minimum and maximum element of an iterator, as …","Return the minimum and maximum element of an iterator, as …","Converts an iterator of tuples into a tuple of containers.","Unzip this iterator into multiple collections.","Converts an iterator of tuples into a tuple of containers.","An iterator that generalizes <em>.zip()</em> and allows running …","","","Advances the iterator and returns the next items grouped …","","Returns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …","Return an iterator adaptor that pads the sequence to a …","","Partition a sequence using predicate <code>pred</code> so that elements …","","Collect all iterator elements into one of two partitions. …","Partition a sequence of <code>Result</code>s into one list of all the <code>Ok</code>…","Pass a reference to the next iterator element to the …","Return an iterator adaptor that borrows from this iterator …","","","Return the position of the maximum element in the iterator.","Return the position of the maximum element in the …","Return the position of the maximum element in the …","Return the position of the minimum element in the iterator.","Return the position of the minimum element in the …","Return the position of the minimum element in the …","Return the positions of the minimum and maximum elements in","Return the postions of the minimum and maximum elements of …","Return the postions of the minimum and maximum elements of …","Return an iterator adaptor that yields the indices of all …","“Lift” a function of the values of an iterator so that …","Iterate over the entire iterator and multiply all the …","Create an iterator where you can put back a single item","Return either value of left, right, or the product of <code>f</code> …","An iterator source that produces elements indefinitely by …","Create an iterator that produces <code>n</code> repetitions of <code>element</code>.","Iterate <code>iterable</code> in reverse.","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","If <code>Right</code>, or <code>Both</code>, return <code>Some</code> with the right value, …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Apply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","Assign to each reference in <code>self</code> from the <code>from</code> iterator, …","","Return an iterator adaptor that steps <code>n</code> elements in the …","The concrete iterator types.","Iterate over the entire iterator and add all the elements.","Return an iterator adaptor that borrows from a <code>Clone</code>-able …","Traits helpful for using certain <code>Itertools</code> methods in …","Accumulate the elements in the iterator in a tree-like …","","","","","","","","","","","","","Return an iterator adaptor that iterates over the …","Return an iterator over all contiguous windows producing …","Return an iterator that groups the items in tuples of a …","","","","","","","Creates a new unfold source with the specified closure as …","Returns the left value","Returns the right value","Return an iterator adaptor that applies a mutating function","Return an iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator …","Return an iterator adaptor that wraps each element in a …","Iterate <code>i</code> and <code>j</code> in lock step.","Iterate <code>i</code> and <code>j</code> in lock step.","Create an iterator which iterates over both this and the …","Create an iterator which iterates over both this and the …","","","","","","","","","","","","","","","","","","","","","","","A “meta iterator adaptor”. Its closure receives a …","An iterator over all windows,wrapping back to the first …","An iterator adaptor that may join together adjacent …","An iterator that maps an iterator of tuples like …","An iterator adaptor that removes repeated duplicates.","An iterator adaptor that removes repeated duplicates, …","An iterator adaptor that removes repeated duplicates, …","An iterator adaptor that removes repeated duplicates, …","Iterator returned for the error case of …","An iterator adapter to filter and apply a transformation …","An iterator adapter to filter values within a nested …","An iterator adaptor that flattens <code>Result::Ok</code> values and …","Format all iterator elements lazily, separated by <code>sep</code>.","Format all iterator elements lazily, separated by <code>sep</code>.","An iterator adaptor that alternates elements from two …","An iterator adaptor that alternates elements from the two …","An iterator adaptor to insert a particular value between …","An iterator adaptor to insert a particular value created …","An iterator that infinitely applies function to value and …","An iterator adapter to apply <code>Into</code> conversion to each …","An iterator adapter to apply a transformation within a …","See <code>MapOk</code>.","An iterator adaptor that merges the two base iterators in …","An iterator adaptor that merges the two base iterators in …","An iterator adaptor that merge-joins items from the two …","An iterator adaptor that pads a sequence to a minimum …","An iterator adaptor that takes items while a closure …","An iterator adapter to get the positions of each element …","An iterator that produces only the <code>T</code> values as long as the …","An iterator adaptor that iterates over the cartesian …","An iterator adaptor that allows putting back a single item …","See <code>repeat_call</code> for more information.","An iterator that produces <em>n</em> repetitions of an element.","An iterator adaptor that steps a number elements in the …","An iterator adaptor that borrows from a <code>Clone</code>-able iterator","An iterator over a incomplete tuple.","An iterator to iterate through all combinations in a <code>Clone</code>…","An iterator over all contiguous windows that produces …","An iterator that groups the items in tuples of a specific …","See <code>unfold</code> for more information.","An iterator adapter to apply a mutating function to each …","An iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator …","An iterator adaptor that wraps each element in an <code>Position</code>.","See <code>multizip</code> for more information.","An iterator which iterates two other iterators …","An iterator which iterates two other iterators …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a buffer with the produced items that was not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Split the <code>PutBack</code> into its parts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Put back a single value to the front of the iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal state that will be passed to the closure on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","put back value <code>value</code> (builder method)","Implemented for homogeneous tuples of size up to 12."],"i":[4,16,0,16,0,0,15,26,0,0,15,2,4,26,15,14,0,0,14,14,15,0,0,2,4,26,0,2,75,0,2,2,2,2,2,4,2,2,2,2,2,2,4,0,75,75,2,26,4,14,15,16,2,26,4,14,15,16,4,75,0,0,75,2,4,14,15,16,2,0,2,75,2,75,0,75,0,75,2,75,75,75,75,2,2,0,75,75,2,2,2,0,2,4,14,15,16,0,75,2,2,2,2,2,2,2,2,75,75,2,2,75,75,75,75,2,4,2,2,4,14,15,16,0,2,75,75,75,75,75,2,75,75,75,2,2,26,4,14,15,16,4,4,2,4,0,75,75,0,75,0,75,2,2,26,4,4,14,15,16,2,2,15,16,2,2,14,0,4,16,2,4,2,4,0,0,2,2,4,2,4,2,2,2,2,2,4,75,2,4,75,75,2,4,0,0,75,75,0,75,0,75,75,75,0,76,75,0,2,2,75,2,4,75,2,0,2,75,75,77,75,2,2,75,75,75,75,75,75,75,75,75,75,0,75,0,4,0,0,0,2,2,2,4,2,4,2,2,2,75,2,75,0,75,75,0,75,2,26,4,14,15,16,2,26,4,14,15,16,75,75,75,2,26,4,14,15,16,0,2,2,75,75,75,0,0,75,75,78,79,80,78,79,80,78,81,82,83,84,85,83,86,87,88,89,89,90,91,92,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,47,31,48,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,57,56,65,43,72,63,62,70,71,49,29,30,66,48,55,47,60,29,31,48,51,39,40,55,10,9,59,67,61,30,54,66,20,7,7,37,36,36,36,36,36,36,36,36,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,29,55,10,30,66,20,20,20,20,20,20,20,20,20,20,42,73,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,49,49,49,49,49,49,49,49,49,49,49,49,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,63,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,42,50,73,57,56,65,43,72,63,62,12,70,71,49,55,48,55,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,20,20,20,20,20,20,20,20,20,7,42,50,73,57,56,65,43,72,63,62,12,70,71,49,49,49,49,49,49,49,49,49,49,49,49,31,54,66,20,20,20,20,20,20,20,20,20,20,50,57,71,49,49,49,49,49,49,49,49,49,49,49,49,48,55,55,55,47,60,29,31,48,51,68,39,40,55,10,59,67,30,54,66,20,20,20,20,20,20,20,20,20,20,7,42,50,73,57,56,43,72,70,71,49,49,49,49,49,49,49,49,49,49,49,49,65,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,47,60,29,31,48,51,68,39,40,55,10,9,59,67,61,30,54,66,20,7,37,36,42,50,73,57,56,65,43,72,63,62,12,70,71,49,55,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[[],1],[[],1],[2,1],[2],[2],[2,3],[2,2],[4,4],[[[5,[2]]],[[2,[5,5]]]],[[[5,[2]]],[[2,[5,5]]]],[2,2],[2],[2],[2,3],[4,4],[[]],[[],[[8,[6,7]]]],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,6],[[],10],[[],11],0,[[],12],[2,2],[[[4,[13,13]]],[[4,[13,13]]]],[[[14,[13]]],[[14,[13]]]],[[[15,[13]]],[[15,[13]]]],[[[16,[13]]],[[16,[13]]]],[[2,2]],[[],17],[[2,2],18],[[],19],[2],[[],6],[[]],[[]],[[],20],[[],1],[2,21],[[],22],[[],23],[[],24],[[],25],[2],[2],[[],[[6,[26]]]],[21],[21],[2],[2],[2],[[],27],[[2,2],1],[[[4,[28,28]],4],1],[[[14,[28]],14],1],[[[15,[28]],15],1],[[[16,[28]],16],1],[[],1],[[],[[8,[7]]]],[[2,3]],[[2,3]],[2],[[[2,[8,8]]],[[8,[2]]]],[2],[[[2,[6,6]]],[[6,[2]]]],[[[2,[8,8]]],[[8,[2]]]],[2],[[],29],[[],30],[2,6],[2,6],[[],6],[[],6],[[],6],[[],31],[2,2],[4,4],[[2,32],[[8,[33]]]],[[2,32],[[8,[33]]]],[[[4,[34,34]],32],35],[[[14,[34]],32],35],[[[15,[34]],32],35],[[[16,[34]],32],35],[[]],[2],[[],6],[[],8],[[],6],[[],8],[[],16],[2],[[]],[3,36],[3,37],[[]],[8,2],[[]],[[]],[[]],[[]],[[]],[4,1],[4,1],[2],[[[4,[38,38]]]],[[],39],[[],39],[[],40],[[],41],[[],41],[[],42],[[],42],[[]],[2,8],[[]],[[]],[4,[[6,[2]]]],[[]],[[]],[[]],[[]],[2],[15],[16],[[]],[2,2],[[[14,[13]]],6],0,[4,1],[16,1],[2,1],[4,1],[2,1],[4,1],[[],43],0,[2,6],[2,6],[4,6],[2,2],[4,4],[2],[2],[2],[2,21],[2,2],[4,4],[[],44],[2,2],[4,4],[[],45],[[],45],[2,2],[4,4],[[],6],[[],46],[[],46],[[],47],[[],48],[[],48],[[],6],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[],49],[2,6],[2,6],[[],6],[[2,21],6],[4],[21,50],[[2,2],[[6,[18]]]],[[],21],[2],[[]],[[]],[[],6],[[],51],[[[5,[2]],52],53],[2,[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[6,[21]]]],[[],[[14,[21]]]],[[],[[14,[21]]]],[[],[[14,[21]]]],[[],54],[[],8],[[],6],[[],55],[4],[[],56],[21,57],[[],58],[2,6],[2],[2,6],[4,6],[2,2],[4,4],[2],[2],[2],[[],21],[2],[21,59],0,[[],6],[[],60],0,[[],6],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],61],[[],62],[[],63],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],65],[2],[2],[[],66],[[],67],[[],68],[[],69],[[],70],[[],70],[[],71],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[31,31],[48,48],[68,68],[[[39,[13,13]]],[[39,[13,13]]]],[[[40,[13,13]]],[[40,[13,13]]]],[[[55,[13]]],[[55,[13]]]],[[[10,[13,13]]],[[10,[13,13]]]],[[[9,[13,13]]],[[9,[13,13]]]],[[[59,[13]]],[[59,[13]]]],[[[67,[13]]],[[67,[13]]]],[[[61,[13,13]]],[[61,[13,13]]]],[[[30,[13,13]]],[[30,[13,13]]]],[[[54,[13,13]]],[[54,[13,13]]]],[[[66,[13,13]]],[[66,[13,13]]]],[20,20],[[[7,[13]]],[[7,[13]]]],[[[37,[13,13]]],[[37,[13,13]]]],[[[36,[13]]],[[36,[13]]]],[[[42,[13,13]]],[[42,[13,13]]]],[[[50,[13,13]]],[[50,[13,13]]]],[[[57,[13]]],[[57,[13]]]],[[[56,[13]]],[[56,[13]]]],[[[65,[13,13]]],[[65,[13,13]]]],[[[43,[13,13]]],[[43,[13,13]]]],[[[72,[13]]],[[72,[13]]]],[[[63,[13,13]]],[[63,[13,13]]]],[[[62,[13,13]]],[[62,[13,13]]]],[[[70,[13,13]]],[[70,[13,13]]]],[[[71,[13,13]]],[[71,[13,13]]]],[[[49,[13]]],[[49,[13]]]],[29],[30],[66],[48,21],[55,21],[[47,32],35],[[60,32],35],[[29,32],35],[[31,32],35],[[48,32],35],[[51,32],35],[[[39,[34,34]],32],35],[[[40,[34,34]],32],35],[[[55,[34]],32],35],[[[10,[34,34]],32],35],[[9,32],35],[[[59,[34]],32],35],[[[67,[34]],32],35],[[[61,[34,34]],32],35],[[30,32],35],[[54,32],35],[[66,32],35],[[[20,[34,34]],32],35],[[7,32],35],[[7,32],35],[[37,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[36,32],35],[[[42,[34,34]],32],35],[[50,32],35],[[[73,[34,34]],32],35],[[[57,[34]],32],35],[[56,32],35],[[65,32],35],[[43,32],35],[[[72,[34]],32],35],[[[63,[34,34]],32],35],[[[62,[34,34]],32],35],[[[12,[34,[0,[34,13]]]],32],35],[[[70,[34,34]],32],35],[[[71,[34,34]],32],35],[[[49,[34]],32],35],[29],[55],[10],[30],[66],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[42],[73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[]],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55],[48,6],[55,6],[47,6],[60,6],[29,6],[31,6],[48,6],[51,6],[[[68,[74]]],6],[39,6],[40,6],[55,6],[10,6],[9,6],[59,6],[67,6],[61,6],[30,6],[54,6],[66,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[7,6],[42,6],[50,6],[73,6],[57,6],[56,6],[65,6],[43,6],[72,6],[63,6],[62,6],[12,6],[70,6],[71,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[31,6],[54,6],[66,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[50,6],[57,6],[71,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[49,6],[[48,21],6],[[55,21],6],[55,6],[55],[47],[60],[29],[31],[48],[51],[[[68,[74]]]],[39],[40],[55],[10],[59],[67],[30],[54],[66],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[7],[42],[50],[73],[57],[56],[43],[72],[70],[71],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[55,55],0],"p":[[15,"bool"],[4,"Either"],[15,"str"],[4,"EitherOrBoth"],[3,"Pin"],[4,"Option"],[3,"ExactlyOneError"],[4,"Result"],[3,"Batching"],[3,"Product"],[3,"Chain"],[3,"CircularTupleWindows"],[8,"Clone"],[4,"MinMaxResult"],[4,"Position"],[4,"FoldWhile"],[3,"Cloned"],[4,"Ordering"],[6,"Coalesce"],[3,"ConsTuples"],[15,"usize"],[6,"Dedup"],[6,"DedupBy"],[6,"DedupByWithCount"],[6,"DedupWithCount"],[4,"Diff"],[3,"Enumerate"],[8,"PartialEq"],[3,"FilterMapOk"],[3,"FilterOk"],[3,"FlattenOk"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[6,"Result"],[3,"Format"],[3,"FormatWith"],[8,"Hash"],[3,"Interleave"],[3,"InterleaveShortest"],[6,"Intersperse"],[3,"IntersperseWith"],[3,"Iterate"],[6,"MapInto"],[6,"MapOk"],[6,"Merge"],[3,"MergeBy"],[3,"MergeJoinBy"],[3,"Zip"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Context"],[4,"Poll"],[3,"Positions"],[3,"PutBack"],[3,"RepeatCall"],[3,"RepeatN"],[3,"Rev"],[3,"Step"],[3,"TakeWhileRef"],[3,"TupleCombinations"],[3,"TupleWindows"],[3,"Tuples"],[3,"TypeId"],[3,"Unfold"],[3,"Update"],[3,"WhileSome"],[3,"WithPosition"],[3,"Zip"],[3,"ZipEq"],[3,"ZipLongest"],[3,"TupleBuffer"],[3,"ProcessResults"],[8,"Iterator"],[8,"Itertools"],[8,"MultiUnzip"],[8,"PeekingNext"],[13,"FirstMismatch"],[13,"Shorter"],[13,"Longer"],[13,"Left"],[13,"Right"],[13,"Both"],[13,"Left"],[13,"Right"],[13,"Continue"],[13,"Done"],[13,"OneElement"],[13,"MinMax"],[13,"First"],[13,"Middle"],[13,"Last"],[13,"Only"]]},\
"kernel":{"doc":"","t":[18,18,3,17,18,18,18,18,17,18,18,18,18,18,18,18,7,3,8,18,11,11,5,0,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,11,5,5,11,11,0,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,5,0,11,11,10,11,11,0,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,7,3,11,11,11,11,11,11,5,11,11,0,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,17,13,17,3,13,3,4,17,17,13,0,12,12,0,0,0,0,0,0,12,0,12,18,3,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,12,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,3,3,18,17,17,18,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,12,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,13,13,17,3,3,4,3,17,17,13,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,5,11,11,5,12,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,11,12,11,11,12,11,11,11,11,12,11,11,11,12,11,11,11,11,11,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,17,3,7,17,17,3,3,3,6,6,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,3,17,17,17,13,12,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,5,5,5,11,12,5,11,5,5,5,11,5,11,11,5,5,5,11,11,11,11,11,11,5,5,5,11,11,5,11,11,11,11,11,11,5,5,11,5,11,5,5,5,11,11,12,11,12,11,11,5,5,5,5,5,5,5,11,11,11,5,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,7,5,18,13,4,13,18,7,3,3,3,18,13,18,11,11,11,11,11,11,11,11,12,11,11,14,11,11,11,14,11,11,11,12,11,11,11,11,14,5,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,14,12,3,3,3,13,3,6,4,17,17,13,6,6,18,3,8,17,17,17,6,13,12,12,0,0,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,12,5,11,11,11,11,11,11,12,0,0,12,0,11,11,11,11,0,12,11,5,5,12,11,11,0,11,11,0,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,12,12,12,18,3,18,18,18,18,6,3,8,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,13,4,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,16,3,3,8,18,10,10,11,11,11,11,12,11,10,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,3,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,3,6,6,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,3,6,17,3,6,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,12,18,18,18,18,17,18,18,17,17,18,18,17,17,17,17,17,17,18,6,3,3,17,18,17,17,18,18,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,18,3,8,17,11,5,5,5,12,3,3,17,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,14,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,17,17,3,12,11,11,11,11,11,11,11,11,13,13,18,17,4,3,3,3,12,11,11,11,11,11,5,5,0,11,11,11,12,11,11,12,5,11,11,5,5,5,11,11,12,11,12,0,12,12,0,12,0,11,12,0,0,12,11,11,12,11,11,11,12,12,5,5,5,5,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,18,3,18,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,4,3,3,12,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,3,12,0,0,11,11,0,11,11,5,5,11,0,11,11,11,3,3,11,12,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,5,11,11,11,11,11,11,11,11,5,17,17,17,3,12,5,11,11,5,12,12,12,12,12,11,11,12,5,12,11,12,12,12,11,5,5,12,5,12,5,5,11,11,11,5,3,17,18,11,11,11,12,11,11,11,11,12,5,5,11,11,11,12,11,12,11,11,11,11,11,12,11,11,12,11,12,6,18,18,3,18,18,7,3,18,18,18,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,11,11,0,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,5,11,11,0,0,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,17,18,18,17,18,17,3,18,18,18,17,17,17,17,3,3,3,3,7,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["BOOT_APS","CPUS","ExitCode","FAIL","FAILURE","LOCAL_APIC","MAIN_FRAME_ALLOCATOR","MEMORY","PASS","PHYS_MEMORY","PROCESS","PROCESS_TABLE","SCHEDULER","SMP","SUCCESS","SYSCALL","SYSTEM_INFO","Subsystems","Testable","VIRT_MEMORY","all","all","alloc_error_handler","allocator","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","error","exit_qemu","extend","extend","fail_test","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","fs","halt","hash","hash","init","init_subsystems","insert","insert","interrupts","intersection","intersection","intersects","intersects","into","into","is_all","is_all","is_empty","is_empty","log","memory","not","not","partial_cmp","partial_cmp","pass_test","process","remove","remove","run","set","set","smp","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","test_runner","time","to_owned","to_owned","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","GLOBAL_ALLOCATOR","GlobalAllocator","alloc","alloc_zeroed","borrow","borrow_mut","dealloc","from","info","info","into","memory_allocator","realloc","try_from","try_into","type_id","MemoryAllocator","address_space","allocate","allocate_zeroed","borrow","borrow_mut","deallocate","from","grow","grow_zeroed","into","new","shrink","try_from","try_into","type_id","Elf","Error","FileExists","FileNotFound","Fmt","Int","InvalidArgument","Medium","NoData","NoDisk","NoFrame","NoPage","NoProcess","NoProcessSlot","NotDirectory","NotFile","Null","Overflow","PermissionDenied","Postcard","Result","RingBuffer","Timeout","Unimplemented","WrongAlignment","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","from","from","from","into","to_owned","try_from","try_into","type_id","0","0","0","0","0","BLOCK_SIZE","Directory","FIRST_BITMAP_BLOCK","File","File","FileSystem","Kind","MAX_NAME_LEN","SUPERBLOCK_BLOCK","Unused","block_bitmap","block_bitmap","block_bitmap","block_cache","directory_entry","disk","file","file_system","inode","inode","superblock","superblock","BITS_PER_ENTRY","BlockBitmap","allocate","bitmap","bitmap","block_count","borrow","borrow_mut","clone","clone_into","cursor","fmt","format","free_block_count","from","into","is_free","new","new_unchecked","reserved_block_count","set_free","size_in_blocks","to_owned","try_from","try_into","type_id","validate","BLOCK_CACHE","BlockCache","SECTORS_PER_BLOCK","__private_field","block","borrow","borrow","borrow_mut","borrow_mut","cache","clone","clone_into","deref","disk","flush","flush_block","fmt","from","from","get","init","into","into","to_owned","trap_handler","try_from","try_from","try_into","try_into","type_id","type_id","DirectoryEntry","MAX_NAME_LEN","borrow","borrow_mut","fmt","fmt","from","inode","inode","inode_mut","into","name","name","set_name","to_string","try_from","try_into","type_id","Command","Disk","READ","SECTOR_SIZE","TIMEOUT_IN_SECONDS","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","id","ins32","insert","intersection","intersects","into","into","io_disk","io_disk","io_port","io_port","is_all","is_empty","new","not","outs32","partial_cmp","pio_read","pio_write","remove","send_command","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_string","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","wait_ready","Entry","File","block_bitmap","block_bitmap","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","find","fmt","fmt","fmt","from","from","from","inode","inode","insert","into","into","kind","kind","kind","list","modify_time","modify_time","modify_time","name","name","new","read","remove","set_kind","set_size","size","size","size","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","write","FileSystem","block_bitmap","borrow","borrow_mut","drop","flush","fmt","format","free_space","from","into","mount","open","reserved_space","superblock","try_from","try_into","type_id","used_space","0","Directory","File","INDIRECT_BLOCK_ARITY","Inode","Iter","Kind","List","MAX_HEIGHT","NO_BLOCK","Unused","block","block","block_entry","block_number","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","entry","eq","extend","find","find_entry","find_tree","fmt","fmt","fmt","from","from","from","from","inode","insert","into","into","into","into","into_iter","into_iter","iter","kind","kind","list","max_size","modify_time","modify_time","next","next","next_level","read","remove","remove_tree","root_blocks","set_kind","set_size","size","size","to_owned","to_string","traverse_tree","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","ENDIAN","MAGIC","Superblock","block_count","block_count","borrow","borrow_mut","endian","fmt","format","from","into","magic","new","new_unchecked","root","root","set_block_count","try_from","try_into","type_id","validate","0","0","0","ALIGNMENT_CHECK","APIC_BASE","APIC_SPURIOUS","APIC_TIMER","ATA0","ATA1","BOUND_RANGE_EXCEEDED","BREAKPOINT","CASCADE","COM1","COM2","COPROCESSOR","COUNT","DEBUG","DEVICE_NOT_AVAILABLE","DIVIDE_ERROR","DOUBLE_FAULT","EXCEPTION_COUNT","FLOPPY_DISK","FREE_29","FREE_2A","FREE_2B","Fatal","GENERAL_PROTECTION_FAULT","IDT","INTERRUPT_STATS","INVALID_OPCODE","INVALID_TSS","Idt","IdtEntry","InterruptContext","InterruptHandler","InterruptStats","KEYBOARD","LPT1","LPT2","MACHINE_CHECK","NON_MASKABLE_INTERRUPT","No","OVERFLOW","PAGE_FAULT","PIC_BASE","PIC_FIRST_INTERRUPT","PS2_MOUSE","RTC","SECURITY_EXCEPTION","SEGMENT_NOT_PRESENT","SIMD_FLOATING_POINT","STACK_SEGMENT_FAULT","Statistics","TIMER","VIRTUALIZATION","X87_FLOATING_POINT","Yes","__private_field","alignment_check","apic_spurious","apic_timer","ata0","ata1","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","cascade","clone","clone_into","com1","com2","coprocessor","count","count","debug","deref","device_not_available","divide_error","double_fault","eq","floppy_disk","fmt","fmt","free_29","free_2a","free_2b","from","from","from","from","from","from","general_protection_fault","generic_pic_interrupt","generic_trap","get","inc","init","into","into","into","into","into","into","invalid_opcode","invalid_tss","is_user_mode","keyboard","load","lpt1","lpt2","machine_check","missing","mnemonic","mnemonic","name","name","new","new","non_maskable_interrupt","overflow","page_fault","ps2_mouse","rtc","security_exception","segment_not_present","set","set_handler","set_handler_with_error","simd_floating_point","stack_segment_fault","test_scaffolding","timer","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","virtualization","x87_floating_point","IDT","set_debug_handler","CPU","Compact","Format","Full","LOCATION","LOG_COLLECTOR","Log","LogCollector","LogEvent","MESSAGE","Timeless","VALUE","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","colour","current_span","debug","debug","enabled","enter","eq","error","event","exit","field","format","from","from","from","from","info","init","into","into","into","into","level","level_colour","log","log_event","log_metadata","new","new","new","new_span","record","record_debug","record_follows_from","separator","str_value_part","trace","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_event","user_events","user_events","warn","0","AddressSpace","BASE_ADDRESS_SPACE","Block","Boot","FRAME_ALLOCATOR","Frame","FrameAllocator","KERNEL_READ","KERNEL_RW","Main","Page","Phys","SIZE_OF","Size","SizeOf","USER","USER_READ","USER_RW","Virt","Void","__private_field","__private_field","addr","address_space","allocate","block","boot_frame_allocator","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","cmp","contains","contains_address","contains_block","count","count","count_up","deallocate","default","default","deref","enclosing","end","end","end_address","eq","eq","fmt","fmt","fmt","fmt","frage","from","from","from","from","from","from_index","from_index_u64","from_ptr","from_ref","from_slice","from_slice","gdt","info","init","into","into","into","into","into_iter","is_used","kind","main_frame_allocator","mapping","mapping","mmu","new","new","new_u64","of","page_allocator","page_allocator","partial_cmp","phys2virt","phys2virt_map","pid","reference","reference_count","size","size","size","stack","start","start","start_address","tag","tail","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_mut","try_into_mut_ptr","try_into_mut_slice","try_into_non_null_slice","try_into_ptr","try_into_ref","try_into_slice","tss","type_id","type_id","type_id","type_id","0","0","0","1","ADDR_NAME","Addr","BITS","FRAGE_NAME","HEX_PREFIX","NEGATIVE_SIGN_EXTEND","Phys","PhysTag","Tag","Virt","VirtTag","add","address","address_by_index","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","eq","eq","eq","fmt","fmt","from","from","from","from","from_index","from_ptr","from_ref","index","into","into","into","into_u64","into_usize","is_high_area","is_same_area","is_same_area","is_same_area","is_same_area","new","new","new","new","new_u64","partial_cmp","partial_cmp","partial_cmp","sub","sub","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_mut","try_into_mut_ptr","try_into_mut_slice","try_into_ptr","try_into_ref","try_into_slice","try_into_u32","type_id","type_id","type_id","AddressSpace","BASE_ADDRESS_SPACE","Base","Invalid","Kind","Process","__private_field","allocate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_permission","check_permission_common","check_permission_mut","default","default","deref","drop","dry_allocate","dry_deallocate","dry_grow","dry_shrink","duplicate","fmt","fmt","fmt","from","from","from","info","info","into","into","into","kind","map","map_block","map_one","map_page","map_page_to_frame","map_slice","map_slice_uninit","map_slice_zeroed","mapping","mapping","new","page_allocator","page_directory","pid","remap","rereserve","reserve","set_pid","switch_to","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmap","unmap_block","unmap_one","unmap_page","unmap_pte","unmap_slice","unreserve","0","1","Address","Block","IntoIter","Memory","NAME","address","address_by_index","borrow","borrow_mut","clone","clone_into","end","from","from_index","index","into","into_iter","is_same_area","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","next","start","tag","to_owned","try_from","try_into","type_id","BootFrameAllocator","allocate","allocate_block","block","borrow","borrow_mut","count","drop","from","initial_block","into","is_managed","is_used","new","try_from","try_into","type_id","0","Frage","Frame","Page","SIZE","address","address","address_by_index","address_by_index","borrow","borrow_mut","clone","clone_into","cmp","containing","default","eq","fmt","fmt","from","from_index","from_index","index","index","index_by_address","into","is_same_area","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","0","1","BASIC_COUNT","GDT","Gdt","MAX_CPUS","RealModePseudoDescriptor","SmallGdt","SmpGdt","TssEntry","__private_field","base","basic","basic_selector","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","eq","eq","fmt","from","from","from","from","init","into","into","into","into","kernel_code","kernel_data","limit","load","new","new","new","real_mode_pseudo_descriptor","set_tss","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tss","tss","type_id","type_id","type_id","type_id","user_code","user_data","Absent","FrameInfo","Free","MainFrameAllocator","Used","allocate","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","count","deallocate","drop","fmt","frame_info","free_count","free_frame","from","from","init","init_frame_info","into","into","is_used","move_free_frames","new","reference","reference_count","to_owned","total_frames","try_from","try_from","try_into","try_into","type_id","type_id","next_free","reference_count","Mapping","borrow","borrow_mut","current_page_directory","default","drop","drop_page_table","duplicate","duplicate_page_table","fmt","from","into","is_valid","make_recursive_mapping","map_intermediate","new","page_directory","page_directory","page_table_mut","page_table_ref","phys2virt","pte_mut","recursive_mapping","translate","try_from","try_into","type_id","0","ACCESSED","AVAILABLE","COPY_ON_WRITE","DIRTY","FULL_ACCESS","GLOBAL","HUGE_PAGE","KERNEL_READ","KERNEL_RW","NO_CACHE","NO_EXECUTE","PAGE_OFFSET_BITS","PAGE_TABLE_ENTRY_COUNT","PAGE_TABLE_INDEX_BITS","PAGE_TABLE_INDEX_MASK","PAGE_TABLE_LEAF_LEVEL","PAGE_TABLE_ROOT_LEVEL","PRESENT","PageTable","PageTableEntry","PageTableFlags","USER","USER_ACCESSIBLE","USER_READ","USER_RW","WRITABLE","WRITE_THROUGH","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","extend","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","not","partial_cmp","present","read_cr3","remove","set","set_flags","set_frame","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","write_cr3","PageAllocator","allocate","block","borrow","borrow_mut","default","find_unused_block","fmt","from","into","new","try_from","try_into","type_id","0","GiB","KiB","MiB","SIZE_OF","Size","SizeOf","TiB","count_up","into_u64","into_usize","try_into_u32","0","EXCEPTION_STACKS","ExceptionStacks","GUARD_ZONE_SIZE","STACK_SIZE","Stack","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","double_fault_rsp","from","from","from","into","into","into","launch_escape_stack","make_guard_zone","make_guard_zones","make_static_stack","new","new","new_slice","new_static","page_fault_rsp","page_fault_stack","pointer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zones","DOUBLE_FAULT_IST_INDEX","PAGE_FAULT_IST_INDEX","TSS","__private_field","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","Current","Id","MAX_COUNT","PROCESS_SLOT_COUNT","Pid","Process","Scheduler","Table","address_space","borrow","borrow_mut","clone","clone_into","cmp","create","create_process","elf","eq","fmt","fmt","free","from","from_usize","info","init","into","into_usize","map_log","map_process_info","map_system_info","new","next_epoch","parent","partial_cmp","pid","process","process_count","queue","registers","registers","scheduler","slot","state","syscall","table","table","to_owned","to_string","trap_context","try_from","try_into","type_id","epoch","slot","extend_mapping","load","load_program_header","memory_block","Process","TrapContext","address_space","address_space","allocator","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contains","default","duplicate","enter_user_mode","eq","flush_log","fmt","fmt","fmt","fmt","from","from","info","info","into","into","is_valid","leave_user_mode","lock_address_space","log","mini_context","mini_context","new","new","parent","parent","pid","pid","preempt","registers","sched_yield","set_context","set_pid","set_state","set_trap_context","stack","state","state","to_owned","to_string","to_string","trap","trap_context","trap_context","try_from","try_from","try_into","try_into","type_id","type_id","CPL_MASK","ModeContext","RING_0","Registers","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cs","duplicate","fmt","fmt","fmt","fmt","from","from","gpr1","gpr2","into","into","is_user_mode","is_user_mode_segment","kernel_context","mini_context","mini_context","mode","new","new","rax","rdi","rflags","rip","rsi","rsp","rsp","sched_yield","set_mini_context","set_mini_context","set_mode_context","ss","switch_from","switch_to","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","user_context","user_context","SCHEDULER","Scheduler","__private_field","borrow","borrow","borrow_mut","borrow_mut","dequeue","deref","enqueue","from","from","init","into","into","queue","run","run_one","try_from","try_from","try_into","try_into","type_id","type_id","check_block","check_frame","check_frames","check_page_flags","check_process_permissions","copy_mapping","exit","exofork","init","log_value","map","map_pages_to_frames","sched_yield","set_state","set_trap_handler","syscall","syscall_trampoline","sysret","unmap","Free","Occupied","Slot","TABLE","Table","__private_field","allocate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","drop","fmt","forge_static_lifetime","free","free","from","from","from","get","into","into","into","new","process_count","table","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","next","pid","process","CPUS","__private_field","acpi_info","ap_init","borrow","borrow_mut","cpu","deref","from","init","init_smp","into","local_apic","try_from","try_into","type_id","AcpiInfo","AcpiMapper","ap_ids","ap_ids","apic","borrow","borrow","borrow_mut","borrow_mut","bsp_id","bsp_id","clone","clone_into","fmt","from","from","into","into","local_apic_address","local_apic_address","map_physical_region","new","phys2virt","platform_info","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unmap_physical_region","usable_aps","BOOT_CODE","BOOT_CODE_PLUS_STACK_SIZE","BOOT_STACK","BootStack","_padding","boot_ap","borrow","borrow_mut","copy_switch_mode_code","cpu","cr0","cr3","cr4","efer","fmt","from","gdt_pseudo_descriptor","init_ap","initialized","into","kernel_code","kernel_data","kernel_stack","new","prepare_boot_code","real_mode_address","set_cs_rip_to_64bit","signal_initialized","small_gdt","switch_from_real_mode_to_long_mode","switch_mode_code_size","try_from","try_into","type_id","wait_initialized","Cpu","KERNEL_RSP_OFFSET_IN_CPU","STACKS_PER_CPU","borrow","borrow_mut","current_process","current_process","drop","from","get","id","id","init","init_cpu_vec","into","kernel_context","kernel_stack","kernel_stack","new","page_fault_stack","set_current_process","set_fs","set_tss","set_user_context","take_user_context","this","try_from","try_into","tss","type_id","user_context","CpuId","ID_SHIFT","INIT","InterruptCommand","LEVEL_ASSERT","LEVEL_DEASSERT","LOCAL_APIC","LocalApic","SEND_PENDING","START_UP","TRIGGER_MODE_LEVEL","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","disable_lvts","empty","enable","end_of_interrupt","eoi","eq","error_status_register","extend","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","hash","id","id","init","init_timer","insert","interrupt_command_hi","interrupt_command_lo","intersection","intersects","into","into","is_all","is_empty","lvt_performance_counter_overflow","lvt_termal_sensor","lvt_timer","map","not","partial_cmp","register","remove","send_init","send_ipi","set","spurious","sub","sub_assign","symmetric_difference","timer_current_count","timer_divide_configuration","timer_initial_count","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","zero","0","Register","borrow","borrow_mut","clone","clone_into","from","get","into","set","to_owned","try_from","try_into","type_id","update","zero","0","0","0","Hz","Tsc","TscDuration","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","delay","deserialize","elapsed","eq","eq","fmt","fmt","fmt","fmt","from","from","from","has_passed","init","into","into","into","into_f64","lap","new","now","now","now_ms","partial_cmp","partial_cmp","pit8254","rtc","serialize","timer","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","init","interrupt","ADDRESS_PORT","ALARM_INTERRUPT","ALARM_INTERRUPT","DATA_PORT","DAYLIGHT_SAVING","DISABLE_NMI","Date","INTERRUPT","PERIODIC_INTERRUPT","PERIODIC_INTERRUPT","REGISTER_A","REGISTER_B","REGISTER_C","REGISTER_D","RegisterA","RegisterB","RegisterC","RegisterD","SETTINGS","SET_CLOCK","SQUARE_WAVE","UPDATE_ENDED_INTERRUPT","UPDATE_ENDED_INTERRUPT","UPDATE_IN_PROGRESS","USE_24_HOUR_FORMAT","USE_BINARY_FORMAT","VALID_RAM_AND_TIME","all","all","all","all","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","complement","complement","complement","contains","contains","contains","contains","day","default","difference","difference","difference","difference","empty","empty","empty","empty","enable_next_interrupt","eq","eq","eq","eq","eq","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hour","init","insert","insert","insert","insert","interrupt","interrupt_status","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_time_valid","minute","month","not","not","not","not","parse_hour","parse_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","read","read_inconsistent","remove","remove","remove","remove","rtc_read","rtc_write","second","set","set","set","set","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","union","union","year"],"q":["kernel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::allocator","","","","","","","","","","","","","","","","kernel::allocator::memory_allocator","","","","","","","","","","","","","","","","kernel::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::error::Error","","","","","kernel::fs","","","","","","","","","","","","","","","","","","","","","","kernel::fs::block_bitmap","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::fs::block_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::fs::directory_entry","","","","","","","","","","","","","","","","","","kernel::fs::disk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::fs::file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::fs::file_system","","","","","","","","","","","","","","","","","","","kernel::fs::inode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::fs::superblock","","","","","","","","","","","","","","","","","","","","","","kernel::interrupts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::interrupts::test_scaffolding","","kernel::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::FrameAllocator","","kernel::memory::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::address_space","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::boot_frame_allocator","","","","","","","","","","","","","","","","","kernel::memory::frage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::gdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::main_frame_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::main_frame_allocator::FrameInfo","","kernel::memory::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::mmu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::page_allocator","","","","","","","","","","","","","","kernel::memory::size","","","","","","","","","","","","kernel::memory::stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::memory::tss","","","","","","","","","","","","kernel::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::process::Pid","","kernel::process::elf","","","","kernel::process::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::process::registers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::process::scheduler","","","","","","","","","","","","","","","","","","","","","","","","kernel::process::syscall","","","","","","","","","","","","","","","","","","","kernel::process::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::process::table::Slot","","","kernel::smp","","","","","","","","","","","","","","","","kernel::smp::acpi_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::smp::ap_init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::smp::cpu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::smp::local_apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::smp::local_apic::register","","","","","","","","","","","","","","","","kernel::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kernel::time::pit8254","","kernel::time::rtcd":["","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","Аллокаторы памяти общего …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Здесь находится часть работы с …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Здесь находится часть работы с …","Removes the specified flags in-place.","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Поддержка симметричной …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","Здесь находится часть работы со …","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Глобальный аллокатор памяти …","Глобальный аллокатор памяти …","","","","","","Returns the argument unchanged.","Статистика глобального …","Статистика аллокатора общего …","Calls <code>U::from(self)</code>.","Аллокатор памяти общего …","","","","","Аллокатор памяти общего …","Адресное пространство, внутри …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Возвращает аллокатор памяти …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Таблица обработчиков …","","","","Таблица обработчиков …","","Обёртка для <code>ModeContext</code>. Она помечает …","","","","","","","","","","","","","","Номер обработчика прерываний …","","","","","Информация о прерывании с …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Сколько раз сработало это …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Возвращает <code>ModeContext</code>, содержащийся …","","Инициализирует таблицу …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Возвращает <code>true</code>, если контекст …","","","","","","","","Короткая мнемоника прерывания.","","Имя прерывания.","","","","","","","Обработчик прерываний часов …","","","Записывает <code>context</code> в этот <code>InterruptContext</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the debug level.","","","","Constructs an event at the error level.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an event at the info level.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Constructs an event at the trace level.","","","","","","","","","","","","","","","","Constructs an event at the warn level.","","Структура для работы с …","Базовое виртуальное адресное …","Абстракция куска физической …","Временный аллокатор физических …","Аллокатор физических фреймов.","(Физический) фрейм памяти.","Аллокатор физических фреймов.","","","Основной аллокатор физических …","(Виртуальная) страница памяти.","Физический адрес архитектуры …","","","","","","","Виртуальный адрес архитектуры …","Пустой аллокатор физических …","","","Определения типов адресов …","Абстракция адресного …","Выделяет ровно один физический …","Работа с блоками памяти <code>Block</code>.","Временный аллокатор физических …","","","","","","","","","","","","","","","Проверяет, что заданный элемент …","Проверяет, что заданный адрес …","Проверяет, что заданный <code>block</code> …","Возвращает количество …","Возвращает количество …","","Уменьшает на единицу счётчик …","","","","Для заданного блока …","Индекс следующего за последним …","Номер следующего за последним …","Возвращает адрес следующего за …","","","","","","","Определения типов (виртуальных) …","Returns the argument unchanged.","Преобразует блок виртуальных …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Создаёт блок для полуоткрытого …","Создаёт блок для полуоткрытого …","Преобразует указатель на <code>T</code> в …","Преобразует ссылку на <code>T</code> в <code>Block&lt;Virt&gt;</code>.","Преобразует срез элементов …","","Таблица сегментов памяти <code>Gdt</code>.","Статистика аллокатора общего …","Инициализация подсистемы …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Проверяет, что заданный …","Тип виртуального адресного …","Основной аллокатор физических …","Реализация отображения …","Структура для управления …","Дополнительные функции для …","Создаёт блок для полуоткрытого …","","","","Аллокатор страниц виртуальной …","Аллокатор виртуальных страниц.","","Возвращает виртуальную …","Для простоты работы с ней, …","Процесс, к которому относится …","Увеличивает на единицу счётчик …","Возвращает количество ссылок …","Абстракция размера в памяти <code>Size</code>.","Размер блока в байтах. Равно …","","Работа со стеками <code>Stack</code>. …","Индекс первого элемента в блоке.","Номер первого элемента в блоке.","Возвращает адрес первого …","Фантомное, не занимающее …","Разделяет блок на две …","","","","","","","","","","","","","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в […","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Сегмент состояния задачи (task state …","","","","","","","","","Задаёт имя типа при печати:","Базовый тип для адресов …","Количество используемых битов …","Задаёт имя типа при печати:","Заменяет префикс <code>0x</code> при печати …","Маска для знакового расширения …","Физический адрес архитектуры …","Тег физических адресов <code>ku::memory::Phys</code>…","Тег, позволяющий различать …","Виртуальный адрес архитектуры …","Тег виртуальных адресов и …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Преобразует указатель на <code>T</code> в <code>Virt</code>.","Преобразует ссылку на <code>T</code> в <code>Virt</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает битовое …","Возвращает битовое …","Возвращает <code>true</code> если виртуальный …","Возвращает <code>true</code> если:","","","","Создаёт <code>Addr</code> — <code>Phys</code> или <code>Virt</code> — по его …","Создаёт <code>Addr</code> — <code>Phys</code> или <code>Virt</code> — по его …","","","Создаёт <code>Addr</code> — <code>Phys</code> или <code>Virt</code> — по его …","","","","","","","","","","","","","","","","Преобразует <code>Virt</code> в мутабельную …","Преобразует <code>Virt</code> в указатель на …","Преобразует <code>Virt</code> в срез из <code>len</code> …","Преобразует <code>Virt</code> в указатель на …","Преобразует <code>Virt</code> в иммутабельную …","Преобразует <code>Virt</code> в срез из <code>len</code> …","Возвращает битовое …","","","","Структура для работы с …","Базовое виртуальное адресное …","Базовое виртуальное адресное …","Некорректное виртуальное …","Тип виртуального адресного …","Виртуальное адресное …","","Выделяет блок подряд идущих …","","","","","","","Проверяет доступность блока …","Вспомогательный метод для …","Проверяет доступность блока …","","","","","","","","","Создаёт копию адресного …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Статистика аллокатора общего …","Статистика аллокатора общего …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Тип виртуального адресного …","","Аллоцирует нужное количество …","Аллоцирует нужное количество …","Аллоцирует физический фрейм и …","Отображает заданную …","Аллоцирует нужное количество …","Аллоцирует нужное количество …","Аллоцирует нужное количество …","Возвращает страничное …","Структура для управления …","Инициализирует виртуальное …","Аллокатор виртуальных страниц.","Возвращает физический фрейм, в …","Процесс, к которому относится …","","","","Сохраняет информацию об …","Переключает процессор в это …","","","","","","","","","","","","Удаляет отображение заданного …","Удаляет отображение заданного …","Удаляет отображение заданной …","Вспомогательный метод для …","Удаляет отображение заданного …","","","","Тип адреса для базового типа:","Абстракция куска физической …","Итератор по блоку.","Описывает базовые типы для <code>Block</code> и …","Имя базового типа для …","Возвращает адрес базового …","Возвращает адрес базового …","","","","","Номер следующего за последним …","Returns the argument unchanged.","Возвращает базовый элемент по …","Возвращает индекс базового …","Calls <code>U::from(self)</code>.","","Возвращает <code>true</code> если:","","","","","","","","","","","","","","","Номер первого элемента в блоке.","Фантомное, не занимающее …","","","","","Вспомогательный аллокатор …","Выделяет ровно один физический …","Выделяет блок подряд идущих …","Блок свободных физических …","","","Возвращает количество …","","Returns the argument unchanged.","Используется в методах …","Calls <code>U::from(self)</code>.","Проверяет, что заданный …","Проверяет, что заданный …","Инициализирует аллокатор …","","","","","Обобщённый тип для …","(Физический) фрейм памяти.","(Виртуальная) страница памяти.","Размер физического фрейма или …","Возвращает начальный адрес — <code>Phys</code>…","","Возвращает адрес <code>Frage</code> по его …","","","","","","","Создаёт <code>Frage</code> — <code>Frame</code> или <code>Page</code> — по …","","","","","Returns the argument unchanged.","Создаёт <code>Frage</code> — <code>Frame</code> или <code>Page</code> — по его …","","","Возвращает номер физического …","Возвращает номер физического …","Calls <code>U::from(self)</code>.","","Создаёт <code>Frage</code> — <code>Frame</code> или <code>Page</code> — по его …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Фрейм не доступен — либо …","Информация об одном физическом …","Фрейм свободен.","","Фрейм занят.","Выделяет ровно один физический …","","","","","","","Возвращает количество …","Уменьшает на единицу счётчик …","","","Информация про все доступные …","Количество свободных …","Голова интрузивного списка …","Returns the argument unchanged.","Returns the argument unchanged.","Инициализирует аллокатор …","Инициализирует аллокатор …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Проверяет, что заданный …","И передаёт под управление …","Инициализирует аллокатор …","Увеличивает на единицу счётчик …","Возвращает количество ссылок …","","Возвращает размер среза, …","","","","","","","Номер следующего свободного …","Количество ссылок на этот фрейм.","Многоуровневая таблица страниц.","","","Возвращает физический фрейм …","","","Шаг рекурсии при спуске по …","Создаёт копию отображения …","Шаг рекурсии при спуске по …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Возвращает <code>true</code> если <code>Mapping</code> …","Выбирает в таблице страниц …","Выделяет физический фрейм под …","Запоминает корневой узел …","Возвращает корневой узел …","Фрейм с корневым узлом таблицы …","Возвращает мутабельную ссылку …","Возвращает иммутабельную …","Первая страница замапленной …","Возвращает мутабельную ссылку …","Номер рекурсивной записи в …","Принимает на вход","","","","","К странице был доступ.","Биты, доступные ОС для …","Один из битов <code>PageTableFlags::AVAILABLE</code> …","В страницу была запись.","","Страницу не нужно сбрасывать …","Большая страница вместо …","","","Кеширование страницы запрещено.","Запрет интерпретировать данные …","Количество бит в смещении …","Количество записей в одном узле …","Количество бит в номере записи …","Маска для вырезания из адреса …","Номер листьевого уровня …","Номер корневого уровня таблицы …","Страница отображена в память.","Узел таблицы страниц. …","Запись таблицы страниц.","Флаги в записи таблицы страниц. …","","Страница доступна в режиме …","","","Страница доступна на запись.","Для страницы используется …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Очищает запись.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","Флаги доступа к странице, …","Сбрасывает кеш страничного …","","","","","","","Физический фрейм, на который …","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Возвращает <code>true</code>, если запись …","Читает из регистра <code>CR3</code> …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Устанавливает флаги доступа к …","Устанавливает целевой …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Записывает в регистра <code>CR3</code> …","Простой аллокатор виртуальных …","Выделяет блок подряд идущих …","Блок свободных виртуальных …","","","","Возвращает блок виртуальных …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Инициализирует аллокатор …","","","","","","","","","","","","","","","","","","Выделенные стеки для …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Стек, который используется …","","","","","","","","","Стек для обработки Page Fault на …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Текущий процесс, это удобно для …","Конкретный процесс, …","Максимальное поддерживаемое <code>Pid</code> …","Максимальное количество …","Идентификатор процесса.","Описывает пользовательский …","Планировщик процессов. …","Таблица процессов.","Виртуальное адресное …","","","","","","Создаёт процесс для заданного ELF…","Создаёт процесс для заданного ELF…","Загружает ELF–файлы …","","","","Голова списка свободных слотов …","Returns the argument unchanged.","Позволяет десериализовать <code>Pid</code> из …","Блок памяти, через который ядро …","Инициализация подсистемы …","Calls <code>U::from(self)</code>.","Позволяет сериализовать <code>Pid</code> в …","Создаёт для процесса …","Создаёт для процесса …","Создаёт для процесса …","Создаёт <code>Pid</code> с начальным …","Инкрементирует номер эпохи …","Идентификатор процесса–…","","Идентификатор процесса.","Содержит структуру …","Количество процессов в таблице.","Очередь готовых к исполнених …","Описывает состояние регистров …","Состояние регистров процесса.","Планировщик процессов. …","Номер слота в таблице процессов.","Состояние процесса.","Реализует системные вызовы.","Таблица процессов.","Слоты таблицы процессов.","","","Контекст пользователя, в …","","","","Эпоха слота в таблице процессов.","Номер слота в таблице процессов.","Расширяет отображение …","Загружает ELF–файл <code>file</code> в адресное …","Загружает сегмент <code>program_header</code> ELF–…","Для сегмента <code>program_header</code> ELF–файла …","Описывает пользовательский …","Контекст пользователя, в …","Возвращает виртуальное …","Виртуальное адресное …","Возвращает аллокатор памяти …","","","","","","","Возвращает <code>true</code> если указатель …","","Дублирует существующий процесс.","Переходит в режим пользователя. …","","Сбрасывает буферизованные …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Возвращает ссылку на структуру …","Блок памяти, через который ядро …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает <code>true</code> если …","Вытесняет текущий …","Захватывает и возвращает …","Возвращает <code>RingBuffer</code> в который код …","Возвращает контекст …","Контекст пользовательского …","Создаёт новый процесс.","Создаёт контекст …","Возвращает идентификатор …","Идентификатор процесса–…","Возвращает идентификатор …","Идентификатор процесса.","Выполняет переключение …","Состояние регистров процесса.","Вытесняет текущий …","Устанавливает минимальный …","Устанавливает идентификатор …","Устанавливает состояние …","Устанавливает контекст …","Блок памяти, отведённый под …","Возвращает состояние процесса.","Состояние процесса.","","","","Подготавливает контекст <code>context</code> к …","Возвращает контекст …","Контекст пользователя, в …","","","","","","","Маска уровня привилегий (кольца …","Контекст исполнения, …","Уровень привилегий (кольцо …","Состояние регистров …","","","","","","","","","Code Segment","Дублирует регистры, заменяя в …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Содержимое регистров <code>RBX</code>, <code>RCX</code> и <code>RDX</code> …","Содержимое регистров <code>RBP</code>, <code>R8</code>–<code>R15</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает <code>true</code>, если контекст …","Возвращает <code>true</code>, если селектор …","Возвращает <code>ModeContext</code> для заданного …","Возвращает минимальный …","Возвращает <code>MiniContext</code>.","Возвращает текстовое имя …","Создаёт регистры процесса с …","Собирает <code>ModeContext</code> из его частей.","Содержимое регистра <code>RAX</code> …","Содержимое регистра <code>RDI</code> …","RFLAGS Register","Instruction Pointer","Содержимое регистра <code>RSI</code> …","Возвращает текущее значение …","Stack Pointer","Вытесняет текущий …","Устанавливает минимальный …","Устанавливает <code>MiniContext</code>.","Устанавливает расширенный …","Stack Segment","Вытесняет текущий …","Переключается в процесс, …","","","","","","","","","","","Возвращает <code>ModeContext</code> для заданного …","Контекст исполнения, …","Планировщик процессов. …","Планировщик процессов. …","","","","","","Достаёт из очереди первый …","","Ставит процесс, заданный …","Returns the argument unchanged.","Returns the argument unchanged.","Инициализирует глобальный …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Очередь готовых к исполнених …","В вечном цикле выполняет …","Выполняет один цикл работы — …","","","","","","","Проверяет, что <code>address</code> и <code>size</code> задают …","Проверяет, что заданная …","Проверяет, что заданный блок …","Проверяет, что <code>flags</code> задаёт …","Проверяет, что процесс <code>process</code> …","Выполняет системный вызов …","Выполняет системный вызов …","Выполняет системный вызов …","Инициализация системных …","Выполняет системный вызов …","Выполняет системный вызов …","Выполняет отображение <code>src_frames</code> в …","Выполняет системный вызов …","Выполняет системный вызов …","Выполняет системный вызов …","Выполняет диспетчеризацию …","Получает управление при …","С помощью инструкции sysret …","Выполняет системный вызов …","Слот свободен.","Слот занят.","Слот таблицы процессов.","Таблица процессов.","Таблица процессов.","","Выделяет процессу <code>process</code> …","","","","","","","","","","","Обещает Rust, что слоты таблицы …","Удаляет процесс <code>process</code>. При этом:","Голова списка свободных слотов …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Возвращает заблокированный …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Он создаёт таблицу процессов <code>Table</code>…","Количество процессов в таблице.","Слоты таблицы процессов.","","","","","","","","","","","Провязывает свободные слоты в …","Хранит эпоху последнего …","Процесс, находящийся в этом …","Структуры <code>Cpu</code> для всех …","","Обвязка внешней библиотеки <code>acpi</code>, …","Код инициализации Application Processors.","","","Код для работы с вектором …","","Returns the argument unchanged.","Инициализация симметричной …","Инициализация симметричной …","Calls <code>U::from(self)</code>.","Код работы с local APIC.","","","","Данные из таблиц Advanced Configuration and …","Маппер физической памяти в …","Идентификаторы доступных …","Идентификаторы доступных …","Возвращает <code>Apic</code> если в <code>interrupt_model</code> из …","","","","","Идентификатор Bootstrap Processor.","Идентификатор Bootstrap Processor.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Физический адрес Memory–mapped I/O (MMIO) …","Физический адрес Memory–mapped I/O (MMIO) …","","Заполняет структуру <code>AcpiInfo</code> по …","Виртуальная страница, с которой …","Выполняет поиск в памяти таблиц …","","","","","","","","","Возвращает идентификаторы …","Адрес, куда релоцируется код …","Размер в памяти, который должны …","Адрес структуры <code>BootStack</code> с …","Стек с дополнительной …","Выравнивание для следующего …","Запуск Application Processor с Bootstrap Processor. …","","","Релоцирует код начальной …","Указатель на структуру <code>Cpu</code> …","https://wiki.osdev.org/CPU_Registers_x86-64#CR0","https://wiki.osdev.org/CPU_Registers_x86-64#CR3","https://wiki.osdev.org/CPU_Registers_x86-64#CR4","https://wiki.osdev.org/CPU_Registers_x86-64#IA32_EFER","","Returns the argument unchanged.","Дескриптор, описывающий адрес и …","Завершает инициализацию Application …","Указатель на атомарный булев …","Calls <code>U::from(self)</code>.","Селектор сегмента кода ядра.","Селектор сегмента данных ядра.","Стек ядра для запускаемого …","Подготавливает временный стек …","Подготовка кода и стека …","Преобразует заданный …","Релоцированный адрес метки …","Сигнализирует запускающему …","Промежуточная Global Descriptor Table (GDT), …","Переключает Application Processor из …","Вычисляет размер кода …","","","","Ждёт пока запускаемый Application …","CPU–local storage. Aligned on the cache line size to …","Смещение внутри <code>Cpu</code>, по которому …","Каждому CPU нужно два стека:","","","Возвращает исполняющийся на …","Исполняющийся на данном CPU в …","","Returns the argument unchanged.","Возвращает структуру <code>Cpu</code> …","Идентификатор данного CPU, копия …","Идентификатор данного CPU, копия …","Инициализирует вектор структур …","Выделяет память для структур <code>Cpu</code> …","Calls <code>U::from(self)</code>.","Возвращает контекст ядра для …","Стек ядра данного CPU.","Стек ядра данного CPU.","Заполняет структуру <code>Cpu</code> для …","Дополнительный стек, который …","Устанавливает исполняющийся на …","Инициализация регистра <code>FS</code> …","Инициализация Task State Segment и …","Записывает в <code>Cpu</code> контекст …","Вытаскивает из <code>Cpu</code> контекст …","Адрес структуры <code>Cpu</code> для данного …","","","Task State Segment (TSS) данного CPU.","","Временное хранилище для …","Идентификатор local APIC и текущего …","Сдвиг для <code>CpuId</code> внутри <code>LocalApic::id</code>.","Выполнить инициализацию …","Поля регистра данных …","Высокий уровень сигнала для …","Низкий уровень сигнала для …","Memory–mapped I/O (MMIO) для работы с local …","Memory–mapped I/O (MMIO) для работы с local …","Признак того, что последнее IPI …","Выполнить код загрузки по …","Выбрать режим “уровень” для …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Запрещает ненужные нам …","Returns an empty set of flags.","Разрешает использование local APIC.","Посылает local APIC сигнал о …","Посылает local APIC сигнал о …","","Регистр ошибок.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Возвращает структуру <code>LocalApic</code> …","","Позволяет узнать идентификатор …","Позволяет узнать идентификатор …","Инициализирует local APIC, в том …","Инициализирует таймер local APIC в …","Inserts the specified flags in-place.","Позволяет посылать другим …","Позволяет посылать другим …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Регистр переполнения hardware …","Регистр сенсора температуры.","Регистр таймера.","Инициализирует Memory–mapped I/O (MMIO) …","Returns the complement of this set of flags.","","Задаёт формат одного регистра …","Removes the specified flags in-place.","Посылает прерывание на Application …","Посылает процессору <code>id</code> …","Inserts or removes the specified flags depending on the …","Обработчик “фантомных …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Текущее значение счётчика …","Делитель счётчика таймера.","Начальное значение счётчика …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Инициализирует виртуальную …","","Задаёт формат одного регистра …","","","","","Returns the argument unchanged.","Читает значение из регистра.","Calls <code>U::from(self)</code>.","Записывает значение в регистр.","","","","","Обновляет значение в регистре с …","Возвращает регистр, …","","","","Вспомогательная структура для …","Описывает момент времени, храня …","Описывает интервал между двумя …","","","","","","","","","","","","","Спин–задержка на заданный <code>duration</code>.","","Возвращает <code>TscDuration</code> с количеством …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Возвращает <code>true</code> если …","Инициализирует таймер Intel 8253/8254 (…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает количество тактов …","Возвращает <code>TscDuration</code> с количеством …","Возвращает <code>Some</code> для ненулевой …","Сообщает системное время в …","Возвращает <code>Tsc</code> с номером …","Сообщает системное время в …","","","Драйвер устаревшего таймера Intel …","Драйвер часов реального …","","Функция для получения …","","","","","","","Преобразует <code>Duration</code> в <code>TscDuration</code>:","","","","","","","","Инициализация PIT.","Обработчик прерываний PIT.","Номер порта для выбора адреса в …","Включает прерывание, …","Сгенерировано прерывание …","Номер порта для обмена данными …","Включает переход на летнее …","Запрет немаскируемых …","Структура для хранения даты и …","Микросхема сгенерировала …","Включает периодическое …","Сгенерировано периодическое …","Адрес регистра статуса RTC.","Адрес регистра настроек RTC.","Адрес регистра статуса …","Адрес регистра сохранности …","Регистр статуса RTC.","Регистр настроек RTC.","Регистр статуса прерывания RTC. …","Регистр сохранности данных в …","Копия текущих настроек …","Сообщает микросхеме, что …","Генерировать сигнал с …","Включает прерывание, …","Сгенерировано прерывание после …","","Время в микросхеме хранится в …","Время в микросхеме хранится в …","Есть заряд в батарейке. Поэтому …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Говорит микросхеме RTC, что …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Инициализация микросхемы часов …","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Обработчик прерываний часов …","Читает регистр статуса …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Проверяет правильность данных …","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Переводит <code>hour</code> из формата RTC <code>format</code> в …","Переводит значение <code>x</code> из формата …","","","","","Пытается несколько раз …","Считывает из микросхемы RTC …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Читает значение, которое …","Записывает значение <code>data</code>, в байт …","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Переводит текущее время RTC в …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.",""],"i":[2,2,0,0,1,2,2,2,0,2,2,2,2,2,1,2,0,0,0,2,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,0,1,1,1,1,1,2,2,2,2,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,0,0,1,2,0,1,2,1,2,1,2,1,2,1,2,0,0,1,2,1,2,0,0,1,2,162,1,2,0,1,2,1,2,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,2,0,0,17,17,17,17,17,17,0,17,17,0,17,17,17,17,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,163,164,165,166,167,0,45,0,0,45,0,0,0,0,45,0,43,49,0,0,0,0,0,0,43,0,49,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,33,32,32,33,32,33,32,32,32,33,32,32,32,32,32,33,32,32,32,33,32,32,32,33,32,33,32,33,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,40,0,0,40,40,40,40,40,40,40,40,40,40,34,40,34,40,34,40,34,40,40,40,40,40,40,40,40,34,34,40,40,40,40,40,34,40,40,40,40,40,40,34,0,40,40,40,34,40,34,34,34,34,40,40,34,40,0,40,34,34,40,34,40,40,40,40,34,40,34,40,34,40,34,40,34,40,40,34,0,0,43,43,43,44,43,44,44,44,43,43,44,44,43,44,44,43,43,43,43,44,43,44,44,43,43,44,44,44,44,43,43,43,43,43,43,44,44,44,44,43,44,43,44,43,44,43,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,51,45,45,0,0,0,0,0,0,0,45,37,50,37,50,50,51,45,37,50,51,45,37,45,45,45,37,50,45,50,37,37,0,45,37,37,50,51,45,37,50,37,50,51,45,37,50,51,37,37,37,37,37,37,37,50,51,0,37,37,0,37,37,37,37,37,45,37,0,50,51,45,37,50,51,45,37,50,51,45,37,37,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,58,53,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,57,0,0,0,0,0,56,58,53,57,55,59,56,58,53,57,55,59,0,0,0,55,55,0,0,0,56,56,0,57,0,0,0,59,0,53,53,0,0,0,56,58,53,57,55,59,0,0,0,53,56,0,56,58,53,57,55,59,0,0,53,0,58,0,0,0,55,56,56,56,56,56,58,0,0,0,0,0,0,0,53,55,55,0,0,0,0,55,53,56,58,53,57,55,59,56,58,53,57,55,59,56,58,53,57,55,59,0,0,0,0,72,68,0,68,72,0,0,0,0,64,68,64,64,72,62,68,64,72,62,68,64,62,64,0,62,62,68,0,62,62,64,72,64,72,62,68,0,0,64,72,62,68,62,72,62,72,72,64,72,62,62,62,64,62,64,64,0,64,72,62,68,64,72,62,68,64,72,62,68,72,0,72,0,83,0,0,0,81,0,0,0,0,0,81,0,0,168,0,0,0,0,0,0,81,96,84,0,0,81,0,0,81,31,83,84,81,31,83,84,83,31,83,31,83,83,31,31,31,81,31,168,81,31,83,84,31,31,31,31,31,83,31,31,83,83,0,81,31,31,83,84,31,31,31,31,31,83,0,93,0,81,31,83,84,31,81,93,0,0,93,0,31,83,83,83,0,93,83,0,0,93,81,81,0,31,83,0,31,31,31,31,31,31,83,31,83,81,31,83,84,81,31,83,84,31,31,31,31,31,31,31,0,81,31,83,84,169,170,85,85,171,0,85,171,171,85,0,0,0,0,0,85,85,85,85,90,87,85,90,87,85,90,87,85,90,87,85,90,87,85,90,87,85,90,87,85,85,85,85,90,87,85,85,85,85,85,90,87,85,85,85,171,85,90,87,171,85,90,87,85,85,90,87,85,85,85,90,87,85,85,90,87,85,90,87,85,85,85,85,85,85,85,85,90,87,0,0,95,95,0,95,96,93,93,95,96,93,95,96,93,93,93,93,95,96,93,93,93,93,93,93,93,93,95,93,95,96,93,93,93,95,96,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,95,96,93,95,96,93,95,96,93,93,93,93,93,93,93,102,102,172,0,0,0,172,172,172,102,102,102,102,31,102,172,172,102,102,172,102,102,102,102,102,102,102,102,102,102,102,102,102,102,31,31,102,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,86,0,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,108,108,0,0,0,0,0,0,0,0,109,107,110,110,110,107,108,109,110,107,108,109,107,108,107,108,107,108,109,107,108,107,110,107,108,109,0,110,107,108,109,110,110,107,110,110,107,108,110,110,107,108,110,107,108,109,110,107,108,109,110,110,110,107,108,109,110,110,113,0,113,0,113,112,112,113,112,113,113,113,112,112,112,113,112,112,112,112,113,0,112,112,113,112,112,112,112,112,113,0,112,113,112,113,112,113,173,174,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,94,94,94,94,0,94,94,0,0,94,94,0,0,0,0,0,0,94,0,0,0,0,94,0,0,94,94,94,94,94,94,94,94,94,94,94,101,94,101,94,101,101,94,101,94,94,94,94,101,94,94,101,94,94,101,0,101,94,94,94,94,94,101,101,94,94,94,94,94,94,94,94,94,101,94,94,94,94,94,101,0,94,94,101,101,94,94,94,101,94,94,101,94,101,94,101,94,94,0,0,115,115,115,115,115,115,115,115,115,115,115,115,115,83,0,0,0,168,0,0,0,168,0,0,0,118,0,0,0,0,0,116,118,117,116,118,117,116,116,117,118,117,116,118,117,116,117,118,117,0,118,117,118,118,117,117,118,118,117,116,118,117,116,118,117,116,118,0,0,0,119,119,119,119,119,119,119,119,119,78,78,78,0,0,0,0,0,120,78,78,78,78,78,0,0,0,78,78,78,134,78,78,120,0,78,78,0,0,0,78,78,120,78,120,0,134,175,0,120,0,78,120,0,0,134,78,78,120,78,78,78,176,176,0,0,0,0,0,0,120,120,120,120,125,120,125,125,125,125,125,120,120,125,120,120,120,125,125,120,125,120,120,120,125,125,120,120,120,125,125,120,125,120,120,120,120,120,120,120,120,120,120,120,125,120,120,125,120,125,120,120,120,120,125,120,125,120,125,60,0,60,0,129,60,129,60,129,60,129,60,60,129,129,129,60,60,129,60,129,129,129,60,60,60,60,129,60,60,129,60,129,129,60,60,129,0,60,129,129,60,129,60,129,129,129,60,129,60,129,60,129,60,129,60,60,129,0,0,131,175,131,175,131,175,131,175,175,131,175,175,131,175,175,175,175,131,175,131,175,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,136,0,0,0,135,134,136,134,135,136,134,135,134,135,134,136,0,134,134,136,134,135,134,136,134,135,134,134,134,136,136,134,135,136,134,135,136,134,135,177,177,178,0,137,0,0,137,137,0,137,137,0,0,137,0,137,137,137,0,0,138,138,0,138,141,138,141,138,138,141,141,138,138,141,138,141,138,138,141,138,141,0,141,138,141,138,141,138,141,141,0,0,0,0,0,147,0,147,147,0,147,147,147,147,147,147,147,147,0,147,147,147,147,147,147,0,0,147,0,147,0,0,147,147,147,0,0,0,146,146,146,146,146,146,146,146,146,146,0,0,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,0,151,150,0,150,150,0,0,150,150,150,150,150,150,150,150,150,150,150,150,151,150,151,150,151,150,151,150,150,150,150,150,151,150,151,151,151,150,151,150,150,150,150,150,150,151,150,150,150,150,150,151,150,151,151,151,151,150,151,151,150,150,151,150,150,150,151,151,151,151,150,150,0,150,151,151,150,151,150,150,150,151,151,151,151,150,150,151,150,151,150,151,150,150,151,152,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,154,73,153,0,0,0,154,73,153,154,73,153,73,153,73,153,73,153,0,73,73,73,153,154,73,153,153,154,73,153,73,0,154,73,153,153,73,154,0,73,0,73,153,0,0,73,0,73,153,154,153,154,73,153,153,154,73,153,154,73,153,0,0,0,157,158,0,157,0,0,158,157,158,0,0,0,0,0,0,0,0,0,157,157,157,158,156,157,157,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,156,157,158,159,156,157,158,159,160,160,156,157,158,159,156,157,158,159,0,156,157,158,159,160,156,157,158,159,156,156,156,156,156,157,157,157,157,157,158,158,158,158,158,159,159,159,159,159,160,156,157,158,159,160,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,160,0,156,157,158,159,0,0,156,157,158,159,156,157,158,159,156,157,158,159,160,156,157,158,159,156,157,158,159,0,160,160,156,157,158,159,0,0,156,157,158,159,160,160,156,157,158,159,0,0,160,156,157,158,159,156,157,158,159,156,157,158,159,156,157,158,159,0,156,157,158,159,160,160,156,157,158,159,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[3,4],0,[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[1,5],[2,6],0,0,[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],7],[[2,2],7],[1,1],[2,2],[[1,1],8],[[2,2],8],[[1,1],1],[[2,2],2],[[],1],[[],2],[[1,1],8],[[2,2],8],0,[1,4],[[1,9]],[[2,9]],[10,4],[[1,11],12],[[1,11],12],[[1,11],12],[[1,11],12],[[1,11],12],[[2,11],12],[[2,11],12],[[2,11],12],[[2,11],12],[[2,11],12],[[]],[[]],[5,[[13,[1]]]],[6,[[13,[2]]]],[5,1],[6,2],[5,1],[6,2],[9,1],[9,2],0,[[],4],[1],[2],[14],[[14,2]],[[1,1]],[[2,2]],0,[[1,1],1],[[2,2],2],[[1,1],8],[[2,2],8],[[]],[[]],[1,8],[2,8],[1,8],[2,8],0,0,[1,1],[2,2],[[1,1],[[13,[7]]]],[[2,2],[[13,[7]]]],[[],4],0,[[1,1]],[[2,2]],[[]],[[1,1,8]],[[2,2,8]],0,[[1,1],1],[[2,2],2],[[1,1]],[[2,2]],[[1,1],1],[[2,2],2],[[]],0,[[]],[[]],[[1,1]],[[2,2]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[1,1],1],[[2,2],2],0,0,[[17,3],5],[[17,3],5],[[]],[[]],[[17,5,3]],[[]],[[],18],[17,18],[[]],0,[[17,5,3,6],5],[[],15],[[],15],[[],16],0,0,[[19,3],[[15,[20,21]]]],[[19,3],[[15,[20,21]]]],[[]],[[]],[[19,[20,[5]],3]],[[]],[[19,[20,[5]],3,3],[[15,[20,21]]]],[[19,[20,[5]],3,3],[[15,[20,21]]]],[[]],[22,19],[[19,[20,[5]],3,3],[[15,[20,21]]]],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[23,23],[[]],[[23,23],8],[[23,11],[[15,[24]]]],[[]],[25,23],[26,23],[24,23],[27,23],[[]],[[]],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,[[29,[6]]]],[6],0,0,[[]],[[]],[28,28],[[]],0,[[28,11],12],[6,29],[28,6],[[]],[[]],[[28,6],8],[6,[[29,[28]]]],[6,28],[28,6],[[28,6]],[28,6],[[]],[[],15],[[],15],[[],16],[28,[[29,[28]]]],0,0,0,0,[6,[[29,[[31,[30]]]]]],[[]],[[]],[[]],[[]],0,[32,32],[[]],[33,22],0,[6,29],[6,29],[[32,11],12],[[]],[[]],[30,[[13,[32]]]],[[34,6],29],[[]],[[]],[[]],[35,[[29,[8]]]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,[[]],[[]],[[36,11],12],[[36,11],12],[[]],[36,37],0,[36,37],[[]],[36,38],0,[[36,38],29],[[],39],[[],15],[[],15],[[],16],0,0,0,0,0,0,[[],40],[[40,40],40],[[40,40]],[[40,40],40],[[40,40]],[40,5],0,[[40,40],40],[[40,40]],[[]],[[]],[[]],[[]],[34,34],[40,40],[[]],[[]],[[40,40],7],[40,40],[[40,40],8],[[40,40],40],[[],40],[[40,40],8],[[40,9]],[[34,11],12],[[34,11],12],[[40,11],12],[[40,11],12],[[40,11],12],[[40,11],12],[[40,11],12],[[]],[[]],[5,[[13,[40]]]],[5,40],[5,40],[9,40],[40],0,[41],[[40,40]],[[40,40],40],[[40,40],8],[[]],[[]],[5,5],0,[5,[[29,[41]]]],0,[40,8],[40,8],[6,[[29,[34]]]],[40,40],[41],[[40,40],[[13,[7]]]],[[34,[42,[6]]],29],[[34,[42,[6]]],29],[[40,40]],[[34,40,6,6],29],[[40,40,8]],[[40,40],40],[[40,40]],[[40,40],40],[[]],[[]],[[],39],[[40,40]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[40,40],40],[34,29],0,0,[43,28],0,[[]],[[]],[[]],[[]],[44,44],[[]],[[43,38],[[29,[43]]]],[[43,11],12],[[44,11],12],[[44,11],12],[[]],[36,44],[[]],[43,37],0,[[43,38,45],[[29,[43]]]],[[]],[[]],[43,45],[44,45],0,[43,[[29,[[46,[44]]]]]],[43,[[48,[47]]]],[44,[[48,[47]]]],0,[44,38],0,[[37,28],43],[[43,6],[[29,[6]]]],[43,29],[[43,45]],[[43,6],29],[43,6],[44,6],0,[[]],[[],39],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[43,6],[[29,[6]]]],0,0,[[]],[[]],[49],[49,29],[[49,11],12],[[6,6],29],[49,6],[[]],[[]],[6,[[29,[49]]]],[[49,38],[[29,[43]]]],[49,6],0,[[],15],[[],15],[[],16],[49,6],0,0,0,0,0,0,0,0,0,0,0,[[37,6],[[29,[[31,[30]]]]]],0,[[37,6,[13,[28]]],[[29,[6]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[[]],[[],45],[[],37],0,[[45,45],8],[[50,28],29],[[37,38],[[29,[37]]]],[[37,38,[13,[28]]],[[29,[36]]]],[[6,6],29],[[45,11],12],[[37,11],12],[[37,11],12],[[]],[[]],[[]],[[]],0,[[37,38,45,28],[[29,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[29,[50]]]],[37,45],0,[37,[[29,[51]]]],[[],6],[37,[[48,[47]]]],0,[50,13],[51,13],[[6,13],29],[[37,6],[[29,[6]]]],[[37,28],29],[[6,6,28],29],0,[[37,45]],[[37,6,28],29],[37,6],0,[[]],[[],39],[[6,6,6,6,[13,[28]]],[[29,[6]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[37,6,28],[[29,[6]]]],0,0,0,[52,6],0,[[]],[[]],0,[[52,11],12],[6,29],[[]],[[]],0,[[],[[29,[52]]]],[[],52],[52,37],0,[[52,6]],[[],15],[[],15],[[],16],[52,[[29,[52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,54]],[53],[53],[53],[53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[53],[53],[55,55],[[]],[53],[53],[53],[56,6],0,[53],[57,58],[53],[53],[[53,54]],[[59,59],8],[53],[[53,11],12],[[53,11],12],[53],[53],[53],[[]],[[]],[[]],[[]],[[]],[[]],[[53,54]],[6],[[53,6,35,59]],[53,60],[56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[[53,54]],[53,8],[53],[58],[53],[53],[53],[[],55],[56,38],0,[56,38],0,[[38,38],56],[[],58],[53],[53],[[53,54]],[53],[53],[[53,54]],[[53,54]],[[53,60]],[55,61],[55,61],[53],[[53,54]],0,[53],[[]],[[],39],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[53],[53],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[62,63],[[64,38,65]],0,[[62,66],8],[[62,67]],[[68,68],8],0,[[62,69]],[[62,67]],[[64,38]],0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,[70,71],0,[[72,69,73]],[[72,70,74]],[[],64],[68,72],[[68,70],62],[[62,75],67],[[62,67,76]],[[64,77,65]],[[62,67,67]],0,[[64,38]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[72,78,79],29],[[78,80]],[[72,78,80]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[81,[[29,[82]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,83],[31,31],[83,83],[[]],[[]],[[83,83],7],[31,8],[31,8],[[31,31],8],[81,6],[31,6],[6,6],[[81,82]],[[],31],[[],83],[84,22],[[[31,[85]]],[[31,[86]]]],[31,6],0,[31,[[15,[23]]]],[[31,31],8],[[83,83],8],[[31,11],[[15,[24]]]],[[31,11],[[15,[24]]]],[[83,11],[[15,[24]]]],[[83,11],[[15,[24]]]],0,[[]],[[[31,[86]]],[[31,[85]]]],[[]],[[]],[[]],[[6,6],[[15,[31,23]]]],[[54,54],[[15,[31,23]]]],[[],[[31,[[85,[87]]]]]],[[],[[31,[[85,[87]]]]]],[[],[[31,[[85,[87]]]]]],[[],83],0,0,[[14,2]],[[]],[[]],[[]],[[]],[31],[[81,82],8],0,0,0,0,0,[[],[[15,[31,23]]]],[6,83],[54,83],[[],83],0,0,[[83,83],[[13,[7]]]],[14,88],[[88,89],30],0,[[81,82]],[[81,82],[[29,[6]]]],0,[31,6],[83,6],0,[31,6],0,[31],0,[[31,6],[[13,[31]]]],[[]],[[]],[[],39],[[],39],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[31,[[15,[23]]]],[31,[[15,[23]]]],[31,[[15,[23]]]],[31,[[15,[20,23]]]],[31,[[15,[23]]]],[31,[[15,[23]]]],[31,[[15,[23]]]],0,[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,6]],[85],[6,[[15,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[90,90],[87,87],[[]],[[]],[[]],[[85,85],7],[[90,90],7],[[87,87],7],[[],85],[[],90],[[],87],[[85,85],8],[[90,90],8],[[87,87],8],[[85,11],[[15,[24]]]],[[85,11],[[15,[24]]]],[[]],[91,[[85,[87]]]],[[]],[[]],[6,[[15,[85,23]]]],[[],[[85,[87]]]],[[],[[85,[87]]]],[85,6],[[]],[[]],[[]],[85,54],[85,6],[[[85,[87]]],8],[[85,85],8],[[],8],[[[85,[90]],[85,[90]]],8],[[[85,[87]],[85,[87]]],8],[6,[[15,[85,23]]]],[6,[[15,[85,23]]]],[6,[[15,[[85,[90]],23]]]],[6,[[15,[[85,[87]],23]]]],[54,[[15,[85,23]]]],[[85,85],[[13,[7]]]],[[90,90],[[13,[7]]]],[[87,87],[[13,[7]]]],[[85,6]],[[85,85]],[[]],[[]],[[]],[[],39],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[85,[87]]],[[15,[23]]]],[[[85,[87]]],[[15,[23]]]],[[[85,[87]],6],[[15,[23]]]],[[[85,[87]]],[[15,[23]]]],[[[85,[87]]],[[15,[23]]]],[[[85,[87]],6],[[15,[23]]]],[85,[[15,[92,23]]]],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,[[93,6],[[29,[[31,[88]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[93,[31,[30]],94],29],[[93,31,94],29],[[93,[31,[30]],94],29],[[],93],[[],95],[96,22],[93],[[3,97],[[15,[20,23]]]],[[[20,[5]],3]],[[[20,[5]],3,3,97],[[15,[20,23]]]],[[[20,[5]],3,3],[[15,[20,23]]]],[93,[[29,[93]]]],[[93,11],12],[[93,11],12],[[95,11],12],[[]],[[]],[[]],[93,18],0,[[]],[[]],[[]],0,[[93,[31,[88]]],29],[[93,[31,[88]],94],29],[[93,94,98],29],[[93,88,94],[[29,[82]]]],[[93,88,82,94],29],[[93,6,94,99],29],[[93,6,94],29],[[93,6,94],29],[93,100],0,[88,93],0,[93,82],0,[[93,[31,[88]],[31,[88]]],29],[[93,[31,[88]],[31,[88]]],29],[[93,3],[[29,[[31,[88]]]]]],[[93,78]],[93],[[],39],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[93,[31,[88]]],29],[[93,[31,[88]]],29],[93,29],[[93,88],29],[[88,101],29],[93,29],[[93,[31,[88]]],29],0,0,0,0,0,0,0,[[]],[6,[[15,[23]]]],[[]],[[]],[102,102],[[]],0,[[]],[6,[[15,[23]]]],[[],6],[[]],[[]],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,13],0,0,[[]],[[],15],[[],15],[[],16],0,[103,[[29,[82]]]],[[103,6],[[29,[[31,[82]]]]]],0,[[]],[[]],[103,6],[103],[[]],0,[[]],[[103,82],8],[[103,82],8],[104,103],[[],15],[[],15],[[],16],0,0,0,0,0,[86,85],[86],[6,[[15,[85,23]]]],[6,[[15,[23]]]],[[]],[[]],[86,86],[[]],[[86,86],7],[85,86],[[],86],[[86,86],8],[[86,11],[[15,[24]]]],[[86,11],[[15,[24]]]],[[]],[6,[[15,[86,23]]]],[6,[[15,[86,23]]]],[86,6],[86,6],[85,6],[[]],[[],8],[85,[[15,[86,23]]]],[[86,86],[[13,[7]]]],[[]],[[],39],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,[105,106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,107],[108,108],[[]],[[]],[[],107],[[],108],[109,22],[[107,107],8],[[108,108],8],[[107,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],106],[[],106],0,[110],[[],110],[89,[[29,[107]]]],[111,108],[89,[[29,[107]]]],[[110,5,111]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[5,106],0,[[],16],[[],16],[[],16],[[],16],[[],106],[[],106],0,0,0,0,0,[112,[[29,[82]]]],[[]],[[]],[[]],[[]],[113,113],[[]],[112,6],[[112,82]],[112],[[113,11],12],0,0,0,[[]],[[]],[104,112],[[112,104,103]],[[]],[[]],[[112,82],8],[[112,103]],[104,112],[[112,82]],[[112,82],[[29,[6]]]],[[]],[104,6],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,[[]],[[]],[[],82],[[],100],[100],[[100,82,92]],[100,[[29,[100]]]],[[100,100,82,92],[[29,[82]]]],[[100,11],12],[[]],[[]],[100,8],[100,[[29,[6]]]],[[101,94,88,81],29],[[82,88],100],[100,82],0,[[100,82],114],[[100,82],114],0,[[100,6,92,82],101],0,[[100,30,[13,[81]],94],[[29,[101]]]],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],94],[[94,94],94],[[94,94]],[[94,94],94],[[94,94]],[94,6],0,[[94,94],94],[[94,94]],[[]],[[]],[[]],[[]],[101],[101,101],[94,94],[[]],[[]],[[94,94],7],[94,94],[[94,94],8],[[],101],[[94,94],94],[[],94],[[101,101],8],[[94,94],8],[94],[101,94],[88],[[101,11],[[15,[24]]]],[[94,11],[[15,[24]]]],[[94,11],[[15,[24]]]],[[94,11],[[15,[24]]]],[[94,11],[[15,[24]]]],[[94,11],[[15,[24]]]],[101,[[15,[[86,[90]],23]]]],[[]],[[]],[6,[[13,[94]]]],[6,94],[6,94],[[],94],[94],[[94,94]],[[94,94],94],[[94,94],8],[[]],[[]],[94,8],[94,8],[94,94],[[94,94],[[13,[7]]]],[101,8],[[],[[86,[90]]]],[[94,94]],[[94,94,8]],[[101,94]],[[101,[86,[90]],94]],[[94,94],94],[[94,94]],[[94,94],94],[[]],[[]],[[94,94]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[94,94],94],[[[86,[90]]]],0,[[115,6],[[29,[[31,[88]]]]]],0,[[]],[[]],[[],115],[114,[[13,[[31,[88]]]]]],[[115,11],12],[[]],[[]],[114,115],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,[6,6],[6,54],[54,6],[6,[[15,[92,23]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[116,22],[117,30],[[]],[[]],[[]],[[]],[[]],[[]],0,[[118,93],29],[117,29],0,[[93,94],[[29,[118]]]],[[],117],[[93,94,6],29],[[],118],[117,30],0,[118,30],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[118],0,0,0,0,[[]],[[]],[119,111],[[]],[[]],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,0,0,[[]],[[]],[78,78],[[]],[[78,78],7],[[],[[29,[78]]]],[[],[[29,[120]]]],0,[[78,78],8],[[78,11],[[15,[24]]]],[[78,11],[[15,[24]]]],0,[[]],[6,[[15,[78,23]]]],0,[2],[[]],[78,6],[93,[[29,[80]]]],[93,[[29,[121]]]],[93,[[29,[122]]]],[6,78],[78],0,[[78,78],[[13,[7]]]],0,0,0,0,0,0,0,[78,6],0,0,0,0,[[]],[[],39],0,[[],15],[[],15],[[],16],0,0,[[93,31,123,30],29],[93,[[29,[30]]]],[[93,124,30],29],[124,[[29,[[31,[30]]]]]],0,0,[120,93],0,[120,19],[[]],[[]],[[]],[[]],[125,125],[[]],[[125,30],8],[[],125],[[120,6,6],[[29,[120]]]],[[[126,[120]]],8],[[125,125],8],[120],[[120,11],12],[[120,11],12],[[125,11],12],[[125,11],12],[[]],[[]],[120,[[29,[121]]]],0,[[]],[[]],[125,8],[[],4],[120,[[126,[93]]]],[120,[[29,[80]]]],[125,127],0,[[93,127,121],120],[[30,[31,[30]]],[[29,[125]]]],[120,[[13,[78]]]],0,[120,78],0,[53],0,[[],4],[[120,127]],[[120,78]],[[120,128]],[[120,125]],0,[120,128],0,[[]],[[],39],[[],39],[[120,53,6,35],8],[120,125],0,[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],0,0,0,0,[[]],[[]],[[]],[[]],[129,129],[60,60],[[]],[[]],0,[[129,6,6,6],129],[[129,11],12],[[129,11],12],[[60,11],12],[[60,11],12],[[]],[[]],0,0,[[]],[[]],[60,8],[6,8],[30,60],[129,127],[60,127],[60,38],[[127,6],129],[[106,106,127,130],60],0,0,0,0,0,[[],[[29,[30]]]],0,[[],4],[[129,127]],[[60,127]],[[129,60]],0,[[],4],[129],[[]],[[]],[[],39],[[],39],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[127,60],0,0,0,0,[[]],[[]],[[]],[[]],[[],[[13,[78]]]],[131,22],[78],[[]],[[]],[6],[[]],[[]],0,[[],4],[[],8],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[6,6],[[29,[[31,[88]]]]]],[[126,88,94],[[29,[82]]]],[[126,[31,[88]],94],[[29,[[46,[82,19]]]]]],[6,[[29,[94]]]],[[[126,[120]],6],[[29,[[126,[120]]]]]],[[[126,[120]],6,6,6,6,6],[[29,[132]]]],[[[126,[120]],6],4],[[[126,[120]],127],[[29,[132]]]],[[]],[[[126,[120]],6,6,6],[[29,[132]]]],[[[126,[120]],6,6,6,6],[[29,[132]]]],[[126,[46,[82,19]],[31,[88]],94],29],[[[126,[120]],127],4],[[[126,[120]],6,6],[[29,[132]]]],[[[126,[120]],6,6,6,6],[[29,[132]]]],[[6,6,6,30,30,6,6,6],4],[[],4],[[127,133,132],4],[[[126,[120]],6,6,6],[[29,[132]]]],0,0,0,0,0,0,[120,[[29,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],134],[135,22],[134],[[136,11],12],[[]],[[[126,[120]]]],0,[[]],[[]],[[]],[78,[[29,[[126,[120]]]]]],[[]],[[]],[[]],[6,134],0,0,[[],39],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,[[]],[[]],0,[137,22],[[]],[[14,2]],[[88,2],29],[[]],0,[[],15],[[],15],[[],16],0,0,[138],0,[139,[[29,[140]]]],[[]],[[]],[[]],[[]],[138,5],0,[141,141],[[]],[[138,11],12],[[]],[[]],[[]],[[]],[138,89],0,[[141,6,6],[[142,[141]]]],[88,[[29,[138]]]],0,[88,[[15,[143,144]]]],[[]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[142],[145,[[46,[5]]]],0,0,0,0,0,[[88,146],29],[[]],[[]],[30,29],0,0,0,0,0,[[147,11],12],[[]],0,[[146,148],4],0,[[]],0,0,0,[[89,146,148],[[29,[147]]]],[[88,146,148],[[29,[89]]]],[[6,38],89],0,[148],0,[[],4],[[],6],[[],15],[[],15],[[],16],[[148,149],29],0,0,0,[[]],[[]],[[],[[29,[78]]]],0,[146],[[]],[[],146],[146,5],0,[[6,5],[[29,[[46,[146]]]]]],[6,[[29,[[46,[146]]]]]],[[]],[[],60],[146,118],0,[5,146],0,[[[13,[78]]]],[146],[146],[60],[[],[[13,[60]]]],0,[[],15],[[],15],0,[[],16],0,0,0,0,0,0,0,0,0,0,0,0,[[],150],[[150,150],150],[[150,150]],[[150,150],150],[[150,150]],[150,92],0,[[150,150],150],[[150,150]],[[]],[[]],[[]],[[]],[151,151],[150,150],[[]],[[]],[[150,150],7],[150,150],[[150,150],8],[[150,150],150],[151],[[],150],[151],[[]],0,[[150,150],8],0,[[150,9]],[[150,11],12],[[150,11],12],[[150,11],12],[[150,11],12],[[150,11],12],[[]],[[]],[92,[[13,[150]]]],[92,150],[92,150],[9,150],[[],151],[150],[[],5],0,[[]],[[151,92]],[[150,150]],0,0,[[150,150],150],[[150,150],8],[[]],[[]],[150,8],[150,8],0,0,0,[89,29],[150,150],[[150,150],[[13,[7]]]],0,[[150,150]],[[5,89],29],[[151,5,92]],[[150,150,8]],0,[[150,150],150],[[150,150]],[[150,150],150],0,0,0,[[]],[[]],[[150,150]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[150,150],150],[[],151],0,0,[[]],[[]],[152,152],[[]],[[]],[152,92],[[]],[[152,92]],[[]],[[],15],[[],15],[[],16],[[152,98]],[[],152],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[153,153],[[]],[[]],[[73,73],7],[[153,153],7],[149],[[],[[15,[73]]]],[73,153],[[73,73],8],[[153,153],8],[[154,11],[[15,[24]]]],[[73,11],[[15,[24]]]],[[153,11],[[15,[24]]]],[[153,11],[[15,[24]]]],[[]],[[]],[[]],[[73,149],8],[[]],[[]],[[]],[[]],[153,155],[73,153],[54,[[13,[154]]]],[[],[[48,[47]]]],[[],73],[[],[[48,[47]]]],[[73,73],[[13,[7]]]],[[153,153],[[13,[7]]]],0,0,[73,15],[[],73],[[]],[[]],[[],39],[[],39],[[],15],[[],15],[149,[[15,[153,23]]]],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],156],[[],157],[[],158],[[],159],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[156,5],[157,5],[158,5],[159,5],0,0,0,0,[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156,156],[157,157],[158,158],[159,159],[160,160],[[]],[[]],[[]],[[]],[[]],[[156,156],7],[[157,157],7],[[158,158],7],[[159,159],7],[156,156],[157,157],[158,158],[159,159],[[156,156],8],[[157,157],8],[[158,158],8],[[159,159],8],0,[[],160],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[],156],[[],157],[[],158],[[],159],[[]],[[156,156],8],[[157,157],8],[[158,158],8],[[159,159],8],[[160,160],8],[[156,9]],[[157,9]],[[158,9]],[[159,9]],[[156,11],12],[[156,11],12],[[156,11],12],[[156,11],12],[[156,11],12],[[157,11],12],[[157,11],12],[[157,11],12],[[157,11],12],[[157,11],12],[[158,11],12],[[158,11],12],[[158,11],12],[[158,11],12],[[158,11],12],[[159,11],12],[[159,11],12],[[159,11],12],[[159,11],12],[[159,11],12],[[160,11],12],[[]],[[]],[[]],[[]],[[]],[5,[[13,[156]]]],[5,[[13,[157]]]],[5,[[13,[158]]]],[5,[[13,[159]]]],[5,156],[5,157],[5,158],[5,159],[5,156],[5,157],[5,158],[5,159],[9,156],[9,157],[9,158],[9,159],[156],[157],[158],[159],0,[[]],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[[]],[[],158],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[156,156],8],[[157,157],8],[[158,158],8],[[159,159],8],[[]],[[]],[[]],[[]],[[]],[156,8],[157,8],[158,8],[159,8],[156,8],[157,8],[158,8],[159,8],[[],8],0,0,[156,156],[157,157],[158,158],[159,159],[[5,157],5],[[5,157],5],[[156,156],[[13,[7]]]],[[157,157],[[13,[7]]]],[[158,158],[[13,[7]]]],[[159,159],[[13,[7]]]],[[],[[13,[160]]]],[[],160],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[5,5],[[5,5]],0,[[156,156,8]],[[157,157,8]],[[158,158,8]],[[159,159,8]],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],[[],[[13,[161]]]],[[]],[[]],[[]],[[]],[[]],[[],39],[[156,156]],[[157,157]],[[158,158]],[[159,159]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[156,156],156],[[157,157],157],[[158,158],158],[[159,159],159],0],"p":[[3,"ExitCode"],[3,"Subsystems"],[3,"Layout"],[15,"never"],[15,"u8"],[15,"usize"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[3,"PanicInfo"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"BootInfo"],[4,"Result"],[3,"TypeId"],[3,"GlobalAllocator"],[3,"Info"],[3,"MemoryAllocator"],[3,"NonNull"],[3,"AllocError"],[6,"Mutex"],[4,"Error"],[3,"Error"],[3,"TryFromIntError"],[4,"Error"],[4,"Error"],[3,"BlockBitmap"],[6,"Result"],[6,"Virt"],[3,"Block"],[3,"BlockCache"],[3,"BLOCK_CACHE"],[3,"Disk"],[4,"Info"],[3,"DirectoryEntry"],[3,"Inode"],[15,"str"],[3,"String"],[3,"Command"],[15,"u16"],[3,"Range"],[3,"File"],[3,"Entry"],[4,"Kind"],[3,"Vec"],[3,"Utc"],[3,"DateTime"],[3,"FileSystem"],[3,"Iter"],[3,"List"],[3,"Superblock"],[3,"InterruptContext"],[15,"u64"],[3,"IdtEntry"],[3,"Statistics"],[3,"IDT"],[3,"Idt"],[4,"Fatal"],[3,"ModeContext"],[3,"EntryOptions"],[3,"LogCollector"],[3,"Current"],[3,"LogEvent"],[8,"Debug"],[3,"Metadata"],[3,"Id"],[4,"Format"],[3,"Event"],[3,"Level"],[3,"Colour"],[3,"Log"],[3,"Tsc"],[3,"LogMetadata"],[3,"Attributes"],[3,"Record"],[3,"Field"],[4,"Pid"],[3,"Deserializer"],[3,"RingBuffer"],[4,"FrameAllocator"],[6,"Frame"],[3,"Size"],[3,"FRAME_ALLOCATOR"],[3,"Addr"],[3,"Frage"],[3,"VirtTag"],[6,"Page"],[6,"Phys"],[3,"PhysTag"],[3,"VirtAddr"],[15,"u32"],[3,"AddressSpace"],[3,"PageTableFlags"],[4,"Kind"],[3,"BASE_ADDRESS_SPACE"],[4,"Initialize"],[8,"FnOnce"],[8,"Fn"],[3,"Mapping"],[3,"PageTableEntry"],[3,"IntoIter"],[3,"BootFrameAllocator"],[3,"MemoryMap"],[3,"DescriptorFlags"],[3,"SegmentSelector"],[3,"RealModePseudoDescriptor"],[3,"TssEntry"],[3,"GDT"],[3,"SmpGdt"],[3,"TaskStateSegment"],[3,"MainFrameAllocator"],[4,"FrameInfo"],[6,"PageTable"],[3,"PageAllocator"],[3,"EXCEPTION_STACKS"],[3,"ExceptionStacks"],[3,"Stack"],[3,"TSS"],[3,"Process"],[3,"ProcessInfo"],[3,"SystemInfo"],[3,"Flags"],[4,"ProgramHeader"],[3,"TrapContext"],[3,"MutexGuard"],[3,"MiniContext"],[3,"State"],[3,"Registers"],[3,"RFlags"],[3,"SCHEDULER"],[3,"SyscallResult"],[3,"ResultCode"],[3,"Table"],[3,"TABLE"],[4,"Slot"],[3,"CPUS"],[3,"AcpiInfo"],[4,"InterruptModel"],[3,"Apic"],[3,"AcpiMapper"],[3,"PhysicalMapping"],[3,"PlatformInfo"],[4,"AcpiError"],[3,"ProcessorInfo"],[3,"Cpu"],[3,"BootStack"],[3,"AtomicBool"],[3,"Duration"],[3,"InterruptCommand"],[3,"LocalApic"],[3,"Register"],[3,"TscDuration"],[3,"Hz"],[15,"f64"],[3,"RegisterA"],[3,"RegisterB"],[3,"RegisterC"],[3,"RegisterD"],[3,"Date"],[15,"i64"],[8,"Testable"],[13,"Elf"],[13,"Fmt"],[13,"Int"],[13,"Postcard"],[13,"RingBuffer"],[8,"SizeOf"],[13,"Boot"],[13,"Main"],[8,"Tag"],[8,"Memory"],[13,"Free"],[13,"Used"],[3,"Scheduler"],[13,"Id"],[13,"Free"],[13,"Occupied"]]},\
"ku":{"doc":"","t":[12,12,12,2,3,2,2,2,2,2,2,2,3,3,0,2,0,0,0,0,2,2,0,2,0,2,2,2,0,2,5,3,2,2,3,2,12,12,12,12,0,0,0,12,12,12,12,12,8,5,10,10,10,10,5,10,10,8,13,4,13,11,11,10,10,10,10,11,11,11,11,11,11,12,3,3,3,3,3,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,7,3,7,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,5,11,12,11,12,11,5,5,5,12,11,11,11,11,11,11,12,12,13,13,7,3,3,3,3,4,3,17,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,14,11,11,11,11,11,14,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,12,12,5,5,11,12,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,12,11,11,11,12,11,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,12,12,12,12,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,12,12,18,3,18,18,18,18,18,18,18,18,6,3,8,18,18,18,18,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,16,3,3,8,18,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,6,6,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,18,18,18,18,17,18,18,17,17,18,18,17,17,17,17,17,17,18,6,3,3,17,17,18,17,17,18,18,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,18,18,3,18,18,18,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,18,3,8,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,5,11,18,2,2,2,2,2,2,18,18,2,3,2,2,2,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,5,0,11,11,11,11,11,0,11,11,0,11,11,11,11,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,13,18,18,13,18,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,18,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,3,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,18,13,17,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,18,13,18,3,6,3,3,6,6,3,3,6,18,8,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,17,17,3,3,12,0,0,12,5,5,5,0,5,5,0,12,0,5,0,5,12,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,17,17,3,17,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,11,11,11,11,12,12,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11],"n":["0","0","0","Error","Hz","ProcessInfo","Result","RingBuffer","RingBufferMemory","RingBufferReadTx","RingBufferWriteTx","SystemInfo","Tsc","TscDuration","allocator","delay","error","info","log","memory","now","now_ms","process","process_info","ring_buffer","set_process_info","set_system_info","system_info","time","timer","tsc","AtomicInfo","BigAllocator","DryAllocator","Info","Initialize","allocated","allocated","allocations","allocations","big","dry","info","pages","pages","requested","requested","sequence","BigAllocator","initialize_block","map","remap","rereserve","reserve","try_into_block","unmap","unreserve","DryAllocator","Garbage","Initialize","Zero","borrow","borrow_mut","dry_allocate","dry_deallocate","dry_grow","dry_shrink","fmt","from","into","try_from","try_into","type_id","0","AtomicCounter","AtomicInfo","Counter","Info","SizeCounter","add","allocated","allocated","allocated","allocation","allocations","allocations","allocations","balance","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deallocation","default","default","default","default","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragmentation_loss","fragmentation_loss_percentage","from","from","from","from","from","into","into","into","into","into","is_valid","is_valid","load","load","negative","negative","negative","negative","new","new","pages","pages","pages","positive","positive","positive","positive","requested","requested","requested","sequence","sub","sub","sub","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Elf","Error","FileExists","FileNotFound","Fmt","Int","InvalidArgument","Medium","NoData","NoDisk","NoFrame","NoPage","NoProcess","NoProcessSlot","NotDirectory","NotFile","Null","Overflow","PermissionDenied","Postcard","Result","RingBuffer","Timeout","Unimplemented","WrongAlignment","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","from","from","from","from","into","to_owned","try_from","try_into","type_id","0","0","0","0","0","PROCESS_INFO","ProcessInfo","SYSTEM_INFO","SystemInfo","borrow","borrow","borrow_mut","borrow_mut","contains_address","default","fmt","from","from","into","into","log","log","new","new","pid","pid","pit","pit","process_info","recursive_mapping","recursive_mapping","rtc","rtc","set_pid","set_process_info","set_system_info","system_info","system_info","try_from","try_from","try_into","try_into","type_id","type_id","0","1","Bool","I64","LOG_COLLECTOR","LogBuffer","LogCollector","LogEvent","LogField","LogFieldValue","LogMetadata","PLAN_B_MAX_MESSAGE_SIZE","PlanB","Str","U64","VecStr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","current_span","debug","deserialize","deserialize","deserialize","enabled","enter","error","event","exit","file","file","finalize","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","info","into","into","into","into","into","into","into","is_ok_so_far","level","level","level","level_into_symbol","level_try_from_symbol","line","line","log_message","lost_recently","lost_totally","name","new","new","new","new_span","overflow","plan_b_failures","plan_c_failures","record","record_bool","record_debug","record_debug","record_event","record_event","record_field","record_field","record_follows_from","record_header","record_i64","record_str","record_u64","record_vec_element","record_vec_str","recursion","recursive_failure","report_lost_message","report_lost_messages_statistics","result","result","separator","serialize","serialize","serializer","set_flush","set_result","target","target","timestamp","timestamp","trace","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","warn","write_str","write_str","0","0","0","0","Block","Frame","KERNEL_RW","Page","PageFaultInfo","Phys","Size","SizeOf","USER","USER_RW","Virt","addr","block","frage","mmu","page_fault_info","size","0","1","ADDR_NAME","Addr","BITS","BITS","BITS","BITS","FRAGE_NAME","HEX_PREFIX","NEGATIVE_SIGN_EXTEND","NEGATIVE_SIGN_EXTEND","Phys","PhysTag","Tag","UNUSED_BITS","UNUSED_BITS","UNUSED_BITS","UNUSED_BITS","Virt","VirtTag","add","address","address_by_index","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","eq","eq","eq","fmt","fmt","from","from","from","from","from_index","from_ptr","from_ptr","from_ref","from_ref","index","into","into","into","into_u64","into_usize","is_high_area","is_high_area","is_same_area","is_same_area","is_same_area","is_same_area","new","new","new","new","new_impl","new_impl","new_impl","new_impl","new_u64","partial_cmp","partial_cmp","partial_cmp","sub","sub","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_mut","try_into_mut","try_into_mut_ptr","try_into_mut_ptr","try_into_mut_slice","try_into_mut_slice","try_into_ptr","try_into_ptr","try_into_ref","try_into_ref","try_into_slice","try_into_slice","try_into_u32","type_id","type_id","type_id","0","1","Address","Block","IntoIter","Memory","NAME","address","address_by_index","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","contains_address","contains_block","count","default","enclosing","end","end","end_address","eq","fmt","fmt","from","from","from","from_index","from_index","from_index_u64","from_ptr","from_ref","from_slice","index","into","into","into_iter","into_iter","is_same_area","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","next","size","start","start","start_address","tag","tail","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","try_into_mut","try_into_mut_ptr","try_into_mut_slice","try_into_non_null_slice","try_into_ptr","try_into_ref","try_into_slice","type_id","type_id","0","Frage","Frame","Page","SIZE","address","address","address_by_index","address_by_index","borrow","borrow_mut","clone","clone_into","cmp","containing","default","eq","fmt","fmt","from","from_index","from_index","index","index","index_by_address","into","is_same_area","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","0","ACCESSED","ADDRESS_MASK","AVAILABLE","COPY_ON_WRITE","DIRTY","FULL_ACCESS","GLOBAL","HUGE_PAGE","KERNEL_READ","KERNEL_RW","NO_CACHE","NO_EXECUTE","PAGE_OFFSET_BITS","PAGE_TABLE_ENTRY_COUNT","PAGE_TABLE_INDEX_BITS","PAGE_TABLE_INDEX_MASK","PAGE_TABLE_LEAF_LEVEL","PAGE_TABLE_ROOT_LEVEL","PRESENT","PageTable","PageTableEntry","PageTableFlags","SYSCALL_ALLOWED_FLAGS","USER","USER_ACCESSIBLE","USER_READ","USER_RW","WRITABLE","WRITE_THROUGH","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","not","partial_cmp","phys","present","read_cr3","remove","set","set_flags","set_frame","set_phys","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","write_cr3","EXECUTE","PRESENT","PageFaultInfo","RESERVED_WRITE","USER","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_string","toggle","try_from","try_into","type_id","union","0","GiB","KiB","MiB","SIZE_OF","Size","SizeOf","TiB","borrow","borrow_mut","bytes","clone","clone_into","cmp","count_up","default","eq","fmt","fmt","from","from_slice","into","into_u64","into_usize","new","new_u64","of","partial_cmp","size","to_owned","to_string","try_from","try_into","try_into_u32","type_id","EXOFORK","ExitCode","Info","MiniContext","Pid","RFlags","RSP_OFFSET_IN_TRAP_INFO","RUNNABLE","RUNNING","ResultCode","State","Syscall","SyscallResult","TrapInfo","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","mini_context","not","partial_cmp","pid","pid","registers","remove","set","sub","sub_assign","symmetric_difference","syscall","to_owned","toggle","trap_info","try_from","try_into","type_id","union","MiniContext","RSP_OFFSET_IN_MINI_CONTEXT","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","into","new","push","rip","rip","rsp","rsp","to_owned","to_string","try_from","try_into","type_id","Current","EPOCH_SHIFT","INDEX_MASK","Id","MAX_COUNT","Pid","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","fmt","from","from_usize","into","into_usize","new","next_epoch","partial_cmp","slot","to_owned","to_string","try_from","try_into","type_id","epoch","slot","0","ALL","INTERRUPT_FLAG","RFlags","TRAP_FLAG","bitand","bitand_assign","bitor","bitor_assign","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","contains","default","eq","fmt","fmt","from","from","into","into_usize","iopl","not","read","to_owned","to_string","try_from","try_from","try_into","type_id","write","0","COPY_MAPPING","EXIT","EXOFORK","ExitCode","INVALID_ARGUMENT","LOG_VALUE","MAP","NO_FRAME","NO_PAGE","NO_PROCESS","NO_PROCESS_SLOT","NULL","OK","OK","OVERFLOW","PANIC","PERMISSION_DENIED","ResultCode","SCHED_YIELD","SET_STATE","SET_TRAP_HANDLER","Syscall","SyscallResult","UNEXPECTED","UNIMPLEMENTED","UNIMPLEMENTED_SYSCALL","UNMAP","WRONG_ALIGNMENT","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","union","Code","Info","None","PLACEHOLDER_SIZE","PageFault","RSP_OFFSET_IN_TRAP_INFO","TrapInfo","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","context","context","fmt","fmt","fmt","fmt","from","from","info","info","into","into","new","number","number","prepare_for_ret","return_address_placeholder","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","address","code","0","Error","MAPPED_SIZE","Overflow","REAL_SIZE","ReadTag","Result","RingBuffer","RingBufferMemory","RingBufferRaw","RingBufferReadTx","RingBufferStats","RingBufferTx","RingBufferWriteTx","STATS_INDEX","Tag","WriteTag","_tag","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf","bytes","capacity","check_continuous_mapping","clone","clone_into","commit","commit","commited","commits","drop","dropped","drops","eq","errors","fmt","fmt","from","from","from","from","from","from","from","head","head","head_tail","into","into","into","into","into","into","into","new","new","read","read_stats","read_tx","ring_buffer","stats","tail","tail","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","txs","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write_stats","write_tx","zero","capacity","exceeding_object_len","len","0","0","0","AtomicCorrelationInterval","CorrelationPoint","Hz","MSECS_PER_SEC","NSECS_PER_SEC","Tsc","TscDuration","base","correlation_interval","correlation_point","count","datetime","datetime_ms","delay","hz","now","now_ms","pit8254","prev","rtc","timer","tsc","tsc","tsc","AtomicCorrelationInterval","CorrelationInterval","base","base","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","datetime","datetime_with_resolution","default","default","elapsed_count","elapsed_tsc","eq","fmt","fmt","from","from","inc_prev","init_base","into","into","load","new","prev","prev","store_prev","to_owned","try_from","try_from","try_into","try_into","tsc_per_second","tsc_per_second","type_id","type_id","AtomicCorrelationPoint","CorrelationPoint","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","count","count","count","default","default","eq","fmt","fmt","from","from","inc","into","into","invalid","is_valid","is_valid","load","new","new","now","sequence_number","store","to_owned","try_from","try_from","try_into","try_into","try_load","tsc","tsc","tsc","type_id","type_id","0","Hz","borrow","borrow_mut","fmt","from","get","into","new","to_string","try_from","try_into","type_id","BASE","DIVISOR","Pit","TICKS_PER_SECOND","borrow","borrow_mut","from","into","try_from","try_into","tsc_per_second","type_id","Rtc","TICKS_PER_SECOND","borrow","borrow_mut","datetime","from","into","try_from","try_into","tsc_per_second","type_id","0","0","Tsc","TscDuration","U64_AS_F64_SHOULD_NOT_FAIL","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","elapsed","eq","eq","fmt","fmt","fmt","fractional_prefix","from","from","get","has_passed","into","into","into_f64","lap","now","partial_cmp","partial_cmp","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","tsc","type_id","type_id"],"q":["ku","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::allocator","","","","","","","","","","","","","","","","","ku::allocator::big","","","","","","","","","ku::allocator::dry","","","","","","","","","","","","","","","","ku::allocator::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::error::Error","","","","","ku::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::log::LogFieldValue","","","","ku::memory","","","","","","","","","","","","","","","","","ku::memory::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::memory::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::memory::frage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::memory::mmu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::memory::page_fault_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::memory::size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::process::mini_context","","","","","","","","","","","","","","","","","","","","","","","ku::process::pid","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::process::pid::Pid","","ku::process::registers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::process::syscall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::process::trap_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::process::trap_info::Info","","","ku::ring_buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::ring_buffer::Error","","","ku::time","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::time::correlation_interval","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::time::correlation_point","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ku::time::hz","","","","","","","","","","","","","ku::time::pit8254","","","","","","","","","","","","ku::time::rtc","","","","","","","","","","","ku::time::tsc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Вспомогательная структура для …","","","","","","","","Описывает момент времени, храня …","Описывает интервал между двумя …","Аллокаторы памяти общего …","","","Ядро предоставляет …","","Здесь собраны базовые …","","","Здесь собраны функции и …","","","","","","Здесь собраны базовые …","","Возвращает номер текущего …","Предназначена для …","","","Статистика аллокатора общего …","","Сколько памяти в байтах было …","Сколько памяти в байтах было …","Количество запросов к …","Количество запросов к …","Интерфейс аллокатора памяти …","Определяет <code>DryAllocator</code>, который …","Статистика аллокатора общего …","Количество виртуальных …","Количество виртуальных …","Сколько памяти в байтах было …","Сколько памяти в байтах было …","Нечётное значение в <code>AtomicInfo::sequence</code> …","Интерфейс аллокатора памяти …","Инициализирует <code>block</code> так, как …","Аллоцирует нужное количество …","Перемещает отображение …","Уменьшает ранее …","Выделяет новый блок подряд …","Преобразует <code>ptr</code> и <code>layout</code> в …","Удаляет отображение заданного …","Освобождает блок виртуальных …","Аналогичен <code>core::alloc::Allocator</code>, но при …","Инициализировать выделяемую …","Необходимо ли инициализировать …","Выделяемую память нужно …","","","Выделяет память как <code>Allocator::allocate()</code> …","Освобождает память как …","Увеличивает выделенный блок …","Уменьшает выделенный блок …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Атомарный счётчик для каждой из …","Предназначена для …","Счётчик для каждой из …","Статистика аллокатора общего …","Вспомогательная структура для …","Добавить к счётчику величину <code>value</code>…","Сколько памяти в байтах было …","Сколько памяти в байтах было …","Сколько памяти в байтах было …","Добавляет в счётчики одну …","Количество запросов к …","Количество запросов к …","Количество запросов к …","Баланс счётчика — значение …","","","","","","","","","","","","","","","Добавляет в счётчики одну …","","","","","","","","","","","","","","Сколько памяти в байтах …","Сколько памяти в процентах …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Проверка, соблюдены ли …","Проверка, соблюдены ли …","Загрузить структуру <code>Info</code> из …","Загрузить значение из счётчика.","Суммарный размер …","Суммарный размер …","Суммарный размер …","Суммарный размер …","Возвращает <code>AtomicInfo</code>, заполненную …","Создаёт атомарный счётчик для …","Количество виртуальных …","Количество виртуальных …","Количество виртуальных …","Суммарный размер …","Суммарный размер …","Суммарный размер …","Суммарный размер …","Сколько памяти в байтах было …","Сколько памяти в байтах было …","Сколько памяти в байтах было …","Нечётное значение в <code>AtomicInfo::sequence</code> …","","","Вычесть из счётчика величину <code>value</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Указатель на информации о …","Информация о текущем процессе.","Указатель на общую информации о …","Общая информации о системе.","","","","","Проверяет, принадлежит ли <code>address</code> …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Буфер для асинхронного …","Буфер для асинхронного …","Инициализирует <code>ProcessInfo</code>.","Инициализирует <code>SystemInfo</code>.","Идентификатор текущего …","Идентификатор текущего …","Счётчик тиков PIT.","Счётчик тиков PIT.","Информация о текущем процессе.","Номер рекурсивной записи в …","Номер рекурсивной записи в …","Показания часов реального …","Показания часов реального …","Устанавливает идентификатор …","Устанавливает указатель на …","Устанавливает указатель на …","Общая информации о системе.","Общая информации о системе.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the debug level.","","","","","","Constructs an event at the error level.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an event at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the warn level.","","","","","","","","","","","","","","","","","","Определения типов адресов …","Работа с блоками памяти <code>Block</code>.","Определения типов (виртуальных) …","Работа с блоком управления …","Информация об исключении …","Абстракция размера в памяти <code>Size</code>.","","","Задаёт имя типа при печати:","Базовый тип для адресов …","Количество используемых битов …","Количество используемых битов …","Количество используемых битов …","Количество используемых битов …","Задаёт имя типа при печати:","Заменяет префикс <code>0x</code> при печати …","Маска для знакового расширения …","Маска для знакового расширения …","Физический адрес архитектуры …","Тег физических адресов <code>ku::memory::Phys</code>…","Тег, позволяющий различать …","Количество неиспользуемых …","Количество неиспользуемых …","Количество неиспользуемых …","Количество неиспользуемых …","Виртуальный адрес архитектуры …","Тег виртуальных адресов и …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Преобразует указатель на <code>T</code> в <code>Virt</code>.","Преобразует указатель на <code>T</code> в <code>Virt</code>.","Преобразует ссылку на <code>T</code> в <code>Virt</code>.","Преобразует ссылку на <code>T</code> в <code>Virt</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает битовое …","Возвращает битовое …","Возвращает <code>true</code> если виртуальный …","Возвращает <code>true</code> если виртуальный …","Возвращает <code>true</code> если:","","","","Создаёт <code>Addr</code> — <code>Phys</code> или <code>Virt</code> — по его …","Создаёт <code>Addr</code> — <code>Phys</code> или <code>Virt</code> — по его …","","","Создаёт физический адрес по его …","Создаёт виртуальный адрес по …","Создаёт физический адрес по его …","Создаёт виртуальный адрес по …","Создаёт <code>Addr</code> — <code>Phys</code> или <code>Virt</code> — по его …","","","","","","","","","","","","","","","","Преобразует <code>Virt</code> в мутабельную …","Преобразует <code>Virt</code> в мутабельную …","Преобразует <code>Virt</code> в указатель на …","Преобразует <code>Virt</code> в указатель на …","Преобразует <code>Virt</code> в срез из <code>len</code> …","Преобразует <code>Virt</code> в срез из <code>len</code> …","Преобразует <code>Virt</code> в указатель на …","Преобразует <code>Virt</code> в указатель на …","Преобразует <code>Virt</code> в иммутабельную …","Преобразует <code>Virt</code> в иммутабельную …","Преобразует <code>Virt</code> в срез из <code>len</code> …","Преобразует <code>Virt</code> в срез из <code>len</code> …","Возвращает битовое …","","","","","","Тип адреса для базового типа:","Абстракция куска физической …","Итератор по блоку.","Описывает базовые типы для <code>Block</code> и …","Имя базового типа для …","Возвращает адрес базового …","Возвращает адрес базового …","","","","","","","","","Проверяет, что заданный элемент …","Проверяет, что заданный адрес …","Проверяет, что заданный <code>block</code> …","Возвращает количество …","","Для заданного блока …","Индекс следующего за последним …","Номер следующего за последним …","Возвращает адрес следующего за …","","","","Returns the argument unchanged.","Преобразует блок виртуальных …","Returns the argument unchanged.","Возвращает базовый элемент по …","Создаёт блок для полуоткрытого …","Создаёт блок для полуоткрытого …","Преобразует указатель на <code>T</code> в …","Преобразует ссылку на <code>T</code> в <code>Block&lt;Virt&gt;</code>.","Преобразует срез элементов …","Возвращает индекс базового …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Возвращает <code>true</code> если:","","","","","","","","","","","","","","Создаёт блок для полуоткрытого …","","Размер блока в байтах. Равно …","Индекс первого элемента в блоке.","Номер первого элемента в блоке.","Возвращает адрес первого …","Фантомное, не занимающее …","Разделяет блок на две …","","","","","","","","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в […","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","Преобразует <code>Block&lt;Virt&gt;</code> или <code>Block&lt;Page&gt;</code> в …","","","","Обобщённый тип для …","(Физический) фрейм памяти.","(Виртуальная) страница памяти.","Размер физического фрейма или …","","Возвращает начальный адрес — <code>Phys</code>…","","Возвращает адрес <code>Frage</code> по его …","","","","","","Создаёт <code>Frage</code> — <code>Frame</code> или <code>Page</code> — по …","","","","","Returns the argument unchanged.","Создаёт <code>Frage</code> — <code>Frame</code> или <code>Page</code> — по его …","","Возвращает номер физического …","","Возвращает номер физического …","Calls <code>U::from(self)</code>.","","Создаёт <code>Frage</code> — <code>Frame</code> или <code>Page</code> — по его …","","","","","","","","К странице был доступ.","Маска адреса физического …","Биты, доступные ОС для …","Один из битов <code>PageTableFlags::AVAILABLE</code> …","В страницу была запись.","","Страницу не нужно сбрасывать …","Большая страница вместо …","","","Кеширование страницы запрещено.","Запрет интерпретировать данные …","Количество бит в смещении …","Количество записей в одном узле …","Количество бит в номере записи …","Маска для вырезания из адреса …","Номер листьевого уровня …","Номер корневого уровня таблицы …","Страница отображена в память.","Узел таблицы страниц. …","Запись таблицы страниц.","Флаги в записи таблицы страниц. …","","","Страница доступна в режиме …","","","Страница доступна на запись.","Для страницы используется …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Очищает запись.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","Флаги доступа к странице, …","","","","","","","Физический фрейм, на который …","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Адреса физического фрейма, на …","Возвращает <code>true</code>, если запись …","Читает из регистра <code>CR3</code> …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Устанавливает флаги доступа к …","Устанавливает целевой …","Устанавливает адрес …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Записывает в регистра <code>CR3</code> …","","","https://wiki.osdev.org/Exceptions#Error_code","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Процесс только что создан и не …","","","","","","","Процесс готов к вытеснению, но …","Процесс выполняется в данный …","","Состояние пользовательского …","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Текущий процесс, это удобно для …","","","Конкретный процесс, …","Максимальное поддерживаемое <code>Pid</code> …","Идентификатор процесса.","","","","","","","","","Returns the argument unchanged.","Позволяет десериализовать <code>Pid</code> из …","Calls <code>U::from(self)</code>.","Позволяет сериализовать <code>Pid</code> в …","Создаёт <code>Pid</code> с начальным …","Инкрементирует номер эпохи …","","Номер слота в таблице процессов.","","","","","","Эпоха слота в таблице процессов.","Номер слота в таблице процессов.","","Все допустимые флаги.","Разрешает внешние прерывания.","Регистр флагов.","Включает режим трассировки.","","","","","","","","","","","Проверяет, что все указанные в …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Возвращает содержимое <code>self</code> в виде …","Возвращает Input/Output Privilege level","","Читает содержимое регистра …","","","","","","","Записывает <code>self</code> в регистр флагов …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>TrapInfo</code> can be pushed onto the same stack the <code>context</code> is …","","","","","","","","","","","","","","","","","","","","","Continuous Ring Buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Конкурентное хранилище в …","Предназначена для привязки …","Вспомогательная структура для …","Количество миллисекунд в одной …","Количество наносекунд в одной …","Описывает момент времени, храня …","Описывает интервал между двумя …","Значение <code>AtomicCorrelationPoint</code> в …","Вспомогательные структуры …","Вспомогательные структуры …","Значением счётчика тиков …","Переводит значение счётчика …","Переводит значение счётчика …","Спин–задержка на заданный <code>duration</code>.","Вспомогательная структура <code>Hz</code> …","Сообщает системное время в …","Сообщает системное время в …","Константы для драйвера …","Значение <code>AtomicCorrelationPoint</code> на момент …","Синглтон <code>Rtc</code>, позволяющий узнать …","Функция для получения …","Структура <code>Tsc</code> для хранения …","Возвращает номер текущего …","Значение счётчика тактов …","Конкурентное хранилище в …","Предназначена для соотнесения …","Значение <code>CorrelationPoint</code> в некоторый …","Значение <code>AtomicCorrelationPoint</code> в …","","","","","","","Выдаёт время, соответствующее …","Возвращает реальное время, …","","","Возвращает количество тиков …","Возвращает количество тактов …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Инкрементирует значение …","Инициализирует …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Читает значение <code>CorrelationInterval</code> из …","Возвращает <code>AtomicCorrelationInterval</code>, …","Значение <code>CorrelationPoint</code> на момент …","Значение <code>AtomicCorrelationPoint</code> на момент …","Сохраняет <code>prev</code> в значение …","","","","","","Возвращает частоту процессора …","Возвращает частоту процессора …","","","Предназначена для …","Предназначена для привязки …","","","","","","","Значением счётчика тиков …","Значением счётчика тиков …","Значение счётчика тиков …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Атомарно инкрементирует <code>count</code> и …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает <code>CorrelationPoint</code>, который …","Возвращает <code>true</code>, если <code>self</code> привязан …","Возвращает <code>true</code>, если <code>self</code> привязан …","Атомарно читает значение …","Возвращает <code>CorrelationPoint</code>, который …","Возвращает <code>AtomicCorrelationPoint</code>, …","Возвращает <code>CorrelationPoint</code>, который …","Нечётное значение в …","Атомарно записывает заданное …","","","","","","Читает значение <code>CorrelationPoint</code> из …","Значение счётчика тактов …","Значение счётчика тактов …","Значение счётчика тактов …","","","","Вспомогательная структура для …","","","","Returns the argument unchanged.","Возвращает содержащееся …","Calls <code>U::from(self)</code>.","Возвращает <code>Some</code> для ненулевой …","","","","","Базовая частота PIT в герцах, из …","Делитель базовой частоты для …","Синглтон, позволяющий узнать …","Сконфигурированная частота …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Оценка частоты процессора с …","","Синглтон, позволяющий узнать …","Частота тиков RTC.","","","Переводит номер такта …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Оценка частоты процессора с …","","","","Описывает момент времени, храня …","Описывает интервал между двумя …","Сообщение об ошибке при …","","","","","","","","","","","","Возвращает <code>TscDuration</code> с количеством …","","","","","","Переводит дробное значение <code>value</code> …","Returns the argument unchanged.","Returns the argument unchanged.","Возвращает номер такта …","Возвращает <code>true</code> если …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Возвращает количество тактов …","Возвращает <code>TscDuration</code> с количеством …","Возвращает <code>Tsc</code> с номером …","","","","","","","","","Преобразует <code>Duration</code> в <code>TscDuration</code>:","","","Возвращает номер текущего …","",""],"i":[101,50,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,17,15,17,0,0,0,15,17,15,17,17,0,0,104,104,104,104,0,104,104,0,4,0,4,4,4,105,105,105,105,4,4,4,4,4,4,19,0,0,0,0,0,13,15,15,17,17,15,15,17,16,19,15,17,16,13,19,15,17,16,13,15,16,15,16,17,15,17,16,13,15,16,19,15,15,17,16,16,13,15,15,19,15,17,16,13,19,15,17,16,13,15,16,17,13,16,13,16,13,17,13,15,15,17,16,13,16,13,15,15,17,17,15,16,13,15,16,19,15,16,19,15,17,16,13,19,15,17,16,13,19,15,17,16,13,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,5,22,22,22,22,22,22,22,22,22,22,106,107,108,109,110,0,0,0,0,28,30,28,30,28,30,30,28,30,28,30,28,28,28,30,28,28,30,30,0,28,28,30,30,28,0,0,0,28,28,30,28,30,28,30,37,37,38,38,0,0,0,0,0,0,0,0,0,38,38,38,46,55,34,44,36,37,38,46,55,34,44,36,37,38,44,34,0,36,37,38,34,34,0,34,34,36,36,44,34,34,36,37,38,46,55,34,44,36,37,38,0,46,55,34,44,36,37,38,46,36,34,36,0,0,36,36,55,34,34,37,34,44,36,34,55,34,34,34,46,46,55,46,55,46,55,34,46,46,46,46,46,46,34,34,34,34,46,44,55,36,38,46,34,46,36,36,36,36,0,44,46,55,34,44,36,37,38,46,55,34,44,36,37,38,44,46,55,34,44,36,37,38,37,0,46,55,111,112,113,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,58,0,68,29,59,59,58,58,29,59,0,0,0,68,29,59,59,0,0,59,59,59,59,61,62,59,61,62,59,61,62,59,61,62,59,61,62,59,61,62,59,61,62,59,59,29,59,61,62,59,29,59,29,59,59,59,61,62,59,59,29,59,58,59,61,62,58,59,61,62,68,29,59,59,59,59,61,62,59,59,59,61,62,59,59,61,62,59,61,62,29,59,29,59,29,59,29,59,29,59,29,59,59,59,61,62,71,71,70,0,0,0,70,70,70,3,71,3,71,3,71,3,71,3,3,3,3,3,3,3,3,3,3,3,3,3,3,71,70,3,3,3,3,3,70,3,71,3,71,70,71,71,71,71,71,71,71,71,71,71,71,71,71,3,71,3,3,3,3,3,3,3,71,3,3,71,3,71,3,3,3,3,3,3,3,3,71,72,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,74,73,74,73,73,73,0,73,73,0,0,73,73,0,0,0,0,0,0,73,0,0,0,0,0,73,0,0,73,73,73,73,73,73,73,73,73,73,73,74,73,74,73,74,74,73,74,73,73,73,73,74,73,73,74,73,73,74,74,73,73,73,73,73,74,74,73,73,73,73,73,73,73,73,73,74,73,73,73,73,73,74,74,0,73,73,74,74,74,73,73,73,74,73,73,74,73,74,73,74,73,73,0,77,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,0,0,0,115,0,0,0,78,78,78,78,78,78,115,78,78,78,78,78,78,78,0,0,78,78,78,78,78,78,78,78,78,0,78,79,0,0,0,0,0,0,79,79,0,0,0,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,0,0,0,79,79,79,79,79,0,79,79,0,79,79,79,79,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,116,81,81,81,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,85,84,84,84,0,23,84,84,23,23,23,23,23,83,23,23,83,23,0,84,84,84,0,0,23,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,85,23,83,84,85,23,83,84,85,23,83,84,85,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,85,23,83,84,23,83,83,83,83,83,84,84,84,84,84,85,23,23,23,23,23,83,84,85,23,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,85,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,23,83,84,85,23,83,84,23,83,84,85,23,83,84,85,23,83,84,85,23,83,84,23,87,0,87,86,87,0,0,86,87,86,87,86,87,86,87,86,86,86,86,87,87,86,87,86,86,86,87,86,86,86,86,86,86,87,86,87,86,87,86,87,86,87,117,118,118,93,0,31,27,31,0,0,0,0,0,0,0,0,0,91,0,0,89,31,93,31,89,90,88,92,27,93,31,89,90,88,92,27,31,31,89,89,31,27,27,89,89,92,92,89,92,92,27,92,92,27,93,31,89,90,88,92,27,31,89,31,93,31,89,90,88,92,27,31,92,89,31,31,89,31,31,89,27,93,31,89,90,88,92,27,93,31,89,90,88,92,27,31,92,93,31,89,90,88,92,27,89,31,31,31,119,119,119,101,50,103,0,0,0,0,0,0,0,33,0,0,100,0,0,0,0,0,0,0,33,0,0,0,0,100,0,0,98,33,98,33,98,33,98,98,98,98,98,33,98,98,98,98,33,98,33,33,33,98,33,33,33,98,33,33,98,98,33,98,33,98,33,98,33,0,0,100,102,100,102,100,100,100,100,102,100,102,100,100,102,100,102,102,100,102,100,100,102,102,100,102,100,102,102,100,100,102,100,102,102,100,100,102,100,102,101,0,101,101,101,101,101,101,101,101,101,101,101,0,0,0,0,120,120,120,120,120,120,120,120,0,0,121,121,121,121,121,121,121,121,121,50,103,0,0,0,50,103,50,103,50,103,50,103,50,103,50,50,50,103,50,103,103,0,50,103,50,50,50,103,103,50,50,50,103,50,50,103,103,50,103,103,50,103,0,50,103],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[2]],4],5],[[[3,[2]]],5],[[[3,[2]],[3,[2]]],5],[[[3,[2]],[3,[2]]],5],[6,[[5,[[3,[2]]]]]],[[[8,[7]],6],[[5,[[3,[2]]]]]],[[[3,[2]]],5],[[[3,[2]]],5],0,0,0,0,[[]],[[]],[[6,4],[[5,[8]]]],[[[8,[7]],6]],[[[8,[7]],6,6,4],[[5,[8]]]],[[[8,[7]],6,6],[[5,[8]]]],[[4,9],10],[[]],[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,[[13,14]],[15,16],0,0,[[17,14,14,14]],[15,16],0,0,[16,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[16,16],[[]],[[]],[[17,14,14,14]],[[],15],[[],17],[[],16],[[],13],[[15,15],18],[[16,16],18],[[19,9],10],[[15,9],10],[[15,9],10],[[17,9],10],[[16,9],10],[[16,9],10],[[13,9],10],[15,14],[15,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,18],[16,18],[17,15],[13,16],[16,14],[13,14],0,0,[[],17],[[],13],[15,16],0,0,[16,14],[13,14],0,0,[15,16],0,0,0,[[15,15]],[[16,16]],[[13,14]],[[]],[[]],[[],21],[[],21],[[],21],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[22,22],[[]],[[22,22],18],[[22,9],10],[23,5],[24,22],[[]],[25,22],[26,22],[27,22],[[]],[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[28,29],18],[[],30],[[30,9],10],[[]],[[]],[[]],[[]],[28,31],0,[[31,14,30],28],[[],30],[28,32],0,[30,33],0,[[],28],[28,14],0,[30,33],0,[[28,32]],[28],[30],[[],30],0,[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[34,35],0,[[],[[11,[36]]]],[[],[[11,[37]]]],[[],[[11,[38]]]],[[34,39],18],[[34,40]],0,[[34,41]],[[34,40]],[36,[[43,[42]]]],0,[44,45],[34,18],0,[[36,9],10],[[37,9],10],[[38,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,5],[36,[[5,[47]]]],0,0,[47,48],[48,[[5,[47]]]],[36,[[43,[49]]]],0,0,0,0,[37,42],[47,34],[[],44],[[39,50],36],[[34,51],40],0,0,0,[[34,40,52]],[[46,53,18]],[[46,53,54]],[[55,53,54]],[[41,50],5],[41,56],[[46,53,38],5],[[55,53,54],11],[[34,40,40]],[[46,41,50],5],[[46,53,1]],[[46,53,42]],[[46,53,57]],[[46,42],5],[[46,54],5],0,0,[[34,41,50,22]],[34],0,0,0,[36,11],[38,11],0,[34],[[46,5]],[36,42],0,[36,50],0,0,[44,45],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[44,7],45],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[37,38],0,[[46,42],10],[[55,42],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[59,[58]],14]],[[[59,[58]]]],[14,5],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[60]]],[[59,[60]]]],[61,61],[62,62],[[]],[[]],[[]],[[[59,[63]],59],64],[[61,61],64],[[62,62],64],[[],[[59,[65]]]],[[],61],[[],62],[[[59,[66]],59],18],[[61,61],18],[[62,62],18],[[[59,[58]],9],10],[[[59,[58]],9],10],[67,29],[[]],[[]],[[]],[14,[[5,[[59,[58]]]]]],[[],29],[[],[[59,[62]]]],[[],29],[[],[[59,[62]]]],[[[59,[58]]],14],[[]],[[]],[[]],[[[59,[58]]],57],[[[59,[58]]],14],[29,18],[[[59,[62]]],18],[[59,59],18],[[],18],[[68,68],18],[[29,29],18],[14,[[5,[59]]]],[14,[[5,[[59,[58]]]]]],[14,[[5,[68]]]],[14,[[5,[29]]]],[14,[[5,[68]]]],[14,[[5,[29]]]],[14,[[5,[[59,[61]]]]]],[14,[[5,[[59,[62]]]]]],[57,[[5,[[59,[58]]]]]],[[[59,[69]],59],[[43,[64]]]],[[61,61],[[43,[64]]]],[[62,62],[[43,[64]]]],[[[59,[58]],14]],[[[59,[58]],[59,[58]]]],[[]],[[]],[[]],[[],21],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[29,5],[[[59,[62]]],5],[29,5],[[[59,[62]]],5],[[29,14],5],[[[59,[62]],14],5],[29,5],[[[59,[62]]],5],[29,5],[[[59,[62]]],5],[[29,14],5],[[[59,[62]],14],5],[[[59,[58]]],[[5,[49]]]],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,[[]],[14,5],[[]],[[]],[[]],[[]],[[[3,[[0,[60,70]]]]],[[3,[[0,[60,70]]]]]],[[[71,[[0,[60,70]]]]],[[71,[[0,[60,70]]]]]],[[]],[[]],[[[3,[70]],70],18],[[[3,[70]]],18],[[[3,[70]],[3,[70]]],18],[[[3,[70]]],14],[[],[[3,[[0,[65,70]]]]]],[[[3,[[59,[58]]]]],[[3,[[72,[58]]]]]],[[[3,[70]]],14],0,[[[3,[70]]],5],[[[3,[[0,[66,70]]]],3],18],[[[3,[70]],9],10],[[[3,[70]],9],10],[[]],[[[3,[[72,[58]]]]],[[3,[[59,[58]]]]]],[[]],[14,5],[[14,14],[[5,[[3,[70]]]]]],[[57,57],[[5,[[3,[70]]]]]],[[],[[3,[29]]]],[[],[[3,[29]]]],[[],[[3,[29]]]],[[],14],[[]],[[]],[[[3,[70]]]],[[]],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,70],[[5,[[3,[70]]]]]],[[[71,[70]]],43],[[[3,[70]]],14],[[[3,[70]]],14],0,[[[3,[70]]]],0,[[[3,[70]],14],[[43,[[3,[70]]]]]],[[]],[[]],[[],21],[[],11],[[],11],[[],11],[[],11],[[[3,[70]]],5],[[[3,[70]]],5],[[[3,[70]]],5],[[[3,[70]]],[[5,[8]]]],[[[3,[70]]],5],[[[3,[70]]],5],[[[3,[70]]],5],[[],12],[[],12],0,0,0,0,0,[[[72,[58]]]],[[[72,[58]]],[[59,[58]]]],[14,5],[14,[[5,[[59,[58]]]]]],[[]],[[]],[[[72,[[0,[60,58]]]]],[[72,[[0,[60,58]]]]]],[[]],[[[72,[[0,[63,58]]]],72],64],[[[59,[58]]],[[72,[58]]]],[[],[[72,[[0,[65,58]]]]]],[[[72,[[0,[66,58]]]],72],18],[[[72,[58]],9],10],[[[72,[58]],9],10],[[]],[14,[[5,[[72,[58]]]]]],[14,[[5,[[72,[58]]]]]],[[[72,[58]]],14],[[[72,[58]]],14],[[[59,[58]]],14],[[]],[[],18],[[[59,[58]]],[[5,[[72,[58]]]]]],[[[72,[[0,[69,58]]]],72],[[43,[64]]]],[[]],[[],21],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],73],[[73,73],73],[[73,73]],[[73,73],73],[[73,73]],[73,14],0,[[73,73],73],[[73,73]],[[]],[[]],[[]],[[]],[74],[74,74],[73,73],[[]],[[]],[[73,73],64],[73,73],[[73,73],18],[[],74],[[73,73],73],[[],73],[[74,74],18],[[73,73],18],[[73,75]],[74,73],[[74,9],10],[[73,9],10],[[73,9],10],[[73,9],10],[[73,9],10],[[73,9],10],[74,[[5,[76]]]],[[]],[[]],[14,[[43,[73]]]],[14,73],[14,73],[75,73],[73],[[73,73]],[[73,73],73],[[73,73],18],[[]],[[]],[73,18],[73,18],[73,73],[[73,73],[[43,[64]]]],[74,68],[74,18],[[],76],[[73,73]],[[73,73,18]],[[74,73]],[[74,76,73]],[[74,68,73]],[[73,73],73],[[73,73]],[[73,73],73],[[]],[[]],[[73,73]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[73,73],73],[76],0,0,0,0,0,0,[[],77],[[77,77],77],[[77,77]],[[77,77],77],[[77,77]],[77,14],0,[[77,77],77],[[77,77]],[[]],[[]],[77,77],[[]],[[77,77],64],[77,77],[[77,77],18],[[77,77],77],[[],77],[[77,77],18],[[77,75]],[[77,9],10],[[77,9],10],[[77,9],10],[[77,9],10],[[77,9],10],[[77,9],10],[[]],[14,[[43,[77]]]],[14,77],[14,77],[75,77],[77],[[77,77]],[[77,77],77],[[77,77],18],[[]],[77,18],[77,18],[77,77],[[77,77],[[43,[64]]]],[[77,77]],[[77,77,18]],[[77,77],77],[[77,77]],[[77,77],77],[[]],[[],21],[[77,77]],[[],11],[[],11],[[],12],[[77,77],77],0,0,0,0,0,0,0,0,[[]],[[]],[14,78],[78,78],[[]],[[78,78],64],[14,14],[[],78],[[78,78],18],[[78,9],10],[[78,9],10],[[]],[[],78],[[]],[14,57],[57,14],[14,78],[57,78],[[],78],[[78,78],[[43,[64]]]],[78,14],[[]],[[],21],[[],11],[[],11],[14,[[5,[49]]]],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],79],[[79,79],79],[[79,79]],[[79,79],79],[[79,79]],[79,14],0,[[79,79],79],[[79,79]],[[]],[[]],[79,79],[[]],[[79,79],64],[79,79],[[79,79],18],[[79,79],79],[[],79],[[79,79],18],[[79,75]],[[79,9],10],[[79,9],10],[[79,9],10],[[79,9],10],[[79,9],10],[[]],[14,[[43,[79]]]],[14,79],[14,79],[75,79],[79],[[79,79]],[[79,79],79],[[79,79],18],[[]],[79,18],[79,18],0,[79,79],[[79,79],[[43,[64]]]],0,[[],32],0,[[79,79]],[[79,79,18]],[[79,79],79],[[79,79]],[[79,79],79],0,[[]],[[79,79]],0,[[],11],[[],11],[[],12],[[79,79],79],0,0,[[]],[[]],[80,80],[[]],[[],80],[[80,80],18],[[80,9],10],[[80,9],10],[[]],[[]],[[29,29],80],[80,[[5,[[3,[29]]]]]],[80,29],0,[80,29],0,[[]],[[],21],[[],11],[[],11],[[],12],0,0,0,0,0,0,[[]],[[]],[32,32],[[]],[[32,32],64],[[32,32],18],[[32,9],10],[[32,9],10],[[]],[14,[[5,[32]]]],[[]],[32,14],[14,32],[32],[[32,32],[[43,[64]]]],[32,14],[[]],[[],21],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,[[81,81],81],[[81,81]],[[81,81],81],[[81,81]],[[81,81],81],[[81,81]],[[]],[[]],[81,81],[[]],[[81,81],18],[[],81],[[81,81],18],[[81,9],10],[[81,9],10],[82,81],[[]],[[]],[81,14],[81,14],[81],[[],81],[[]],[[],21],[14,[[5,[81]]]],[[],11],[[],11],[[],12],[81],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],83],[[],84],[[],23],[[83,83],83],[[84,84],84],[[23,23],23],[[83,83]],[[84,84]],[[23,23]],[[83,83],83],[[84,84],84],[[23,23],23],[[83,83]],[[84,84]],[[23,23]],[83,14],[84,14],[23,14],0,0,0,[[83,83],83],[[84,84],84],[[23,23],23],[[83,83]],[[84,84]],[[23,23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[84,84],[85,85],[23,23],[[]],[[]],[[]],[[]],[[83,83],64],[[84,84],64],[[23,23],64],[83,83],[84,84],[23,23],[[83,83],18],[[84,84],18],[[23,23],18],[[83,83],83],[[84,84],84],[[23,23],23],[[],83],[[],84],[[],23],[[83,83],18],[[84,84],18],[[85,85],18],[[23,23],18],[[83,75]],[[84,75]],[[23,75]],[[83,9],10],[[83,9],10],[[83,9],10],[[83,9],10],[[83,9],10],[[84,9],10],[[84,9],10],[[84,9],10],[[84,9],10],[[84,9],10],[[85,9],10],[[23,9],10],[[23,9],10],[[23,9],10],[[23,9],10],[[23,9],10],[[]],[[]],[[]],[5,23],[[]],[14,[[43,[83]]]],[14,[[43,[84]]]],[14,[[43,[23]]]],[14,83],[14,84],[14,23],[14,83],[14,84],[14,23],[75,83],[75,84],[75,23],[83],[84],[23],[[83,83]],[[84,84]],[[23,23]],[[83,83],83],[[84,84],84],[[23,23],23],[[83,83],18],[[84,84],18],[[23,23],18],[[]],[[]],[[]],[[]],[83,18],[84,18],[23,18],[83,18],[84,18],[23,18],[83,83],[84,84],[23,23],[[83,83],[[43,[64]]]],[[84,84],[[43,[64]]]],[[23,23],[[43,[64]]]],[[83,83]],[[84,84]],[[23,23]],[[83,83,18]],[[84,84,18]],[[23,23,18]],[[83,83],83],[[84,84],84],[[23,23],23],[[83,83]],[[84,84]],[[23,23]],[[83,83],83],[[84,84],84],[[23,23],23],[[]],[[]],[[]],[[]],[[83,83]],[[84,84]],[[23,23]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[83,83],83],[[84,84],84],[[23,23],23],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[86,86],[87,87],[[]],[[]],[86,80],0,[[86,9],10],[[86,9],10],[[87,9],10],[[87,9],10],[[]],[[]],[86,87],0,[[]],[[]],[[14,87,80],86],[86,14],0,[86,5],0,[[]],[[]],[[],21],[[],21],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,[[3,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31],0,0,[[[89,[88]]],14],[[]],[27,27],[[]],[[[89,[90]]]],[[[89,[88]]]],0,0,[[[89,[91]]]],0,0,[[27,27],18],0,[[92,9],10],[[27,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,31],[[],92],[[[89,[90]]]],[31,92],[31,[[89,[90]]]],0,0,0,0,[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[31,[[89,[91]]]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[89,[88]]],94],[31,92],[31,[[89,[88]]]],[[],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[50,[[96,[95]]]],[50,[[96,[95]]]],[97],0,[[],[[96,[95]]]],[[],[[96,[95]]]],0,0,0,[[],50],0,[[],1],0,0,0,0,0,[[]],[[]],[[]],[[]],[98,98],[[]],[[33,50],[[96,[95]]]],[[98,50],99],[[],98],[[],33],[98,1],[98,1],[[98,98],18],[[98,9],10],[[33,9],10],[[]],[[]],[[33,1]],[[33,100]],[[]],[[]],[33,98],[[],33],0,0,[[33,100]],[[]],[[],11],[[],11],[[],11],[[],11],[98,1],[33,[[43,[101]]]],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],[100,100],[[]],[100,1],0,0,[[],100],[[],102],[[100,100],18],[[100,9],10],[[102,9],10],[[]],[[]],[[102,1]],[[]],[[]],[1,100],[100,18],[102,18],[102,100],[[1,1],100],[[],102],[1,100],0,[[102,100]],[[]],[[],11],[[],11],[[],11],[[],11],[102,[[43,[100]]]],[100,1],0,0,[[],12],[[],12],0,0,[[]],[[]],[[101,9],10],[[]],[101,57],[[]],[57,[[43,[101]]]],[[],21],[[],11],[[],11],[[],12],0,0,0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],[[43,[101]]]],[[],12],0,0,[[]],[[]],[50,[[96,[95]]]],[[]],[[]],[[],11],[[],11],[[],[[43,[101]]]],[[],12],0,0,0,0,0,[[]],[[]],[[]],[[]],[50,50],[103,103],[[]],[[]],[[50,50],64],[[103,103],64],[[],[[11,[50]]]],[50,103],[[50,50],18],[[103,103],18],[[50,9],10],[[103,9],10],[[103,9],10],[20],[[]],[[]],[50,1],[[50,97],18],[[]],[[]],[103,20],[50,103],[[],50],[[50,50],[[43,[64]]]],[[103,103],[[43,[64]]]],[50,11],[[]],[[]],[[],21],[[],11],[[],11],[97,[[5,[103]]]],[[],11],[[],11],[[],1],[[],12],[[],12]],"p":[[15,"i64"],[6,"Page"],[3,"Block"],[4,"Initialize"],[6,"Result"],[3,"Layout"],[15,"u8"],[3,"NonNull"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"AtomicCounter"],[15,"usize"],[3,"Info"],[3,"Counter"],[3,"AtomicInfo"],[15,"bool"],[3,"SizeCounter"],[15,"f64"],[3,"String"],[4,"Error"],[3,"ResultCode"],[3,"TryFromIntError"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"ProcessInfo"],[6,"Virt"],[3,"SystemInfo"],[3,"RingBuffer"],[4,"Pid"],[3,"AtomicCorrelationInterval"],[3,"LogCollector"],[3,"Current"],[3,"LogMetadata"],[3,"LogField"],[4,"LogFieldValue"],[3,"Metadata"],[3,"Id"],[3,"Event"],[15,"str"],[4,"Option"],[3,"LogBuffer"],[6,"Result"],[3,"LogEvent"],[3,"Level"],[15,"char"],[15,"u32"],[3,"Tsc"],[3,"Attributes"],[3,"Record"],[3,"Field"],[8,"Debug"],[3,"PlanB"],[3,"String"],[15,"u64"],[8,"Tag"],[3,"Addr"],[8,"Clone"],[3,"PhysTag"],[3,"VirtTag"],[8,"Ord"],[4,"Ordering"],[8,"Default"],[8,"PartialEq"],[3,"VirtAddr"],[6,"Phys"],[8,"PartialOrd"],[8,"Memory"],[3,"IntoIter"],[3,"Frage"],[3,"PageTableFlags"],[3,"PageTableEntry"],[8,"IntoIterator"],[6,"Frame"],[3,"PageFaultInfo"],[3,"Size"],[3,"State"],[3,"MiniContext"],[3,"RFlags"],[3,"RFlags"],[3,"ExitCode"],[3,"Syscall"],[3,"SyscallResult"],[3,"TrapInfo"],[4,"Info"],[3,"WriteTag"],[3,"RingBufferTx"],[3,"ReadTag"],[8,"Tag"],[3,"RingBufferStats"],[3,"RingBufferMemory"],[6,"Result"],[3,"Utc"],[3,"DateTime"],[3,"Duration"],[3,"CorrelationInterval"],[3,"NaiveDateTime"],[3,"CorrelationPoint"],[3,"Hz"],[3,"AtomicCorrelationPoint"],[3,"TscDuration"],[8,"BigAllocator"],[8,"DryAllocator"],[13,"Elf"],[13,"Fmt"],[13,"Int"],[13,"Postcard"],[13,"RingBuffer"],[13,"Bool"],[13,"I64"],[13,"Str"],[13,"U64"],[8,"SizeOf"],[13,"Id"],[13,"Code"],[13,"PageFault"],[13,"Overflow"],[3,"Pit"],[3,"Rtc"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[[]],0],"p":[]},\
"lib":{"doc":"Библиотека для …","t":[5,0,14,0,5,0,7,5,5,0,7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,7,5,5,5,5,5,5,5,5,5,5,5,5],"n":["_start","allocator","entry","memory","panic","syscall","GLOBAL_ALLOCATOR","alloc_error_handler","info","map","INFO","MapAllocator","alloc","alloc_zeroed","allocate","allocate_zeroed","borrow","borrow_mut","dealloc","deallocate","dry_allocate","dry_deallocate","dry_grow","dry_shrink","from","grow","grow_zeroed","info","into","map","new","realloc","remap","rereserve","reserve","shrink","try_from","try_into","type_id","unmap","unreserve","copy_page","page_table","temp_page","TRAP_HANDLER","copy_mapping","exit","exofork","log_value","map","sched_yield","set_state","set_trap_handler","syscall","trap_handler_invoker","trap_trampoline","unmap"],"q":["lib","","","","","","lib::allocator","","","","lib::allocator::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lib::memory","","","lib::syscall","","","","","","","","","","","",""],"d":["Точка входа в процесс …","Аллокатор памяти общего …","Задаёт функцию <code>main()</code> …","Вспомогательные функции для …","Обработчик паники.","Системные вызовы.","Глобальный аллокатор памяти …","Обработчик ошибок глобального …","Статистика глобального …","Аллокатор памяти общего …","Статистика аллокатора общего …","Аллокатор памяти общего …","","","","","","","","","","","","","Returns the argument unchanged.","","","Статистика аллокатора общего …","Calls <code>U::from(self)</code>.","","Аллокатор памяти общего …","","","","","","","","","","","Копирует содержимое страницы <code>src</code> …","Пользуясь рекурсивной записью …","Заводит в адресном …","Адрес обработчика <code>trap_handler()</code>, …","Системный вызов <code>syscall::copy_mapping()</code>. …","Системный вызов <code>syscall::exit()</code>. …","Системный вызов <code>syscall::exofork()</code>. …","Системный вызов <code>syscall::log_value()</code>. …","Системный вызов <code>syscall::map()</code>. …","Системный вызов <code>syscall::sched_yield()</code>. …","Системный вызов <code>syscall::set_state()</code>. …","Системный вызов <code>syscall::set_trap_handler()</code>. …","Системный вызовов номер <code>number</code> с …","Передаёт управление …","Получает управление, если в …","Системный вызов <code>syscall::unmap()</code>. …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[1,2],0,0,0,[3,2],0,0,[4,2],[[],5],0,0,0,[[6,4],7],[[6,4],7],[[6,4],[[10,[8,9]]]],[[6,4],[[10,[8,9]]]],[[]],[[]],[[6,7,4]],[[6,[8,[7]],4]],[[4,11],[[10,[8,12]]]],[[[8,[7]],4]],[[[8,[7]],4,4,11],[[10,[8,12]]]],[[[8,[7]],4,4],[[10,[8,12]]]],[[]],[[6,[8,[7]],4,4],[[10,[8,9]]]],[[6,[8,[7]],4,4],[[10,[8,9]]]],[6,5],[[]],[[6,[14,[13]]],15],[[],6],[[6,7,4,16],7],[[6,[14,[13]],[14,[13]]],15],[[6,[14,[13]],[14,[13]]],15],[[6,4],[[15,[[14,[13]]]]]],[[6,[8,[7]],4,4],[[10,[8,9]]]],[[],10],[[],10],[[],17],[[6,[14,[13]]],15],[[6,[14,[13]]],15],[[13,13]],[[18,19],20],[[],[[15,[13]]]],0,[[21,[14,[13]],[14,[13]],22],15],[16,2],[[],[[15,[21]]]],[[23,16],15],[[21,[14,[13]],22],[[15,[[14,[13]]]]]],[[]],[[21,24],15],[[21,[14,[13]]],15],[[16,16,16,16,16,16],15],[25],[[],2],[[21,[14,[13]]],15]],"p":[[3,"ProcessInfo"],[15,"never"],[3,"PanicInfo"],[3,"Layout"],[3,"Info"],[3,"MapAllocator"],[15,"u8"],[3,"NonNull"],[3,"AllocError"],[4,"Result"],[4,"Initialize"],[4,"Error"],[6,"Page"],[3,"Block"],[6,"Result"],[15,"usize"],[3,"TypeId"],[6,"Virt"],[15,"u32"],[6,"PageTable"],[4,"Pid"],[3,"PageTableFlags"],[15,"str"],[3,"State"],[3,"TrapInfo"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[35,36,0,15,16,0,0,15,4,5,16,35,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,3,18,6,19,8,9,11,21,22,3,18,9,22,23,9,11,24,9,24,3,18,6,19,8,9,11,21,22,12,3,3,18,18,13,6,6,19,19,14,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,40,41,12,12,12,3,18,5,13,13,13,6,19,14,14,14,8,9,11,21,22,12,13,14,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,12,13,14,15,15,12,5,13,16,16,14,16,16,14,5,13,3,15,12,5,13,16,16,32,20,3,18,6,19,8,9,21,22,3,12,13,14,4,12,13,14,14,14,6,8,9,11,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,15,12,5,13,16,36,36,35,12,5,13,16,36,32,37,37,36,35,12,5,13,20,38,38,3,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,38,11,38,11,14,14,14,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,15,5,16,7,1,3,18,5,6,19,8,9,11,21,22,16,7,20,10,3,6,8,9,11,3,6,8,9,11,14,20,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[],[[12,[15,[0,[2,17]]]]]],[[],[[13,[15,4,[0,[2,17]]]]]],[[],[[14,[16,[0,[2,17]]]]]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[6,[15,4,2]]]],[[[19,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[21,[16,2]]]],[[[22,[16,2]]]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[9,[16,2]]]],[[[22,[16,2]]]],[[]],[[[9,[23,2]]],[[8,[23,2]]]],[[[11,[24,2]]],[[8,[24,2]]]],[[]],[[[9,[24,2]]],[[11,[24,2]]]],[[]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[6,[15,4,2]]]],[[[19,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[21,[16,2]]]],[[[22,[16,2]]]],[[[12,[15,[0,[2,25]]]],26],27],[[[3,[15,[0,[25,2]]]],26],27],[[[3,[15,[0,[28,2]]]],26],27],[[[18,[15,[0,[28,2]]]],26],27],[[[18,[15,[0,[25,2]]]],26],27],[[[13,[15,4,[0,[2,25]]]],26],27],[[[6,[15,4,[0,[25,2]]]],26],27],[[[6,[15,4,[0,[28,2]]]],26],27],[[[19,[15,4,[0,[28,2]]]],26],27],[[[19,[15,4,[0,[25,2]]]],26],27],[[[14,[16,[0,[2,25]]]],26],27],[[[8,[16,[0,[28,2]]]],26],27],[[[8,[16,[0,[25,2]]]],26],27],[[[9,[16,[0,[28,2]]]],26],27],[[[9,[16,[0,[25,2]]]],26],27],[[[11,[20,[0,[25,2]]]],26],27],[[[11,[20,[0,[28,2]]]],26],27],[[[21,[16,[0,[28,2]]]],26],27],[[[21,[16,[0,[25,2]]]],26],27],[[[22,[16,[0,[28,2]]]],26],27],[[[22,[16,[0,[25,2]]]],26],27],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[12,[1,2]]]],[[[13,[1,4,2]]]],[[[14,[16,2]]]],[[[14,[7,2]]]],[[[14,[16,2]]]],[[[14,[7,2]]]],[[]],[[]],[29],[[]],[[],[[12,[15]]]],[[]],[[]],[[]],[[],[[13,[15,4]]]],[[]],[29],[[]],[[]],[29],[[],[[14,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,4]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,2]]],30],[[[5,[15,4]]],30],[[[13,[15,4,2]]],30],[[],30],[[],30],[[[14,[16,2]]],30],[[],30],[[],30],[[[14,[16,2]]],30],[[[5,[15,4]]],30],[[[13,[15,4,2]]],30],[[[3,[15,2]]]],[[]],[[[12,[15,2]]],[[3,[15,2]]]],[[[5,[15,4]]]],[[[13,[15,4,2]]],[[6,[15,4,2]]]],[[]],[[]],[[]],[[]],[[[3,[15,2]]],[[18,[15,2]]]],[[[18,[15,2]]],[[18,[15,2]]]],[[[6,[15,4,2]]],[[19,[15,4,2]]]],[[[19,[15,4,2]]],[[19,[15,4,2]]]],[[[8,[16,2]]],[[21,[16,2]]]],[[[9,[16,2]]],[[22,[16,2]]]],[[[21,[16,2]]],[[21,[16,2]]]],[[[22,[16,2]]],[[22,[16,2]]]],[[[3,[15,2]]],12],[[],[[12,[15]]]],[[],[[13,[15,4]]]],[[],[[14,[16]]]],[[],31],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[[14,[16,2]]],[[8,[16,2]]]],[[[14,[32,2]]],[[8,[32,2]]]],[[[6,[15,4,2]]],13],[[[8,[16,2]]],14],[[[9,[16,2]]],14],[[[11,[20,2]]],14],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],30],[[[12,[15,2]]],[[34,[[3,[15,2]]]]]],[[[5,[15,4]]],30],[[[13,[15,4,2]]],[[34,[[6,[15,4,2]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[35,2]]],[[34,[[3,[35,2]]]]]],[[[5,[35,4]]],30],[[[13,[35,4,2]]],[[34,[[6,[35,4,2]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[35,2]]],[[34,[[3,[35,2]]]]]],[[[5,[35,4]]],30],[[[13,[35,4,2]]],[[34,[[6,[35,4,2]]]]]],[[],30],[[],30],[[],30],[[[3,[15,2]]],[[33,[[18,[15,2]],[3,[15,2]]]]]],[[[18,[15,2]]],[[33,[[18,[15,2]],[18,[15,2]]]]]],[[[6,[15,4,2]]],[[33,[[19,[15,4,2]],[6,[15,4,2]]]]]],[[[19,[15,4,2]]],[[33,[[19,[15,4,2]],[19,[15,4,2]]]]]],[[[8,[16,2]]],[[33,[[21,[16,2]],[8,[16,2]]]]]],[[[9,[16,2]]],[[33,[[22,[16,2]],[9,[16,2]]]]]],[[[21,[16,2]]],[[33,[[21,[16,2]],[21,[16,2]]]]]],[[[22,[16,2]]],[[33,[[22,[16,2]],[22,[16,2]]]]]],[[[14,[16,2]]],[[34,[[8,[16,2]]]]]],[[[14,[36,2]]],[[34,[[8,[36,2]]]]]],[[[14,[32,2]]],[[34,[[8,[32,2]]]]]],[[[14,[37,2]]],[[34,[[8,[37,2]]]]]],[[[14,[37,2]]],[[34,[[8,[37,2]]]]]],[[[14,[36,2]]],[[34,[[8,[36,2]]]]]],[[[14,[20,2]]],[[34,[[11,[20,2]]]]]],[[[14,[38,2]]],[[34,[[11,[38,2]]]]]],[[[14,[38,2]]],[[34,[[11,[38,2]]]]]],[[],30],[[[11,[20,2]]],[[33,[[9,[20,2]],[11,[20,2]]]]]],[[],30],[[[11,[38,2]]],[[33,[[9,[38,2]],[11,[38,2]]]]]],[[],30],[[[11,[38,2]]],[[33,[[9,[38,2]],[11,[38,2]]]]]],[[[14,[16,2]]],[[34,[[9,[16,2]]]]]],[[[14,[36,2]]],[[34,[[9,[36,2]]]]]],[[[14,[36,2]]],[[34,[[9,[36,2]]]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[[5,[15,4]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[18,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,4,2]]]],[[[19,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[[21,[7,2]]]],[[[22,[7,2]]]],[[]],[[]],[[]],[[]],[[[3,[15,2]]]],[[[6,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[3,[1,2]]]],[[[6,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[[14,[20,2]]],[[11,[20,2]]]],[[]],[[[11,[20,2]]],[[9,[20,2]]]],[[[14,[16,2]]],[[9,[16,2]]]]],"p":[[8,"RawMutexFair"],[8,"Sized"],[3,"MutexGuard"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,19,4,4,6,6,8,7,11,0,1,3,1,3,19,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,4,6,6,4,4,6,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,4,4,6,6,1,3,8,7,1,3,19,0,0,0,4,4,6,6,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[8,10],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,4],10],[[4,6],10],[[6,4],10],[[6,6],10],[[4,4],10],[[4,6],10],[[6,4],10],[[6,6],10],[4],[6],[8],[7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[4,6],10],[[4,4],10],[[6,6],10],[[6,4],10],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[18]]]],[[3,[12,[18]]],3],[1],0,0,[[],19],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[19,[[16,[15]]]],[19,[[16,[15]]]],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"log_value":{"doc":"","t":[5,5,5,5,5,14],"n":["check_main_signature","generate_page_fault","log_block","log_something","main","my_assert"],"q":["log_value","","","","",""],"d":["","","","","",""],"i":[0,0,0,0,0,0],"f":[[[]],[[],1],[[[3,[2]],4],5],[[4,4,4],5],[[]],0],"p":[[15,"never"],[6,"Virt"],[3,"Block"],[15,"usize"],[6,"Result"]]},\
"loop":{"doc":"","t":[5,5],"n":["check_main_signature","main"],"q":["loop",""],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"p":[]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":[14,14,14,14,14],"n":["offset_of","offset_of_tuple","raw_field","raw_field_tuple","span_of"],"q":["memoffset","","","",""],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0],"f":[0,0,0,0,0],"p":[]},\
"memory_allocator":{"doc":"","t":[5,5,5,5,5,14],"n":["check_main_signature","generate_page_fault","main","memory_allocator_basic","memory_allocator_grow_and_shrink","my_assert"],"q":["memory_allocator","","","","",""],"d":["","","","","",""],"i":[0,0,0,0,0,0],"f":[[[]],[[],1],[[]],[[]],[[]],0],"p":[[15,"never"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,5,10,11,5,11,11,11,11,11,11,11,11,12,12],"n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,11,5,11,5,0,4,4,5,0,2,0,2,0,2,0,2,2,5,2,2,5,11,5,0,2,5,0,2,11,5,11,2,2,2,0,2,0,2,0,11,11,2,0,4,2,0,4,4,11,5,11,5,11,5,5,5],"f":[0,0,0,0,0,[[1,1],1],[[]],[[1,1],1],[[]],[[[0,[2,3]],[0,[2,3]]],[[0,[2,3]]]],[[]],[[]],[[]],[[]],[4,4],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[2,2],2],[[]],[[2,2],2],[[]],[[2,2]],[[]],[[2,2]],[[]],[[],6],[[[5,[7]],5],6],[[],5],[[]],[[[5,[8]],9],10],[[]],[[]],[[2,2],2],[[]],0,[[2,2]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[2,2],2],[[]],[[2,2],2],[[]],[[],[[0,[2,3]]]],[[],11],[11,12],[[]],[[4,13],4],[13],[[]],[4,4],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],0,0],"p":[[8,"Average"],[8,"Integer"],[8,"Clone"],[8,"Roots"],[3,"ExtendedGcd"],[15,"bool"],[8,"PartialEq"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"IterBinomial"],[4,"Option"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[2,2,2,2,2,2,2,2,2,2,2,13,2,2,4,2,16,2,13,2,2,8,8,8,8,2,8,8,2,3,2,2,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,11,11,11,11,0,0,2,2,5,5,5,0,11,11,11,11,11,10,0,0,11,11,12,2,0,0,2,0,2,11,11,11,11,11,11,2,8,8,8,10,10,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,10,10,11,10,11,10,10,10,11,11,11,10,10,11,11,10,10,11,11,11,11,11,11,11,10,11,10,10,10,10,10,11,11,11,11,10,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,11,10,10,11,10,10,10,10,10,10,10,11,10,10,10,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,8,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,8,5,10,5,10,10,10,5,10],"n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","sign","signum","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::bounds","","","","","","","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::identities","","","","","","","","","","num_traits::int","","","","","","","","","","","","","","","","","","","","num_traits::ops","","","","","","","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops::euclid","","","","","","num_traits::ops::inv","","","num_traits::ops::mul_add","","","","","num_traits::ops::overflowing","","","","","","num_traits::ops::saturating","","","","","","","","","num_traits::ops::wrapping","","","","","","","","","","","","num_traits::pow","","","","","num_traits::sign","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,34,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,34,0,0,2,5,5,0,0,0,0,0,0,2,5,2,5,2,5,0,0,0,0,35,36,35,37,0,0,0,0,38,0,10,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,12,12,12,12,12,12,12,12,12,12,12,12,12,40,40,40,40,40,40,40,40,40,40,0,0,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,28,29,0,28,28,29,0,29,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,31,45,46,47,48,49,0,0,50,50,51,51,0,52,52,0,0,53,53,54,0,0,0,55,56,57,0,0,0,0,58,59,60,58,61,0,0,0,0,0,0,62,63,64,65,66,67,68,0,0,0,68,0,0,0,33,0,33,33,33,0,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[10,[[11,[10]]]],[12,11],[13,11],[14,11],[15,11],[16,11],[17,11],[18,11],[19,11],[20,11],[21,11],[22,11],[7,11],[23,11],[24,11],[25,11],[[],[[11,[13]]]],[[],[[11,[14]]]],[[],[[11,[15]]]],[[],[[11,[16]]]],[[],[[11,[17]]]],[[],[[11,[18]]]],[[],[[11,[19]]]],[[],[[11,[20]]]],[[],[[11,[21]]]],[[],[[11,[22]]]],[[],[[11,[7]]]],[[],[[11,[23]]]],[[],[[11,[24]]]],[[],[[11,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],27],[[],27],[[],28],[[]],[[]],[[]],[[],29],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[7,11],[7,11],[[],11],0,0,[[],11],[[],11],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[30,28,31]],25],[[11,[[0,[30,28,31]]]]]],[[[0,[30,28,[32,[[0,[30,28,[32,[[0,[30,28,[32,[[0,[30,28,[32,[[0,[30,28,32]]]]]]]]]]]]]]]]]],25],[[0,[30,28,[32,[[0,[30,28,[32,[[0,[30,28,[32,[[0,[30,28,[32,[[0,[30,28,32]]]]]]]]]]]]]]]]]]]],[[]],0,0,[33,33],[[]],[[33,33],33],[[]],[[],27],[[],27],[33,33],[[]]],"p":[[8,"PartialOrd"],[4,"FloatErrorKind"],[3,"Formatter"],[6,"Result"],[3,"ParseFloatError"],[15,"str"],[15,"u32"],[4,"Result"],[3,"TypeId"],[8,"NumCast"],[4,"Option"],[8,"ToPrimitive"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[4,"FpCategory"],[15,"bool"],[8,"One"],[8,"Zero"],[8,"Clone"],[8,"CheckedMul"],[8,"Mul"],[8,"Signed"],[8,"Num"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"FloatConst"],[8,"FloatCore"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"]]},\
"number_prefix":{"doc":"This is a library for formatting numbers with numeric …","t":[8,13,13,13,13,13,13,13,13,18,18,4,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Amounts","Exa","Exbi","Gibi","Giga","Kibi","Kilo","Mebi","Mega","NUM_1000","NUM_1024","NumberPrefix","Pebi","Peta","Prefix","Prefixed","Standalone","Tebi","Tera","Yobi","Yotta","Zebi","Zetta","binary","borrow","borrow","borrow_mut","borrow_mut","caps","clone","clone","decimal","eq","eq","fmt","fmt","from","from","into","into","is_negative","lower","symbol","try_from","try_from","try_into","try_into","type_id","type_id","upper","0","0","1"],"q":["number_prefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","number_prefix::NumberPrefix","",""],"d":["Traits for floating-point values for both the possible …","<em>exa</em>, 1018 or 10006. From the Greek ‘ἕξ’ …","<em>exbi</em>, 260 or 10246. The binary version of <em>exa</em>.","<em>gibi</em>, 230 or 10243. The binary version of <em>giga</em>.","<em>giga</em>, 109 or 10003. From the Greek ‘γίγας’ …","<em>kibi</em>, 210 or 10241. The binary version of <em>kilo</em>.","<em>kilo</em>, 103 or 10001. From the Greek ‘χίλιοι’ …","<em>mebi</em>, 220 or 10242. The binary version of <em>mega</em>.","<em>mega</em>, 106 or 10002. From the Ancient Greek …","The constant representing 1000, for decimal prefixes.","The constant representing 1024, for binary prefixes.","The result of trying to apply a prefix to a floating-point …","<em>pebi</em>, 250 or 10245. The binary version of <em>peta</em>.","<em>peta</em>, 1015 or 10005. From the Greek ‘πέντε’ …","A numeric prefix, either binary or decimal.","A <strong>prefixed</strong> value <em>is</em> large enough for prefixes. This holds …","A <strong>standalone</strong> value is returned when the number is too …","<em>tebi</em>, 240 or 10244. The binary version of <em>tera</em>.","<em>tera</em>, 1012 or 10004. From the Greek ‘τέρας’ …","<em>yobi</em>, 280 or 10248. The binary version of <em>yotta</em>.","<em>yotta</em>, 1024 or 10008. From the Green ‘οκτώ’ …","<em>zebi</em>, 270 or 10247. The binary version of <em>zetta</em>.","<em>zetta</em>, 1021 or 10007. From the Latin ‘septem’, meaning …","Formats the given floating-point number using <strong>binary</strong> …","","","","","Returns the name with the first letter capitalised, such …","","","Formats the given floating-point number using <strong>decimal</strong> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this number is negative. This is used internally.","Returns the name in lowercase, such as “giga”.","Returns the short-hand symbol, such as “T” (for …","","","","","","","Returns the name in uppercase, such as “KILO”.","","",""],"i":[0,3,3,3,3,3,3,3,3,1,1,0,3,3,0,2,2,3,3,3,3,3,3,2,3,2,3,2,3,3,2,2,3,2,3,2,3,2,3,2,1,3,3,3,2,3,2,3,2,3,13,14,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1]]]],[[]],[[]],[[]],[[]],[3,4],[3,3],[[[2,[5]]],[[2,[5]]]],[1,[[2,[1]]]],[[3,3],6],[[[2,[7]],2],6],[[3,8],9],[[[2,[10]],8],9],[[]],[[]],[[]],[[]],[[],6],[3,4],[3,4],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[3,4],0,0,0],"p":[[8,"Amounts"],[4,"NumberPrefix"],[4,"Prefix"],[15,"str"],[8,"Clone"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Result"],[3,"TypeId"],[13,"Standalone"],[13,"Prefixed"]]},\
"page_fault":{"doc":"","t":[5,5],"n":["check_main_signature","main"],"q":["page_fault",""],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"p":[]},\
"pic8259":{"doc":"","t":[17,17,17,17,5,5],"n":["INTERRUPT_LINE_COUNT","PIC0_COMMAND","PIC1_COMMAND","PIC_INTERRUPT_COUNT","end_of_interrupt","init"],"q":["pic8259","","","","",""],"d":["","","","","",""],"i":[0,0,0,0,0,0],"f":[0,0,0,0,[1],[2]],"p":[[15,"usize"],[15,"u8"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":[14],"n":["pin_project"],"q":["pin_project_lite"],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[0],"p":[]},\
"postcard":{"doc":"Postcard","t":[13,13,13,13,13,13,13,13,13,3,4,13,6,13,13,13,13,3,13,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,5,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,16,3,16,11,11,10,11,11,11,11,10,11,11,11,10,11,11,3,8,3,16,3,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11],"n":["CollectStrError","DeserializeBadBool","DeserializeBadChar","DeserializeBadEncoding","DeserializeBadEnum","DeserializeBadOption","DeserializeBadUtf8","DeserializeBadVarint","DeserializeUnexpectedEnd","Deserializer","Error","NotYetImplemented","Result","SerdeDeCustom","SerdeSerCustom","SerializeBufferFull","SerializeSeqLengthUnknown","Serializer","WontImplement","accumulator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect_str","custom","custom","de_flavors","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","end","end","end","end","end","end","end","eq","experimental","finalize","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes_cobs","from_flavor","into","into","into","is_human_readable","is_human_readable","newtype_variant_seed","output","ser_flavors","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_with_flavor","struct_variant","take_from_bytes","take_from_bytes_cobs","to_owned","to_slice","to_slice_cobs","to_string","to_vec","to_vec_cobs","try_from","try_from","try_from","try_into","try_into","try_into","tuple_variant","type_id","type_id","type_id","unit_variant","variant_seed","CobsAccumulator","Consumed","DeserError","FeedResult","OverFull","Success","borrow","borrow","borrow_mut","borrow_mut","feed","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","0","0","data","remaining","Flavor","Remainder","Slice","Source","borrow","borrow_mut","finalize","finalize","from","into","new","pop","pop","try_from","try_into","try_take_n","try_take_n","type_id","Cobs","Flavor","HVec","Output","Slice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","finalize","finalize","finalize","finalize","from","from","from","index","index","index_mut","index_mut","into","into","into","new","new","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_into","try_into","try_into","try_new","try_push","try_push","try_push","try_push","type_id","type_id","type_id"],"q":["postcard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","postcard::accumulator","","","","","","","","","","","","","","","","","","","","","","postcard::accumulator::FeedResult","","","","postcard::de_flavors","","","","","","","","","","","","","","","","","","postcard::ser_flavors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Error while processing <code>collect_str</code> during serialization","Found a bool that wasn’t 0 or 1","Found an invalid unicode char","The original data was not well encoded","Found an enum discriminant that was &gt; u32::max_value()","Found an Option discriminant that wasn’t 0 or 1","Tried to parse invalid utf-8","Found a varint that didn’t terminate. Is the usize too …","Hit the end of buffer, expected more data","A <code>serde</code> compatible deserializer, generic over …","This is the error type used by Postcard","This is a feature that Postcard intends to support, but …","This is the Result type used by Postcard.","Serde Deserialization Error","Serde Serialization Error","The serialize buffer is full","The length of a sequence must be known","A <code>serde</code> compatible serializer, generic over “Flavors” …","This is a feature that PostCard will never implement","An accumulator used to collect chunked COBS data and …","","","","","","","","","","","","Deserialization Flavors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Experimental Postcard Features","Return the remaining (unused) bytes in the Deserializer …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a message of type <code>T</code> from a byte slice. The …","Obtain a Deserializer from a slice of bytes","Deserialize a message of type <code>T</code> from a cobs-encoded byte …","Obtain a Deserializer from a slice of bytes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This is the Flavor(s) that will be used to modify or store …","Serialization Flavors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>serialize_with_flavor()</code> has three generic parameters, …","","Deserialize a message of type <code>T</code> from a byte slice. The …","Deserialize a message of type <code>T</code> from a cobs-encoded byte …","","Serialize a <code>T</code> to the given slice, with the resulting slice …","Serialize a <code>T</code> to the given slice, with the resulting slice …","","Serialize a <code>T</code> to a <code>heapless::Vec&lt;u8&gt;</code>, with the <code>Vec</code> …","Serialize a <code>T</code> to a <code>heapless::Vec&lt;u8&gt;</code>, with the <code>Vec</code> …","","","","","","","","","","","","","An accumulator used to collect chunked COBS data and …","Consumed all data, still pending.","Reached end of chunk, but deserialization failed. Contains …","The result of feeding the accumulator.","Buffer was filled. Contains remaining section of input, if …","Deserialization complete. Contains deserialized data and …","","","","","Appends data to the internal buffer and attempts to …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new accumulator.","","","","","","","","","Deserialize data.","Remaining data left in the buffer after deserializing.","The deserialization Flavor trait","The remaining data of this flavor after deserializing has …","A simple <code>Flavor</code> representing the deserialization from a …","The source of data retrieved for deserialization.","","","Complete the deserialization process.","Return the remaining (unused) bytes in the Deserializer","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Slice from the given buffer","Obtain the next byte for deserialization","","","","Attempt to take the next <code>ct</code> bytes from the serialized …","","","The <code>Cobs</code> flavor implements Consistent Overhead Byte …","The serialization Flavor trait","The <code>HVec</code> flavor is a wrapper type around a <code>heapless::Vec</code>. …","The <code>Output</code> type is what this storage “resolves” to …","The <code>Slice</code> flavor is a storage flavor, storing the …","","","","","","","","Finalize the serialization process","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Slice</code> flavor from a given backing buffer","Create a new, currently empty, heapless::Vec to be used …","The try_extend() trait method can be implemented when …","The try_extend() trait method can be implemented when …","","","","","","","","","Create a new Cobs modifier Flavor. If there is …","The try_push() trait method can be used to push a single …","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,0,1,0,4,2,1,4,2,1,1,1,2,1,1,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,1,0,4,1,1,4,2,1,0,4,0,4,4,2,1,4,2,4,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,4,0,0,1,0,0,1,0,0,4,2,1,4,2,1,4,4,2,1,4,4,0,32,32,0,32,32,31,32,31,32,31,31,32,31,32,31,31,32,31,32,31,32,36,37,38,38,0,39,0,39,10,10,39,10,10,10,10,39,10,10,10,39,10,10,0,0,0,40,0,34,35,33,34,35,33,33,40,34,35,33,34,35,33,34,33,34,33,34,35,33,34,33,40,40,34,33,34,35,33,34,35,33,35,40,34,35,33,34,35,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[2,3],[[],1],[[],1],0,[4,3],[4,3],[4,3],[4,3],[4,3],[[4,5],3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[[4,5],3],[4,3],[4,3],[4,3],[4,3],[[4,5],3],[[4,6],3],[[4,5,6],3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[[4,5],3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[1,1],7],0,[4,3],[[1,8],9],[[1,8],9],[[]],[[]],[[]],[[],3],[[],[[4,[10]]]],[[],3],[[],4],[[]],[[]],[[]],[4,7],[2,7],[[4,11],3],0,0,[[2,7],3],[2,3],[[2,12],3],[2,3],[2,3],[[2,13],3],[[2,14],3],[[2,5],3],[2,3],[2,3],[[2,5],3],[[2,15],3],[[2,16],3],[[2,17],3],[[2,18],3],[[2,19],3],[2,3],[[2,[20,[6]]],3],[[2,5],3],[[2,5,21,5],3],[2,3],[[2,[20,[6]]],3],[2,3],[[2,5],3],[[2,5,6],3],[[2,5,21,5,6],3],[[2,6],3],[[2,5,6],3],[[2,5,21,5,6],3],[[2,22],3],[[2,23],3],[[2,21],3],[[2,24],3],[[2,25],3],[2,3],[[2,5],3],[[2,5,21,5],3],[2,3],[[],3],[[4,26],3],[[],3],[[],3],[[]],[[],3],[[],3],[[],27],[[],[[3,[[28,[25]]]]]],[[],[[3,[[28,[25]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[4,6,26],3],[[],30],[[],30],[[],30],[4,3],[[4,11],3],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[31,32],[[]],[[]],[[]],[[]],[[],31],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],0,0,0,0,0,0,0,0,[[]],[[]],[[],3],[10,3],[[]],[[]],[[],10],[[],[[3,[25]]]],[10,[[3,[25]]]],[[],29],[[],29],[6,3],[[10,6],3],[[],30],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],3],[34,3],[35,3],[33,[[3,[[28,[25]]]]]],[[]],[[]],[[]],[[34,6],25],[[33,6],25],[[34,6],25],[[33,6],25],[[]],[[]],[[]],[[],34],[[],33],[[],3],[[],3],[34,3],[33,3],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],[[3,[35]]]],[25,3],[[34,25],3],[[35,25],3],[[33,25],3],[[],30],[[],30],[[],30]],"p":[[4,"Error"],[3,"Serializer"],[6,"Result"],[3,"Deserializer"],[15,"str"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Slice"],[8,"DeserializeSeed"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[8,"Visitor"],[3,"String"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[3,"CobsAccumulator"],[4,"FeedResult"],[3,"HVec"],[3,"Slice"],[3,"Cobs"],[13,"OverFull"],[13,"DeserError"],[13,"Success"],[8,"Flavor"],[8,"Flavor"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[9,8,8,0,0,6,0,6,9,0,0,6,8,8,0,6,0,0,0,0,1,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,3,4,3,5,4,6,7,8,1,9,10,3,5,4,6,7,8,1,9,10,3,10,5,7,8,9,10,10,5,5,3,3,3,3,16,16,5,5,4,6,6,7,7,8,1,1,9,10,10,3,3,16,5,5,5,4,4,6,6,6,6,6,7,8,1,9,10,3,5,5,5,3,10,3,3,3,3,3,3,3,3,3,3,16,5,4,6,7,8,1,9,10,3,5,5,3,3,4,4,4,5,7,1,10,10,10,16,4,6,7,1,10,3,1,16,6,7,1,10,3,7,7,7,3,3,5,4,6,7,8,1,9,10,3,16,5,6,7,1,10,3,0,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,3,3,3,3,3,3,3,3,3,3,4,3,3,41,42,43,44,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],4],[2,3],[5,5],[4,4],[6,6],[7,7],[8,8],[1,1],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],11],[[],5],[7,8],[[8,8],12],[[9,9],12],[10,12],[[10,10],12],[[5,13]],[[5,13]],[14,3],[14,3],[15,3],[15,3],[[16,17],18],[[16,17],18],[[5,17],18],[[5,17],18],[[4,17],18],[[6,17],18],[[6,17],18],[[7,17],18],[[7,17],18],[[8,17],18],[[1,17],18],[[1,17],18],[[9,17],18],[[10,17],18],[[10,17],18],[[3,17],18],[[3,17],18],[[]],[19,5],[6,5],[[]],[[]],[20,4],[7,6],[1,6],[10,6],[[]],[3,6],[[]],[[]],[[]],[[]],[[]],[[]],[13,5],[13,5],[21,[[22,[5,16]]]],[21,[[22,[3,16]]]],[10],[23,3],[23,3],[24,3],[24,3],[25,3],[25,3],[26,3],[26,3],[27,3],[27,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,28],[5,12],[29,3],[29,3],[[4,4],[[30,[4]]]],[[4,4],4],[[],4],[[],5],[[8,5],7],[[2,9],1],[[21,4],10],[[21,4],10],[[10,10],[[30,[11]]]],[31],[[4,4],4],[[6,4]],[[7,4]],[[1,4]],[[10,4]],[[3,4]],[1,9],[16,4],[6,4],[7,4],[1,4],[10,4],[3,4],[7,4],[7,4],[7,5],[21,3],[[3,[33,[32]]],[[30,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[36,3],[36,3],[37,3],[37,3],[38,3],[38,3],[39,3],[39,3],[40,3],[40,3],[4,20],[32,3],[32,3],0,0,0,0,0,0,[[]],[[]],[28,28],[[]],[[28,17],18],[[]],[[]],[[]],[28,[[30,[6]]]],[28],[[]],[[],22],[[],22],[[],35]],"p":[[3,"Punct"],[15,"char"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[15,"str"],[4,"Result"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[15,"usize"],[8,"RangeBounds"],[3,"String"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,6,6,6,6,7,0,8,8,0,0,7,7,8,8,8],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,2],0,[[],3],[[],3],0,0,[[],[[5,[4]]]],[[],[[5,[4]]]],[[],3],[[],3],[3]],"p":[[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","t":[18,8,3,8,18,8,8,16,8,11,11,11,0,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,10,0,11,0,11,11,11,11,11,0,10,11,11,10,11,11,11,3,3,4,3,3,8,13,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,8,8,16,3,3,3,3,3,8,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,3,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,8,10,11,11,10,11,10,10],"n":["CUSTOM_START","CryptoRng","Error","Fill","INTERNAL_START","Rng","RngCore","Seed","SeedableRng","borrow","borrow_mut","code","distributions","fill","fill","fill_bytes","fmt","fmt","from","from","from_rng","from_seed","gen","gen","gen_bool","gen_bool","gen_range","gen_range","gen_ratio","gen_ratio","into","next_u32","next_u64","prelude","raw_os_error","rngs","sample","sample","sample_iter","sample_iter","seed_from_u64","seq","try_fill","try_fill","try_fill","try_fill_bytes","try_from","try_into","type_id","Alphanumeric","Bernoulli","BernoulliError","DistIter","DistMap","Distribution","InvalidProbability","Open01","OpenClosed01","Slice","Standard","Uniform","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ratio","into","into","into","into","into","into","into","into","into","into","into_iter","map","map","new","new","next","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_iter","sample_iter","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","SampleBorrow","SampleRange","SampleUniform","Sampler","Uniform","UniformChar","UniformDuration","UniformFloat","UniformInt","UniformSampler","X","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_empty","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CryptoRng","Distribution","IteratorRandom","Rng","RngCore","SeedableRng","SliceRandom","SmallRng","SmallRng","borrow","borrow_mut","clone","eq","fill_bytes","fmt","from","from_rng","from_seed","into","mock","next_u32","next_u64","try_fill_bytes","try_from","try_into","type_id","StepRng","borrow","borrow_mut","clone","eq","fill_bytes","fmt","from","into","new","next_u32","next_u64","try_fill_bytes","try_from","try_into","type_id","Item","IteratorRandom","SliceRandom","choose","choose","choose_multiple_fill","choose_mut","choose_stable","partial_shuffle","shuffle"],"q":["rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::distributions::uniform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand::prelude","","","","","","","","rand::rngs","","","","","","","","","","","","","","","","","","rand::rngs::mock","","","","","","","","","","","","","","","","rand::seq","","","","","","","","",""],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Types which may be filled with random data","Codes below this point represent OS Errors (i.e. positive …","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","","","Retrieve the error code, if any.","Generating random samples from probability distributions","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","Returns the argument unchanged.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Return a bool with a probability of <code>numerator/denominator</code> …","Calls <code>U::from(self)</code>.","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Convenience re-export of common members","Extract the raw OS error code (if this error came from the …","Random number generators and adapters","Sample a new value, using the given distribution.","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Sequence-related functionality","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …","The Bernoulli distribution.","Error type returned from <code>Bernoulli::new</code>.","An iterator that generates random values of <code>T</code> with …","A distribution of values of type <code>S</code> derived from the …","Types (distributions) that can be used to create a random …","<code>p &lt; 0</code> or <code>p &gt; 1</code>.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","A distribution to sample items uniformly from a slice.","A generic random value distribution, implemented for many …","Sample values uniformly between two bounds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new <code>Bernoulli</code> with the probability of success …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a distribution of values of ‘S’ by mapping the …","Create a distribution of values of ‘S’ by mapping the …","Construct a new <code>Bernoulli</code> with the given probability of …","Create a new <code>Slice</code> instance which samples uniformly from …","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates random values of <code>T</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A distribution uniformly sampling numbers within a given …","Helper trait similar to <code>Borrow</code> but implemented only for …","Range that supports generating a single sample efficiently.","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Sample values uniformly between two bounds.","The back-end implementing <code>UniformSampler</code> for <code>char</code>.","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for integer types.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Immutably borrows from an owned value. See <code>Borrow::borrow</code>","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the range is empty.","Construct self, with inclusive lower bound and exclusive …","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Construct self, with inclusive bounds <code>[low, high]</code>.","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Sample a value.","","","","","","","","","","","","","","","","","Generate a sample from the given range.","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A small-state, fast non-crypto PRNG","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Mock random number generator","","","","","","","A simple implementation of <code>RngCore</code> for testing purposes.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a <code>StepRng</code>, yielding an arithmetic sequence starting …","","","","","","","The element type.","Extension trait on iterators, providing random sampling …","Extension trait on slices, providing random mutation and …","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Collects values at random from the iterator into a …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Shuffle a slice in place, but exit early.","Shuffle a mutable slice in place."],"i":[1,0,0,0,1,0,0,56,0,1,1,1,0,57,57,54,1,1,1,1,56,56,57,57,57,57,57,57,57,57,1,54,54,0,1,0,57,57,57,57,56,0,58,57,57,54,1,1,1,0,0,0,0,0,0,16,0,0,0,0,0,15,16,13,28,17,18,19,21,23,24,15,16,13,28,17,18,19,21,23,24,15,16,17,18,19,21,23,24,15,16,23,15,16,16,13,28,17,18,19,21,23,24,15,16,13,28,17,18,19,21,23,23,23,24,15,15,16,13,28,17,18,19,21,23,24,13,12,12,15,21,13,12,15,28,17,17,18,18,19,21,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,12,12,13,15,16,13,28,17,18,19,21,23,24,15,16,13,28,17,18,19,21,23,24,15,16,13,28,17,18,19,21,23,24,0,0,0,0,22,0,0,0,0,0,0,59,60,48,49,50,51,48,49,50,51,48,49,50,51,48,50,48,49,50,51,48,49,50,51,48,49,50,51,61,59,23,48,48,48,48,48,48,48,48,48,48,48,48,49,50,50,51,59,23,48,48,48,48,48,48,48,48,48,48,48,48,49,50,50,51,59,48,48,48,48,48,48,48,48,48,48,48,48,49,50,50,51,61,59,48,48,48,48,48,48,48,48,48,48,48,48,50,50,59,48,48,48,48,48,48,48,48,48,48,48,48,48,49,50,51,48,49,50,51,48,49,50,51,0,0,0,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,62,0,0,62,63,63,62,63,62,62],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[1,[[3,[2]]]],0,[[]],[[]],[[]],[[1,4],[[6,[5]]]],[[1,4],[[6,[5]]]],[2,1],[[]],[[],[[6,[1]]]],[[]],[[]],[[]],[7,8],[7,8],[[]],[[]],[[9,9],8],[[9,9],8],[[]],[[],9],[[],10],0,[1,[[3,[11]]]],0,[12],[12],[[],13],[[],13],[10],0,[[],[[6,[1]]]],[[],[[6,[1]]]],[[],[[6,[1]]]],[[],[[6,[1]]]],[[],6],[[],6],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[16,16],[17,17],[18,18],[19,19],[[[21,[20]]],[[21,[20]]]],[[[23,[[0,[20,22]]]]],[[23,[[0,[20,22]]]]]],[24,24],[[15,15],8],[[16,16],8],[[[23,[[0,[25,22]]]],23],8],[[15,4],26],[[16,4],26],[[16,4],26],[[[13,[27,27,27]],4],26],[[[28,[27,27,27,27]],4],26],[[17,4],26],[[18,4],26],[[19,4],26],[[[21,[27]],4],26],[[[23,[[0,[27,22]]]],4],26],[[24,4],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[22]]],[[23,[22]]]],[[[30,[22]]],[[23,[22]]]],[[]],[[]],[[9,9],[[6,[15,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[7,[[6,[15,16]]]],[[],[[6,[21,0]]]],[13,3],[[]],[15,8],[28],[17,31],[17,7],[18,31],[18,7],[19,32],[21],[[[23,[22]]],22],[24],[24],[24,33],[24,3],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24,8],[24,34],[24,35],[24,36],[24,37],[24,2],[24,38],[24,39],[24,40],[24,41],[24,42],[24,11],[24,43],[24,44],[24,45],[24,46],[24,10],[24,9],[24,47],[24,32],[24,7],[24,31],[[],13],[[],13],[13],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[20]]],[[48,[20]]]],[49,49],[[[50,[20]]],[[50,[20]]]],[51,51],[[[48,[25]],48],8],[[[50,[25]],50],8],[[[48,[27]],4],26],[[49,4],26],[[[50,[27]],4],26],[[51,4],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[]],[[],[[23,[22]]]],[[],[[48,[42]]]],[[],[[48,[46]]]],[[],[[48,[11]]]],[[],[[48,[44]]]],[[],[[48,[9]]]],[[],[[48,[40]]]],[[],[[48,[32]]]],[[],[[48,[47]]]],[[],[[48,[45]]]],[[],[[48,[10]]]],[[],[[48,[43]]]],[[],[[48,[41]]]],[[],49],[[],[[50,[31]]]],[[],[[50,[7]]]],[[],51],[[]],[[],[[23,[22]]]],[[],[[48,[46]]]],[[],[[48,[42]]]],[[],[[48,[47]]]],[[],[[48,[9]]]],[[],[[48,[11]]]],[[],[[48,[41]]]],[[],[[48,[10]]]],[[],[[48,[40]]]],[[],[[48,[45]]]],[[],[[48,[32]]]],[[],[[48,[44]]]],[[],[[48,[43]]]],[[],49],[[],[[50,[31]]]],[[],[[50,[7]]]],[[],51],[[]],[[[48,[41]]]],[[[48,[11]]]],[[[48,[9]]]],[[[48,[42]]]],[[[48,[45]]]],[[[48,[46]]]],[[[48,[44]]]],[[[48,[43]]]],[[[48,[40]]]],[[[48,[32]]]],[[[48,[10]]]],[[[48,[47]]]],[49],[[[50,[31]]]],[[[50,[7]]]],[51,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,[[]],[[]],[53,53],[[53,53],8],[53],[[53,4],26],[[]],[54,[[6,[53,1]]]],[[],53],[[]],0,[53,9],[53,10],[53,[[6,[1]]]],[[],6],[[],6],[[],14],0,[[]],[[]],[55,55],[[55,55],8],[55],[[55,4],26],[[]],[[]],[[10,10],55],[55,9],[55,10],[55,[[6,[1]]]],[[],6],[[],6],[[],14],0,0,0,[[],3],[[],3],[[],45],[[],3],[[],3],[45],[[]]],"p":[[3,"Error"],[3,"NonZeroU32"],[4,"Option"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"f64"],[15,"bool"],[15,"u32"],[15,"u64"],[15,"i32"],[8,"Distribution"],[3,"DistIter"],[3,"TypeId"],[3,"Bernoulli"],[4,"BernoulliError"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[8,"Clone"],[3,"Slice"],[8,"SampleUniform"],[3,"Uniform"],[3,"Standard"],[8,"PartialEq"],[6,"Result"],[8,"Debug"],[3,"DistMap"],[3,"RangeInclusive"],[3,"Range"],[15,"f32"],[15,"u8"],[3,"Wrapping"],[15,"char"],[3,"NonZeroUsize"],[3,"NonZeroU128"],[3,"NonZeroU64"],[3,"NonZeroU16"],[3,"NonZeroU8"],[15,"isize"],[15,"i128"],[15,"i64"],[15,"i16"],[15,"i8"],[15,"usize"],[15,"u128"],[15,"u16"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Duration"],[3,"SmallRng"],[8,"RngCore"],[3,"StepRng"],[8,"SeedableRng"],[8,"Rng"],[8,"Fill"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"SampleRange"],[8,"SliceRandom"],[8,"IteratorRandom"]]},\
"rand_core":{"doc":"Random number generation traits","t":[18,8,3,18,8,16,8,0,11,11,11,10,11,11,11,11,11,10,0,11,0,10,10,11,11,10,11,11,11,3,3,8,16,16,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5],"n":["CUSTOM_START","CryptoRng","Error","INTERNAL_START","RngCore","Seed","SeedableRng","block","borrow","borrow_mut","code","fill_bytes","fmt","fmt","from","from","from_rng","from_seed","impls","into","le","next_u32","next_u64","raw_os_error","seed_from_u64","try_fill_bytes","try_from","try_into","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","borrow","borrow","borrow_mut","borrow_mut","clone","clone","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":["rand_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand_core::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rand_core::impls","","","","","","rand_core::le",""],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","The <code>BlockRngCore</code> trait and implementation helpers","","","Retrieve the error code, if any.","Fill <code>dest</code> with random data.","","","Returns the argument unchanged.","","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Extract the raw OS error code (if this error came from the …","Create a new PRNG using a <code>u64</code> seed.","Fill <code>dest</code> entirely with random data.","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[1,0,0,1,0,18,0,0,1,1,1,6,1,1,1,1,18,18,0,1,0,6,6,1,18,6,1,1,1,0,0,0,13,13,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,13,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[1,[[3,[2]]]],[[]],[[1,4],5],[[1,4],5],[[]],[2,1],[6,[[7,[1]]]],[[]],0,[[]],0,[[],8],[[],9],[1,[[3,[10]]]],[9],[[],[[7,[1]]]],[[],7],[[],7],[[],11],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[15,[[0,[12,13,14]]]]],[[15,[[0,[12,13,14]]]]]],[[[16,[[0,[12,13,14]]]]],[[16,[[0,[12,13,14]]]]]],0,0,[[[15,[13]]]],[[[16,[13]]]],[[[15,[[0,[13,17]]]],4],5],[[[16,[[0,[13,17]]]],4],5],[[]],[[]],[6,[[7,[[15,[[0,[13,18]]]],1]]]],[6,[[7,[[16,[[0,[13,18]]]],1]]]],[[],[[15,[[0,[13,18]]]]]],[[],[[16,[[0,[13,18]]]]]],[[]],[[[15,[13]],19]],[[[16,[13]],19]],[[[15,[13]]],19],[[[16,[13]]],19],[[]],[[]],[13,[[15,[13]]]],[13,[[16,[13]]]],[[[15,[13]]],8],[[[16,[13]]],8],[[[15,[13]]],9],[[[16,[13]]],9],[[[15,[13]]]],[[[16,[13]]]],[9,[[15,[[0,[13,18]]]]]],[9,[[16,[[0,[13,18]]]]]],[[[15,[13]]],[[7,[1]]]],[[[16,[13]]],[[7,[1]]]],[[],7],[[],7],[[],7],[[],7],[[],11],[[],11],[[]],[[]],[[]],[[],8],[[],9],[[],9],[[]],[[]]],"p":[[3,"Error"],[3,"NonZeroU32"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"RngCore"],[4,"Result"],[15,"u32"],[15,"u64"],[15,"i32"],[3,"TypeId"],[8,"Clone"],[8,"BlockRngCore"],[8,"Sized"],[3,"BlockRng"],[3,"BlockRng64"],[8,"Debug"],[8,"SeedableRng"],[15,"usize"]]},\
"raw_cpuid":{"doc":"A library to parse the x86 CPUID instruction, written in …","t":[13,3,4,13,13,13,13,13,17,13,3,3,4,3,3,4,13,3,3,13,3,3,4,13,13,13,3,13,13,13,3,3,3,4,4,3,3,3,3,3,3,13,13,13,13,4,3,13,13,13,13,13,3,3,3,3,3,13,3,3,13,3,13,13,13,13,13,3,3,13,13,3,3,3,3,3,13,13,13,3,3,13,13,13,3,4,3,3,3,3,13,3,13,3,13,4,3,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5],"n":["ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_bmi1","has_bmi2","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vte","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","0","0","0","1","2","0","cpuid_count"],"q":["raw_cpuidraw_cpuid::Associativity","raw_cpuid::ExtendedRegisterType","raw_cpuid::Hypervisor","","","raw_cpuid::SgxSectionInfo","raw_cpuid::native_cpuid"],"d":["","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","BMI1","BMI2","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","Virtual Transparent Encryption supported if set.","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","","","","","",""],"i":[51,0,0,48,48,48,48,51,0,26,0,0,0,0,0,0,47,0,0,26,0,0,0,21,20,47,0,38,38,62,0,0,0,0,0,0,0,0,0,0,0,38,26,48,51,0,0,49,21,20,47,51,0,0,0,0,0,20,0,0,47,0,48,48,38,21,20,0,0,48,26,0,0,0,0,0,48,51,51,0,0,21,47,26,0,0,0,0,0,0,20,0,26,0,47,0,0,21,20,38,48,20,51,51,0,49,51,1,3,6,8,10,11,10,11,12,14,14,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,49,23,50,31,62,63,32,20,64,11,51,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,49,23,50,31,62,63,32,20,64,11,51,15,14,16,18,19,19,12,22,23,14,24,1,25,26,27,28,12,29,30,31,32,12,33,34,35,36,0,37,37,37,37,24,39,27,37,40,37,40,37,40,37,40,41,1,1,35,1,1,37,40,38,36,6,18,42,43,1,10,25,44,12,21,45,46,47,48,49,23,50,20,11,51,14,14,15,45,14,35,35,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,38,36,6,18,42,43,24,1,10,10,25,26,27,27,44,28,12,21,21,45,29,46,47,47,30,48,48,49,49,23,50,31,62,63,32,20,20,64,11,11,51,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,48,49,23,50,31,62,63,32,20,64,11,51,24,24,24,55,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,61,24,24,24,61,24,61,24,24,24,61,61,24,6,36,19,15,19,15,19,19,15,18,14,15,54,14,15,18,15,35,14,41,42,14,54,54,54,54,54,54,54,54,54,54,54,54,6,14,54,54,14,15,14,14,14,22,12,33,36,14,15,14,14,18,42,14,14,41,41,14,60,60,41,15,15,14,15,54,36,41,42,14,15,43,43,14,54,36,54,14,42,42,41,54,42,14,41,18,36,36,41,41,41,41,41,41,41,41,14,15,41,6,6,36,6,6,54,33,59,59,58,15,42,50,33,34,15,15,14,36,14,6,59,15,14,15,14,15,14,43,54,14,33,14,15,42,42,34,54,15,14,14,18,14,42,42,14,14,14,14,15,15,15,14,54,41,14,33,36,15,54,18,54,14,14,14,41,33,54,6,14,54,54,54,15,54,6,18,36,33,54,18,18,18,54,60,60,54,54,33,15,54,18,54,14,42,14,14,14,14,14,14,15,42,14,36,15,42,15,14,15,36,42,14,36,14,33,33,15,34,33,36,14,54,14,42,41,41,54,6,42,14,18,42,14,36,18,6,15,14,56,15,14,56,56,56,22,23,50,56,56,37,37,37,37,3,14,45,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,49,23,50,31,62,63,32,20,64,11,51,25,28,29,30,31,32,64,6,35,35,35,57,35,19,12,57,57,12,35,35,35,12,12,22,23,56,60,37,40,37,40,37,40,37,40,59,40,40,40,40,59,58,40,40,40,40,45,12,46,46,6,57,54,19,12,12,60,60,18,50,14,6,6,34,59,18,60,14,0,24,25,28,29,30,31,32,64,39,27,6,35,39,57,19,6,6,18,63,12,15,16,16,46,57,42,58,60,44,44,44,44,44,19,12,46,57,63,45,14,57,42,45,45,45,45,45,45,45,45,33,33,33,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,49,23,50,31,62,63,32,20,64,11,51,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,49,23,50,31,62,63,32,20,64,11,51,39,3,27,15,8,14,41,54,55,35,56,57,58,34,59,22,60,33,39,16,19,61,3,37,40,38,36,6,18,42,43,24,1,10,25,26,27,44,28,12,21,45,29,46,47,30,48,49,23,50,31,62,63,32,20,64,11,51,35,19,24,46,56,56,56,56,56,56,56,56,56,56,56,56,69,70,71,71,71,72,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,[[5,[4]]]],[6,7],[8,9],[10,9],[11,9],[10,9],[11,9],[12,13],[14,7],[14,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,4],[14,7],[16,17],[18,7],[19,7],[19,20],[12,21],[22,7],[23,7],[14,7],[24,24],[1,1],[25,25],[26,26],[27,27],[28,28],[12,12],[29,29],[30,30],[31,31],[32,32],[12,13],[33,7],[34,4],[35,7],[36,4],0,[37,38],[37,7],[37,7],[37,7],[[],24],[39,4],[27,9],[37,38],[40,38],[37,7],[40,17],[37,38],[40,38],[37,7],[40,17],[41,7],0,0,[35,7],0,0,[[37,37],2],[[40,40],2],[[38,38],2],[[36,36],2],[[6,6],2],[[18,18],2],[[42,42],2],[[43,43],2],[[1,1],2],[[10,10],2],[[25,25],2],[[44,44],2],[[12,12],2],[[21,21],2],[[45,45],2],[[46,46],2],[[47,47],2],[[48,48],2],[[49,49],2],[[23,23],2],[[50,50],2],[[20,20],2],[[11,11],2],[[51,51],2],[14,7],[14,7],[15,4],[45,2],[14,7],[35,7],[35,7],[[15,52],53],[[8,52],53],[[14,52],53],[[41,52],53],[[54,52],53],[[55,52],53],[[35,52],53],[[56,52],53],[[57,52],53],[[58,52],53],[[34,52],53],[[59,52],53],[[22,52],53],[[60,52],53],[[33,52],53],[[39,52],53],[[16,52],53],[[19,52],53],[[61,52],53],[[3,52],53],[[37,52],53],[[40,52],53],[[38,52],53],[[38,52],53],[[36,52],53],[[6,52],53],[[18,52],53],[[42,52],53],[[43,52],53],[[24,52],53],[[1,52],53],[[10,52],53],[[10,52],53],[[25,52],53],[[26,52],53],[[27,52],53],[[27,52],53],[[44,52],53],[[28,52],53],[[12,52],53],[[21,52],53],[[21,52],53],[[45,52],53],[[29,52],53],[[46,52],53],[[47,52],53],[[47,52],53],[[30,52],53],[[48,52],53],[[48,52],53],[[49,52],53],[[49,52],53],[[23,52],53],[[50,52],53],[[31,52],53],[[62,52],53],[[63,52],53],[[32,52],53],[[20,52],53],[[20,52],53],[[64,52],53],[[11,52],53],[[11,52],53],[[51,52],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[5,[36]]]],[24,[[5,[25]]]],[24,[[5,[28]]]],[55,4],[24,[[5,[32]]]],[24,[[5,[55]]]],[24,[[5,[54]]]],[24,[[5,[15]]]],[24,[[5,[56]]]],[24,[[5,[29]]]],[24,[[5,[29]]]],[24,[[5,[14]]]],[24,[[5,[3]]]],[24,[[5,[37]]]],[24,[[5,[40]]]],[24,[[5,[18]]]],[24,[[5,[45]]]],[24,[[5,[35]]]],[24,[[5,[43]]]],[24,[[5,[8]]]],[24,[[5,[6]]]],[24,[[5,[16]]]],[24,[[5,[44]]]],[24,[[5,[33]]]],[61,4],[24,[[5,[59]]]],[24,[[5,[58]]]],[24,[[5,[60]]]],[61,17],[24,[[5,[61]]]],[61,4],[24,[[5,[42]]]],[24,[[5,[41]]]],[24,[[5,[39]]]],[61,[[5,[64]]]],[61,[[5,[11]]]],[24,[[5,[10]]]],[6,7],[36,2],[19,2],[15,2],[19,2],[15,2],[19,2],[19,2],[15,2],[18,2],[14,2],[15,2],[54,2],[14,2],[15,2],[18,2],[15,2],[35,2],[14,2],[41,2],[42,2],[14,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[54,2],[6,2],[14,2],[54,2],[54,2],[14,2],[15,2],[14,2],[14,2],[14,2],[22,2],[12,2],[33,2],[36,2],[14,2],[15,2],[14,2],[14,2],[18,2],[42,2],[14,2],[14,2],[41,2],[41,2],[14,2],[60,2],[60,2],[41,2],[15,2],[15,2],[14,2],[15,2],[54,2],[36,2],[41,2],[42,2],[14,2],[15,2],[43,2],[43,2],[14,2],[54,2],[36,2],[54,2],[14,2],[42,2],[42,2],[41,2],[54,2],[42,2],[14,2],[41,2],[18,2],[36,2],[36,2],[41,2],[41,2],[41,2],[41,2],[41,2],[41,2],[41,2],[41,2],[14,2],[15,2],[41,2],[6,2],[6,2],[36,2],[6,2],[6,2],[54,2],[33,2],[59,2],[59,2],[58,2],[15,2],[42,2],[50,2],[33,2],[34,2],[15,2],[15,2],[14,2],[36,2],[14,2],[6,2],[59,2],[15,2],[14,2],[15,2],[14,2],[15,2],[14,2],[43,2],[54,2],[14,2],[33,2],[14,2],[15,2],[42,2],[42,2],[34,2],[54,2],[15,2],[14,2],[14,2],[18,2],[14,2],[42,2],[42,2],[14,2],[14,2],[14,2],[14,2],[15,2],[15,2],[15,2],[14,2],[54,2],[41,2],[14,2],[33,2],[36,2],[15,2],[54,2],[18,2],[54,2],[14,2],[14,2],[14,2],[41,2],[33,2],[54,2],[6,2],[14,2],[54,2],[54,2],[54,2],[15,2],[54,2],[6,2],[18,2],[36,2],[33,2],[54,2],[18,2],[18,2],[18,2],[54,2],[60,2],[60,2],[54,2],[54,2],[33,2],[15,2],[54,2],[18,2],[54,2],[14,2],[42,2],[14,2],[14,2],[14,2],[14,2],[14,2],[14,2],[15,2],[42,2],[14,2],[36,2],[15,2],[42,2],[15,2],[14,2],[15,2],[36,2],[42,2],[14,2],[36,2],[14,2],[33,2],[33,2],[15,2],[34,2],[33,2],[36,2],[14,2],[54,2],[14,2],[42,2],[41,2],[41,2],[54,2],[6,2],[42,2],[14,2],[18,2],[42,2],[14,2],[36,2],[18,2],[6,2],[15,2],[14,2],[56,2],[15,2],[14,2],[56,2],[56,2],[56,2],[22,17],[23,17],[50,17],[56,2],[56,2],[37,38],[37,7],[37,7],[37,7],[3,51],[14,7],[45,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,17],[35,2],[35,2],[35,2],[57,2],[35,2],[19,2],[12,2],[57,2],[57,2],[12,2],[35,2],[35,2],[35,2],[12,2],[12,2],[22,4],[23,4],[56,30],[60,31],[37,38],[40,38],[37,7],[40,17],[37,38],[40,38],[37,7],[40,17],[59,[[5,[23]]]],[40,38],[40,7],[40,7],[40,17],[59,[[5,[22]]]],[58,[[5,[34]]]],[40,38],[40,7],[40,7],[40,17],[45,17],[12,7],[46,7],[46,47],[6,7],[57,49],[54,7],[19,17],[12,13],[12,13],[60,7],[60,7],[18,4],[50,17],[14,7],[6,17],[6,13],[34,4],[59,[[5,[50]]]],[18,4],[60,4],[14,7],0,[[],24],[25,[[5,[27]]]],[28,[[5,[12]]]],[29,[[5,[46]]]],[30,[[5,[57]]]],[31,[[5,[62]]]],[32,[[5,[19]]]],[64,[[5,[1]]]],[39,4],0,[6,13],[35,7],[39,4],[57,4],[19,7],[6,13],[6,7],[18,7],[63,65],[12,13],[15,4],[16,17],[16,17],[46,17],[57,48],[42,7],[58,4],[60],[44,65],[44,66],[44,4],[44,4],[44,4],[19,4],[12,13],[46,4],[57,4],[63,65],[45,17],[14,7],0,[42,4],[45,17],[45,17],[45,17],[45,17],[45,17],[45,17],[45,17],[45,17],[33,17],[33,17],[33,17],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[39,[[5,[65]]]],[3,[[5,[4]]]],0,[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[35,7],[19,17],[[],24],[46,4],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,4],[56,4],[56,4],0,0,0,0,0,0,[[4,4],1]],"p":[[3,"CpuIdResult"],[15,"bool"],[3,"HypervisorInfo"],[15,"u32"],[4,"Option"],[3,"ProcessorCapacityAndFeatureInfo"],[15,"u8"],[3,"ProcessorBrandString"],[15,"str"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[15,"usize"],[3,"FeatureInfo"],[3,"ExtendedProcessorFeatureIdentifiers"],[3,"ProcessorFrequencyInfo"],[15,"u16"],[3,"MemoryEncryptionInfo"],[3,"DatInfo"],[4,"DatType"],[4,"CacheType"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"CpuId"],[3,"CacheInfoIter"],[4,"CacheInfoType"],[3,"CacheInfo"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"ProcessorTraceInfo"],[3,"L3MonitoringInfo"],[3,"PerformanceMonitoringInfo"],[3,"ApmInfo"],[3,"L1CacheTlbInfo"],[4,"Associativity"],[3,"TscInfo"],[3,"L2And3CacheTlbInfo"],[3,"ThermalPowerInfo"],[3,"SvmFeatures"],[3,"PerformanceOptimizationInfo"],[3,"ProcessorSerial"],[3,"MonitorMwaitInfo"],[3,"ExtendedTopologyLevel"],[4,"TopologyType"],[4,"ExtendedRegisterType"],[4,"ExtendedRegisterStateLocation"],[3,"MemBwAllocationInfo"],[4,"Hypervisor"],[3,"Formatter"],[6,"Result"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"RdtAllocationInfo"],[3,"SgxInfo"],[3,"SoCVendorInfo"],[4,"SgxSectionInfo"],[3,"EpcSection"],[3,"SoCVendorAttributesIter"],[15,"u64"],[15,"u128"],[4,"Result"],[3,"TypeId"],[13,"NWay"],[13,"Unknown"],[13,"Unknown"],[13,"Epc"]]},\
"rlibc":{"doc":"A bare-metal library supplying functions rustc may lower …","t":[5,5,5,5],"n":["memcmp","memcpy","memmove","memset"],"q":["rlibc","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[1,1,2],3],[[1,1,2],1],[[1,1,2],1],[[1,3,2],1]],"p":[[15,"u8"],[15,"usize"],[15,"i32"]]},\
"rsdp":{"doc":"This crate provides types for representing the RSDP (the …","t":[13,13,13,13,3,4,11,11,11,11,11,11,11,5,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11],"n":["IncorrectSignature","InvalidChecksum","InvalidOemId","NoValidRsdp","Rsdp","RsdpError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","find_search_areas","fmt","fmt","from","from","handler","into","into","oem_id","revision","rsdt_address","search_for_on_bios","try_from","try_from","try_into","try_into","type_id","type_id","validate","xsdt_address","AcpiHandler","PhysicalMapping","borrow","borrow_mut","deref","drop","from","handler","into","map_physical_region","mapped_length","new","physical_start","region_length","try_from","try_into","type_id","unmap_physical_region","virtual_start"],"q":["rsdp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsdp::handler","","","","","","","","","","","","","","","","","",""],"d":["","","","","The first structure found in ACPI. It just tells us where …","","","","","","","","","Find the areas we should search for the RSDP in.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This searches for a RSDP on BIOS systems.","","","","","","","Checks that: 1) The signature is correct 2) The checksum …","","An implementation of this trait must be provided to allow …","Describes a physical mapping created by …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Given a physical address and a size, map a region of …","","Construct a new <code>PhysicalMapping</code>. <code>mapped_length</code> may differ …","","","","","","Unmap the given physical mapping. This is called when a …",""],"i":[1,1,1,1,0,0,1,2,1,2,1,2,1,0,1,2,1,2,0,1,2,2,2,2,2,1,2,1,2,1,2,2,2,0,0,9,9,9,9,9,9,9,15,9,9,9,9,9,9,9,15,9],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[1,1],3],[[]],[[1,4],5],[[2,4],5],[[]],[[]],0,[[]],[[]],[2,6],[2,7],[2,8],[[],[[10,[[9,[2]],1]]]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[2,[[10,[1]]]],[2,12],0,0,[[]],[[]],[9],[9],[[]],[9],[[]],[[13,13],9],[9,13],[[13,14,13,13],9],[9,13],[9,13],[[],10],[[],10],[[],11],[9],[9,14]],"p":[[4,"RsdpError"],[3,"Rsdp"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[15,"u8"],[15,"u32"],[3,"PhysicalMapping"],[4,"Result"],[3,"TypeId"],[15,"u64"],[15,"usize"],[3,"NonNull"],[8,"AcpiHandler"]]},\
"rustversion":{"doc":"github crates-io docs-rs","t":[23,23,23,23,23,14,23,23,23,23],"n":["all","any","attr","before","beta","cfg","nightly","not","since","stable"],"q":["rustversion","","","","","","","","",""],"d":["","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0],"p":[]},\
"sched_yield":{"doc":"","t":[5,5],"n":["check_main_signature","main"],"q":["sched_yield",""],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"p":[]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,4,1,4,0,1,1,1,1,4,1,4,0,1,4,1,8,4,1,4,1,4,1,4,1],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[1],[1],[1],[[1,2],3],[[4,2],3],[[]],[[]],[[],[[1,[4]]]],[[]],[[]],[1],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],1]],"p":[[3,"ScopeGuard"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"],[8,"Strategy"]]},\
"serde":{"doc":"Serde","t":[8,8,16,16,16,8,16,16,16,16,16,16,16,8,11,11,11,0,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,14,11,11,0,14,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,13,13,13,8,8,8,8,16,13,8,8,16,16,16,16,16,8,13,3,8,13,8,13,13,13,13,13,8,13,2,13,13,13,4,13,13,13,16,16,16,8,8,11,11,11,11,11,11,11,11,10,11,10,10,11,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,10,11,11,11,10,11,10,11,11,10,11,11,11,11,11,11,11,10,11,11,10,11,11,0,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,16,16,16,16,16,16,3,16,16,16,16,16,16,16,16,8,8,16,8,16,8,16,8,16,8,16,8,16,8,16,8,2,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,11,11,11,10,10,10,10,10,10,11,11,11,11,11,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11],"n":["Deserialize","Deserializer","Error","Error","Ok","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serde_if_integer128","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","0","0","0","0","0","0","0","0","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":["serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::deserde::de::Unexpected","","","","","","","","serde::de::valueserde::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <strong>data structure</strong> that can be deserialized from any data …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Conditional compilation depending on whether Serde is …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","","","","","","","","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,61,62,62,0,62,62,62,62,62,62,62,0,62,62,62,0,63,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,61,62,0,0,64,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,20,20,20,0,0,0,0,65,20,0,0,61,66,67,68,69,0,20,0,0,20,0,20,20,20,20,20,0,20,0,20,20,20,0,20,20,20,70,71,68,0,0,19,20,19,20,19,20,19,20,72,19,63,70,19,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,72,20,71,19,23,23,19,19,20,20,19,20,19,20,65,72,72,72,61,72,69,69,66,66,67,67,67,67,67,67,66,67,69,19,20,20,19,20,19,20,69,19,20,69,72,72,0,68,68,71,19,71,71,71,71,19,71,71,19,71,71,19,71,19,71,71,71,19,71,71,19,71,19,71,19,71,19,71,19,71,19,71,71,19,71,71,71,19,71,71,19,73,74,75,76,77,78,79,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,37,37,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,36,54,37,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,36,54,36,36,36,36,36,54,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,37,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,29,30,31,32,33,56,0,62,81,82,83,84,85,86,87,0,62,81,82,83,84,85,86,87,0,0,62,0,62,0,62,0,62,0,62,0,62,0,62,0,0,60,60,62,62,62,88,81,82,83,84,85,86,87,60,60,60,60,60,60,60,60,60,62,64,62,62,62,81,82,60,60,85,62,62,83,84,86,87,60,60,60,60,62,62,62,62,62,85,60,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,85,60,86,87,60,60,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[2,1],[3,1],[[2,3],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],0,[[],4],[[],4],0,0,[[],1],[4,1],[[],1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[11,1],[12,1],[[[13,[3]]],1],[2,1],[[2,14,2],1],[[],1],[[[13,[3]]],1],[[],1],[2,1],[[2,3],1],[[2,14,2,3],1],[3,1],[[2,3],1],[[2,14,2,3],1],[15,1],[16,1],[14,1],[17,1],[18,1],[[],1],[2,1],[[2,14,2],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[19,19],[20,20],[[]],[[]],[[]],[[],19],[[],1],[[],1],[[],[[1,[19]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[[],1],[[],1],[[],1],[[],1],[2,1],[3,1],[[2,3],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,1],[2],[[20,20],4],[21,22],[[19,21],22],[21,22],[[23,21],22],[[19,21],22],[21,[[1,[24]]]],[[20,21],22],[[20,21],22],[[]],[[]],[[]],[[]],[[]],[[3,23]],[[20,23]],[[20,23]],[[],4],[2],[[],1],[[],1],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],[[1,[13]]]],[[],1],[[],1],[[],[[13,[3]]]],[[],[[13,[3]]]],[[],1],[[]],[[]],[[],25],[[],1],[[],1],[[],1],[[],1],[3,1],[[],26],[[],26],[[],1],[2],[2],0,[[],1],[[],1],[4,1],[[19,4],1],[[],1],[2,1],[[[27,[18]]],1],[[],1],[19,1],[5,1],[[],1],[19,1],[6,1],[7,1],[[19,7],1],[8,1],[[19,8],1],[9,1],[10,1],[11,1],[[19,11],1],[12,1],[[],1],[19,1],[[],1],[19,1],[[],1],[19,1],[[],1],[19,1],[[],1],[19,1],[2,1],[[19,2],1],[25,1],[15,1],[[19,15],1],[16,1],[14,1],[17,1],[[19,17],1],[18,1],[[],1],[19,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[[[54,[53,53]]],[[54,[53,53]]]],[[[55,[53]]],[[55,[53]]]],[[[56,[53]]],[[56,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[[28,3],1],[[29,3],1],[[30,3],1],[[31,3],1],[[32,3],1],[[33,3],1],[[34,3],1],[[35,3],1],[[36,3],1],[[38,3],1],[[39,3],1],[[40,3],1],[[41,3],1],[[42,3],1],[[43,3],1],[[44,3],1],[[45,3],1],[[46,3],1],[[47,3],1],[[48,3],1],[[49,3],1],[[50,3],1],[[51,3],1],[[52,3],1],[[54,3],1],[[55,3],1],[[56,3],1],[[28,2,3],1],[[29,2,3],1],[[30,2,3],1],[[31,2,3],1],[[32,2,3],1],[[33,2,3],1],[[34,2,3],1],[[35,2,3],1],[[36,2,3],1],[[38,2,3],1],[[39,2,3],1],[[40,2,3],1],[[41,2,3],1],[[42,2,3],1],[[43,2,3],1],[[44,2,3],1],[[45,2,3],1],[[46,2,3],1],[[47,2,3],1],[[48,2,3],1],[[49,2,3],1],[[50,2,3],1],[[51,2,3],1],[[52,2,3],1],[[54,2,3],1],[[55,2,3],1],[[56,2,3],1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[36,1],[38,1],[39,1],[40,1],[41,1],[42,1],[43,1],[44,1],[45,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[54,1],[55,1],[56,1],[[28,2],1],[[29,2],1],[[30,2],1],[[31,2],1],[[32,2],1],[[33,2],1],[[34,2],1],[[35,2],1],[[36,2],1],[[38,2],1],[[39,2],1],[[40,2],1],[[41,2],1],[[42,2],1],[[43,2],1],[[44,2],1],[[45,2],1],[[46,2],1],[[47,2],1],[[48,2],1],[[49,2],1],[[50,2],1],[[51,2],1],[[52,2],1],[[54,2],1],[[55,2],1],[[56,2],1],[36,1],[54,1],[[37,37],4],[[28,21],22],[[29,21],22],[[30,21],22],[[31,21],22],[[32,21],22],[[33,21],22],[[34,21],22],[[35,21],22],[[36,21],22],[[37,21],22],[[37,21],22],[[38,21],22],[[39,21],22],[[40,21],22],[[41,21],22],[[42,21],22],[[43,21],22],[[44,21],22],[[45,21],22],[[46,21],22],[[47,21],22],[[48,21],22],[[49,21],22],[[50,21],22],[[51,21],22],[[52,21],22],[[54,21],22],[[[55,[57]],21],22],[[[56,[57]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[14,29],[2,30],[2,31],[25,32],[[[58,[2]]],33],[[],34],[[],35],[[],36],[4,38],[12,39],[9,40],[10,41],[11,42],[59,43],[18,44],[16,45],[17,46],[3,47],[6,48],[7,49],[5,50],[8,51],[15,52],[[],54],[[],55],[[],56],[36,[[1,[13]]]],[54,[[1,[13]]]],[36,[[1,[13]]]],[36,[[1,[13]]]],[36,1],[36,[[13,[3]]]],[36,[[13,[3]]]],[54,[[13,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[29,1],[30,1],[31,1],[32,1],[33,1],[56,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],[[],1],[[],1],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[[]],[[]],[[],4],[[],1],[4,1],[[],1],[5,1],[[],1],[[],1],[60,1],[60,1],[[],1],[6,1],[7,1],[[],1],[[],1],[2,1],[2,1],[[60,2],1],[[60,2],1],[60,1],[60,1],[8,1],[9,1],[10,1],[11,1],[12,1],[[],1],[60,1],[[[13,[3]]],1],[2,1],[[2,14,2],1],[[],1],[[[13,[3]]],1],[[],1],[2,1],[[2,3],1],[[2,14,2,3],1],[3,1],[[2,3],1],[[2,14,2,3],1],[15,1],[16,1],[14,1],[17,1],[18,1],[[],1],[2,1],[[2,14,2],1],[[],1],[60,1],[2,1],[2,1],[[],1],[[],1],[[],26]],"p":[[4,"Result"],[15,"str"],[15,"usize"],[15,"bool"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[3,"String"],[3,"TypeId"],[3,"Vec"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[8,"Clone"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[3,"Impossible"],[8,"Deserializer"],[8,"Serializer"],[8,"Deserialize"],[8,"Serialize"],[8,"IntoDeserializer"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"DeserializeSeed"],[8,"Visitor"],[8,"Error"],[13,"Bool"],[13,"Unsigned"],[13,"Signed"],[13,"Float"],[13,"Char"],[13,"Str"],[13,"Bytes"],[13,"Other"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[8,"Error"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":[24,24],"n":["Deserialize","Serialize"],"q":["serde_derive",""],"d":["",""],"i":[0,0],"f":[0,0],"p":[]},\
"serial":{"doc":"","t":[3,8,11,11,11,11,10,11,10,11,11,11,11],"n":["Com","Serial","borrow","borrow_mut","from","into","new","new","print_octet","print_octet","try_from","try_into","type_id"],"q":["serial","","","","","","","","","","","",""],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,1,1,1,1,5,1,5,1,1,1,1],"f":[0,0,[[]],[[]],[[]],[[]],[[]],[[],1],[2],[[1,2]],[[],3],[[],3],[[],4]],"p":[[3,"Com"],[15,"u8"],[4,"Result"],[3,"TypeId"],[8,"Serial"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[6,6,6,2,6,2,6,2,6,6,2,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,3,3,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_unchecked","initialized","into","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":["spin","","","","","","","","","","","","","","","","","","spin::barrier","","","","","","","","","","","","","","","","","","","spin::lazy","","","","","","","","","","","","","","spin::lock_api","","","","","","spin::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::mutex::spin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::once","","","","","","","","","","","","","","","","","","","","","","","","","","spin::relax","","","","","","","","","","","","","","","","","","","","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>SpinMutex</code> and returns a guard that permits …","","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","Returns the argument unchanged.","","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,15,16,15,16,15,16,16,15,16,16,15,15,15,15,16,15,15,16,15,15,15,16,15,15,15,0,15,16,15,16,15,15,15,16,15,0,0,20,20,21,20,21,20,21,21,21,20,21,21,20,20,20,20,21,20,20,21,20,20,20,21,20,20,20,20,21,20,21,20,20,20,21,20,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,27,28,27,28,27,28,27,28,7,27,28,27,28,27,28,27,28,0,0,0,0,23,23,24,25,26,23,24,25,26,23,24,25,26,25,23,25,26,25,24,25,26,23,24,24,25,25,26,26,23,23,23,23,23,24,25,26,23,23,24,25,26,23,23,24,25,26,23,23,23,23,23,23,23,24,25,26,23,24,25,26,23,23,23,23,23,26,23,23,23,24,25,26,23,23,23,23,26,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[[4,[7]]],1],0,[8],[[]],[[]],[[],[[8,[9]]]],[[[8,[10,7]]]],[[[8,[11]],12],13],[[[8,[10,7]]]],[[]],[[]],[[],8],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[15,[[0,[14,9]]]]]],[[[16,[14]]]],[[[16,[14]]]],[[[15,[[0,[14,11]]]],12],13],[[[16,[[0,[14,17]]]],12],13],[[[16,[[0,[14,11]]]],12],13],[[[15,[14]]]],[[],15],[18],[[]],[[]],[[[15,[14]]]],[[]],[[]],[15],[[[15,[14]]],2],[[[15,[7]]],2],[[[16,[14]]]],[[[15,[7]]]],[[[15,[14,7]]],[[16,[14]]]],[[],15],0,[[],5],[[],5],[[],5],[[],5],[[[15,[7]]],2],[[[15,[14]]],[[19,[[16,[14]]]]]],[[],6],[[],6],[[[15,[7]]]],0,0,[20],[[]],[[]],[[]],[[]],[[],[[20,[[0,[14,9]]]]]],[[[21,[14]]]],[[[21,[14]]]],[[[21,[14]]]],[[[20,[[0,[14,11]]]],12],13],[[[21,[[0,[14,17]]]],12],13],[[[21,[[0,[14,11]]]],12],13],[[[20,[14]]]],[18],[[],20],[[]],[[]],[[[20,[14]]]],[[]],[[]],[20],[[[20,[7]]],2],[[[20,[14]]],2],[[[21,[14]]]],[[[20,[14,7]]],[[21,[14]]]],[[[20,[7]]]],[[],20],[[],5],[[],5],[[],5],[[],5],[[[20,[7]]],2],[[[20,[14]]],[[19,[[21,[14]]]]]],[[],6],[[],6],[[[20,[7]]]],0,0,[22],[[]],[[]],[[[22,[7]],10]],[[],22],[22],[[[22,[11]],12],13],[[]],[[],22],[18],[22,19],[22,19],[22],[[],22],[[]],[22,2],[[],22],[[[22,[7]]],19],[[[22,[7]],10],5],[[],5],[[],5],[22,19],[[],6],[[[22,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[[0,[14,9]]]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[25,[14]]]],[[[23,[7]]]],[[[25,[14]]],[[24,[14]]]],[[[26,[14]]],[[24,[14]]]],[[[25,[14]]],[[26,[14]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[[0,[14,11]]]],12],13],[[[24,[[0,[14,17]]]],12],13],[[[24,[[0,[14,11]]]],12],13],[[[25,[[0,[14,11]]]],12],13],[[[25,[[0,[14,17]]]],12],13],[[[26,[[0,[14,17]]]],12],13],[[[26,[[0,[14,11]]]],12],13],[[[23,[14]]]],[[[23,[14]]]],[18],[[]],[[],23],[[]],[[]],[[]],[[[23,[14]]]],[[]],[[]],[[]],[[]],[23],[[[23,[7]]],2],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[],23],[[[23,[14,7]]],[[24,[14]]]],[[[23,[14]]],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[14]]],[[19,[[24,[14]]]]]],[[[23,[7]]],2],[[[26,[14]]],[[5,[[25,[14]],[26,[14]]]]]],[[[23,[14]]],[[19,[[26,[14]]]]]],[[[23,[14]]],[[19,[[25,[14]]]]]],[[],6],[[],6],[[],6],[[],6],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[26,[14,7]]],[[25,[14,7]]]],[[[23,[14,7]]],[[26,[14,7]]]],[[[23,[14,7]]],[[25,[14,7]]]],[[[23,[14]]],3]],"p":[[3,"BarrierWaitResult"],[15,"bool"],[15,"usize"],[3,"Barrier"],[4,"Result"],[3,"TypeId"],[8,"RelaxStrategy"],[3,"Lazy"],[8,"Default"],[8,"FnOnce"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"Mutex"],[3,"MutexGuard"],[8,"Display"],[15,"never"],[4,"Option"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"],[3,"Spin"],[3,"Loop"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref, …","t":[8,8],"n":["CloneStableDeref","StableDeref"],"q":["stable_deref_trait",""],"d":["An unsafe marker trait for types where clones deref to the …","An unsafe marker trait for types that deref to a stable …"],"i":[0,0],"f":[0,0],"p":[]},\
"static_assertions":{"doc":"Banner","t":[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"n":["assert_cfg","assert_eq_align","assert_eq_size","assert_eq_size_ptr","assert_eq_size_val","assert_fields","assert_impl_all","assert_impl_any","assert_impl_one","assert_not_impl_all","assert_not_impl_any","assert_obj_safe","assert_trait_sub_all","assert_trait_super_all","assert_type_eq_all","assert_type_ne_all","const_assert","const_assert_eq","const_assert_ne"],"q":["static_assertions","","","","","","","","","","","","","","","","","",""],"d":["Asserts that a given configuration is set.","Asserts that types are equal in alignment.","Asserts that types are equal in size.","Asserts that values pointed to are equal in size.","Asserts that values are equal in size.","Asserts that the type has the given fields.","Asserts that the type implements <em>all</em> of the given traits.","Asserts that the type implements <em>any</em> of the given traits.","Asserts that the type implements exactly one in a set of …","Asserts that the type does <strong>not</strong> implement <em>all</em> of the given …","Asserts that the type does <strong>not</strong> implement <em>any</em> of the given …","Asserts that the traits support dynamic dispatch (…","Asserts that the trait is a child of all of the other …","Asserts that the trait is a parent of all of the other …","Asserts that <em>all</em> types in a list are equal to each other.","Asserts that <em>all</em> types are <strong>not</strong> equal to each other.","Asserts that constant expressions evaluate to <code>true</code>.","Asserts that constants are equal in value.","Asserts that constants are <strong>not</strong> equal in value."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[]},\
"syn":{"doc":"github crates-io docs-rs","t":[3,13,13,13,13,3,13,13,13,13,13,4,3,6,13,13,3,4,13,3,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,4,3,3,3,13,13,3,13,13,13,13,13,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,4,3,3,13,13,13,4,4,3,13,13,13,3,13,3,13,3,13,13,13,13,13,13,13,3,13,13,13,13,3,13,4,13,13,3,3,3,3,3,3,3,13,13,3,13,13,4,13,13,4,4,13,3,3,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,4,3,3,3,3,13,13,3,13,13,13,13,13,13,13,13,6,13,4,13,13,13,13,13,13,4,13,13,13,13,14,13,3,4,13,13,13,13,13,3,4,13,13,13,13,13,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,4,13,13,13,13,13,13,3,3,13,13,13,3,3,3,4,3,4,13,13,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,14,12,12,12,12,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,12,12,12,14,14,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,14,11,11,11,11,14,14,5,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,18,10,3,3,3,16,8,3,6,8,8,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,13,3,3,3,3,4,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Bool","BoundLifetimes","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closure","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Eq","Eq","Error","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","Field","Field","Fields","FieldsNamed","FieldsUnnamed","Float","ForLoop","Ge","GenericArgument","GenericParam","Generics","Group","Group","Gt","Ident","If","ImplGenerics","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Loop","Lt","Macro","Macro","Macro","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","MethodCall","Mul","MulEq","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Raw","Reference","Reference","Rem","RemEq","Repeat","Restricted","Result","Return","ReturnType","Shl","ShlEq","Shr","ShrEq","Slice","Str","StrStyle","Struct","Struct","Sub","SubEq","Token","Trait","TraitBound","TraitBoundModifier","TraitObject","Try","TryBlock","Tuple","Tuple","Turbofish","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","UnOp","Unary","Union","Unit","Unnamed","Unnamed","Unsafe","Variadic","Variant","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Yield","abi","and_token","apostrophe","args","args","arguments","as_token","as_token","as_turbofish","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","bang_token","bang_token","base","base10_digits","base10_digits","base10_parse","base10_parse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","const_params","const_params_mut","const_token","const_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","delimiter","discriminant","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","enum_token","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","ext","extern_token","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","get_ident","group_token","gt_token","gt_token","gt_token","gt_token","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ident","ident","ident","ident","ident","ident","ident","ident","ident","impl_token","in_token","index","index","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","iter","iter_mut","leading_colon","left","len","len","lhs_ty","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","lit","lit","lt_token","lt_token","lt_token","lt_token","mac","make_where_clause","member","modifier","mutability","mutability","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","rhs_ty","right","segments","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","struct_token","style","suffix","suffix","suffix","suffix","suffix","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","underscore_token","union_token","unnamed","unraw","unsafety","value","value","value","value","value","value","variadic","variants","vis","vis","where_clause","where_token","without_plus","without_plus","without_plus","without_plus","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Cursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","eq","error","error","error","extend","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","hash","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","provide","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","eq","extend","extend","first","first_mut","fmt","from","from","from","from","from","from","from","from","from_iter","from_iter","hash","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","0","0","1","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["synsyn::AttrStyle","syn::BinOp","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Data","","","syn::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Fields","","syn::GenericArgument","","","","","syn::GenericParam","","","syn::Lit","","","","","","","","syn::MacroDelimiter","","","syn::Member","","syn::Meta","","","syn::NestedMeta","","syn::PathArguments","","syn::ReturnType","","syn::StrStyle","syn::TraitBoundModifier","syn::Type","","","","","","","","","","","","","","","syn::TypeParamBound","","syn::UnOp","","","syn::Visibility","","","syn::WherePredicate","","","syn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::punctuated::Pair","","","syn::spanned","","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation …","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: …","A binding (equality constraint) on an associated type: the …","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","A closure expression: <code>|a, b| a + b</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A for loop: <code>for pat in expr { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","An expression contained within invisible delimiters.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","A word of Rust code, which may be a keyword or legal …","An <code>if</code> expression with an optional <code>else</code> block: …","Returned by <code>Generics::split_for_impl</code>.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro in the type position.","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path like <code>std::slice::Iter</code>, optionally qualified with a …","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A raw string like <code>r##&quot;data&quot;##</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An array literal constructed from one repeated element: …","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A dynamically sized slice type: <code>[T]</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A particular type is returned.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","Parse a set of curly braces and expose their content to …","","","","","Parse a set of square brackets and expose their content to …","A stably addressed token buffer supporting efficient …eturns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","Data within the struct or enum.","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension traits to provide parsing methods on foreign …","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generics required to complete the definition.","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","Name of the struct or enum.","","","","","","","","","<code>(A, B)</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","Returns the number of fields.","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the …","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","<code>C</code>","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parses the content of the attribute, consisting of the …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","","","Returns the identifier that begins this structured meta …","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","Returns the span of this <code>Ident</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…okens representing Rust punctuation, keywords, and …ype of the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","Visibility of the field.","Visibility of the struct or enum.","","","In some positions, types may not contain the <code>+</code> character, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","","Returns the <code>Span</code> of the next token in the parse stream, or …","The source location of the error.","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","","","","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,64,64,64,87,0,25,66,25,25,25,0,0,0,25,66,0,0,25,0,88,64,64,64,64,64,64,25,51,0,25,58,58,25,51,51,25,25,51,25,38,88,0,0,88,25,270,21,0,0,0,0,84,65,0,64,64,60,47,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,51,25,64,0,0,0,25,66,64,0,25,0,66,0,25,66,21,11,51,64,25,0,38,43,47,88,0,12,0,15,25,0,0,0,0,0,0,0,25,64,0,25,66,0,25,45,0,0,15,0,0,25,64,64,12,17,35,64,65,0,66,45,87,65,64,11,25,58,66,87,0,0,12,25,66,0,0,0,0,0,66,21,0,25,270,25,66,64,64,25,21,0,25,0,64,64,64,64,66,51,0,25,60,64,64,0,43,0,0,66,25,25,25,66,0,0,25,38,47,84,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,60,17,17,35,25,0,0,25,51,66,0,0,0,0,0,0,25,25,68,77,9,27,89,86,28,93,1,16,20,26,27,28,29,30,31,32,33,34,39,40,41,59,82,83,57,73,29,3,5,3,5,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,270,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,270,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,48,39,40,48,49,70,79,91,18,62,0,10,30,67,78,0,0,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,8,9,89,20,39,40,41,48,49,91,37,37,41,76,23,0,0,59,37,42,87,39,41,57,16,29,83,79,67,69,74,76,77,78,80,62,7,1,2,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,14,39,41,50,90,28,30,32,34,0,81,16,61,63,7,1,2,8,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,3,5,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,68,42,7,1,2,8,8,8,8,8,8,8,9,10,11,12,12,12,12,13,14,15,15,15,16,17,17,17,18,19,20,21,21,21,21,22,23,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,35,35,35,36,36,37,38,38,38,38,39,39,40,41,42,43,43,43,44,45,46,47,47,47,47,48,49,50,51,51,51,51,51,51,51,51,52,53,54,55,3,3,5,5,56,270,57,58,59,60,60,60,60,61,62,63,64,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,85,86,86,87,88,89,90,91,92,93,27,59,85,69,37,42,89,93,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,9,16,20,39,41,59,86,90,91,70,24,30,36,68,92,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,270,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,17,17,17,17,87,85,17,17,85,26,17,67,50,40,49,77,37,42,44,48,68,37,14,31,37,42,89,93,72,37,29,44,76,77,81,82,18,13,8,9,40,51,52,53,54,55,3,5,56,8,26,34,68,92,37,13,19,24,27,32,44,68,74,80,92,0,0,0,8,9,12,13,14,15,16,18,19,21,25,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,52,53,54,55,3,5,56,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,88,89,90,92,0,8,10,10,57,57,10,0,10,85,20,10,0,0,0,20,52,8,9,12,10,13,14,24,33,44,57,75,93,10,46,22,24,0,33,75,50,26,85,61,67,8,9,51,52,53,54,55,3,5,56,7,1,2,8,8,8,9,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,52,52,53,53,54,54,55,55,3,3,5,5,56,56,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,36,56,0,37,76,61,10,51,52,53,54,55,3,5,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,8,9,3,5,7,1,2,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,0,52,53,54,55,3,5,56,10,57,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,270,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,270,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,20,28,41,82,90,93,7,1,2,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,109,108,126,131,127,26,119,120,122,27,28,134,107,29,121,116,112,30,111,31,110,117,130,132,32,33,113,114,115,129,118,106,124,125,128,34,135,133,123,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,270,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,37,37,71,63,19,8,68,52,53,54,55,56,56,68,62,20,59,37,46,66,70,79,84,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,0,0,152,152,153,152,153,153,153,152,153,153,153,152,153,153,153,152,153,153,153,152,152,153,153,153,153,153,152,153,152,153,152,153,0,402,402,402,0,0,0,148,0,0,0,0,0,0,0,155,159,155,156,158,157,159,155,156,158,157,155,156,157,156,157,157,155,156,0,155,158,159,155,156,157,155,155,158,157,157,155,159,155,156,158,157,157,158,159,155,156,158,157,157,157,157,155,155,157,157,145,155,148,158,148,148,155,159,155,155,155,157,155,157,155,157,156,157,155,157,159,155,156,158,157,159,155,156,158,157,159,155,156,158,157,0,403,170,0,0,0,0,0,0,0,0,170,164,167,172,168,169,139,140,170,164,167,172,168,169,139,140,170,164,164,167,168,169,139,170,164,167,168,169,139,170,164,164,164,164,164,164,164,164,164,167,172,168,169,139,140,170,164,164,164,164,164,164,164,167,172,168,169,139,140,170,164,164,164,167,172,168,169,139,140,164,170,170,164,164,164,164,164,164,167,172,168,169,139,140,164,170,167,172,168,169,139,140,167,172,168,169,139,140,164,164,164,164,164,164,164,170,170,164,164,164,167,172,168,169,139,140,164,170,164,167,168,169,139,170,164,170,164,164,167,172,168,169,139,140,170,164,167,172,168,169,139,140,170,164,167,172,168,169,139,140,170,170,170,404,405,404,0,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,220,222,225,226,227,229,231,232,234,235,239,242,244,247,250,251,254,257,262,263,265,100,220,222,225,226,227,229,231,232,234,235,239,242,244,247,250,251,254,257,262,263,265,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,266,267,268,269,100,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,100,173,174,175,176,177,178,179,180,181,182,101,183,184,185,186,187,104,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,102,105,206,207,103,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"fp":[[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitInt"],[15,"str"],[3,"LitFloat"],[6,"Result"],[3,"ImplGenerics"],[3,"Ident"],[3,"Lifetime"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[4,"Visibility"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[4,"Expr"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[4,"Member"],[3,"Index"],[3,"Generics"],[4,"GenericParam"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[4,"Lit"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"Macro"],[4,"MacroDelimiter"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"BinOp"],[4,"UnOp"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"Variadic"],[4,"ReturnType"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[3,"Underscore"],[3,"Crate"],[3,"SelfType"],[3,"Super"],[3,"Extern"],[3,"SelfValue"],[3,"ExprTry"],[3,"ExprContinue"],[3,"ExprAssign"],[3,"ExprArray"],[3,"ExprLoop"],[3,"ExprLet"],[3,"ExprIf"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprGroup"],[3,"ExprMacro"],[3,"ExprStruct"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprForLoop"],[3,"ExprBreak"],[3,"ExprYield"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprAssignOp"],[3,"ExprAwait"],[3,"ExprType"],[3,"ExprReturn"],[3,"ExprMatch"],[3,"ExprAsync"],[3,"ExprMethodCall"],[3,"ExprWhile"],[3,"ExprClosure"],[3,"ExprUnsafe"],[15,"usize"],[3,"Literal"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Error"],[3,"Nothing"],[3,"Lookahead1"],[8,"Display"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Punctuated"],[8,"Peek"],[3,"Demand"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[8,"Debug"],[3,"PairsMut"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[4,"StrStyle"],[13,"Inner"],[13,"Add"],[13,"Sub"],[13,"Mul"],[13,"Div"],[13,"Rem"],[13,"And"],[13,"Or"],[13,"BitXor"],[13,"BitAnd"],[13,"BitOr"],[13,"Shl"],[13,"Shr"],[13,"Eq"],[13,"Lt"],[13,"Le"],[13,"Ne"],[13,"Ge"],[13,"Gt"],[13,"AddEq"],[13,"SubEq"],[13,"MulEq"],[13,"DivEq"],[13,"RemEq"],[13,"BitXorEq"],[13,"BitAndEq"],[13,"BitOrEq"],[13,"ShlEq"],[13,"ShrEq"],[13,"Struct"],[13,"Enum"],[13,"Union"],[13,"Array"],[13,"Assign"],[13,"AssignOp"],[13,"Async"],[13,"Await"],[13,"Binary"],[13,"Block"],[13,"Box"],[13,"Break"],[13,"Call"],[13,"Cast"],[13,"Closure"],[13,"Continue"],[13,"Field"],[13,"ForLoop"],[13,"Group"],[13,"If"],[13,"Index"],[13,"Let"],[13,"Lit"],[13,"Loop"],[13,"Macro"],[13,"Match"],[13,"MethodCall"],[13,"Paren"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Repeat"],[13,"Return"],[13,"Struct"],[13,"Try"],[13,"TryBlock"],[13,"Tuple"],[13,"Type"],[13,"Unary"],[13,"Unsafe"],[13,"Verbatim"],[13,"While"],[13,"Yield"],[13,"Named"],[13,"Unnamed"],[13,"Lifetime"],[13,"Type"],[13,"Binding"],[13,"Constraint"],[13,"Const"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Str"],[13,"ByteStr"],[13,"Byte"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Bool"],[13,"Verbatim"],[13,"Paren"],[13,"Brace"],[13,"Bracket"],[13,"Named"],[13,"Unnamed"],[13,"Path"],[13,"List"],[13,"NameValue"],[13,"Meta"],[13,"Lit"],[13,"AngleBracketed"],[13,"Parenthesized"],[13,"Type"],[13,"Raw"],[13,"Maybe"],[13,"Array"],[13,"BareFn"],[13,"Group"],[13,"ImplTrait"],[13,"Infer"],[13,"Macro"],[13,"Never"],[13,"Paren"],[13,"Path"],[13,"Ptr"],[13,"Reference"],[13,"Slice"],[13,"TraitObject"],[13,"Tuple"],[13,"Verbatim"],[13,"Trait"],[13,"Lifetime"],[13,"Deref"],[13,"Not"],[13,"Neg"],[13,"Public"],[13,"Crate"],[13,"Restricted"],[13,"Type"],[13,"Lifetime"],[13,"Eq"],[8,"IdentExt"],[8,"Speculative"],[13,"Punctuated"],[13,"End"],[8,"Spanned"]]},\
"text":{"doc":"","t":[12,3,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,6,18,18,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,14,14,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,8,18,3,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,6,17,3,3,17,17,17,11,11,12,12,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11],"n":["0","Attribute","BACKGROUND_SHIFT","BLACK","BLUE","CYAN","Colour","DARK_GREY","GREEN","GREY","LIGHT","LIGHT_BLUE","LIGHT_CYAN","LIGHT_GREEN","LIGHT_MAGENTA","LIGHT_RED","LIGHT_YELLOW","MAGENTA","NORMAL","PANIC","RED","TEXT","Text","VgaText","WHITE","YELLOW","__private_field","all","attribute","background","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","complement","contains","cursor","cursor","deref","difference","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","grid","grid","hash","init","insert","intersection","intersects","into","into","into","into","is_all","is_empty","make_attribute","new","new","not","partial_cmp","print","println","remove","serial","set","set_attribute","sub","sub_assign","symmetric_difference","text_buffer","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","write_str","ADDRESS_REGISTER","CURSOR_LOCATION_HIGH","CURSOR_LOCATION_LOW","Cursor","DATA_REGISTER","VgaCursor","borrow","borrow_mut","from","get","get","into","new","new","register","set","set","set_height","set_register","try_from","try_into","type_id","Buffer","COLUMNS","Cell","Grid","ROWS","SIZE","TAB_WIDTH","adjust_position","attribute","attribute","attribute","borrow","borrow","borrow_mut","borrow_mut","buffer","character","character","clear","clone","column","deref","deref_mut","eq","fmt","from","from","init","into","into","is_graphical","is_newline","new","newline","position","print_character","round_up","row_start","scroll","set_attribute","tab","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","text::cursor","","","","","","","","","","","","","","","","","","","","","","text::grid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[5,0,5,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,5,5,1,0,0,0,1,1,9,1,4,5,1,1,1,1,1,1,1,1,4,1,5,9,4,1,5,9,1,5,1,1,1,0,4,9,1,1,1,5,1,1,1,1,1,1,5,4,1,5,9,1,1,1,1,0,4,1,4,1,1,1,4,1,5,9,1,1,0,4,5,1,1,0,0,1,4,1,4,1,1,1,0,1,4,1,5,9,4,1,5,9,4,1,5,9,1,4,19,19,19,0,19,0,19,19,19,2,19,19,2,19,19,2,19,19,19,19,19,19,0,0,0,0,0,0,0,20,20,20,22,20,22,20,22,20,20,22,20,22,20,22,22,22,22,20,22,20,20,22,0,20,20,20,20,20,0,20,20,20,20,20,22,20,22,20,22],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[[4,[2,3]]],5],[5,1],[[1,1],1],[[1,1]],[[1,1],1],[[1,1]],[1,6],0,[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[5,5],[[1,1],7],[1,1],[[1,1],8],0,0,[9,10],[[1,1],1],[[],1],[[1,1],8],[[5,5],8],[[1,11]],[[1,12],13],[[1,12],13],[[1,12],13],[[1,12],13],[[1,12],13],[[5,12],13],[[]],[[]],[[]],[[]],[6,[[14,[1]]]],[6,1],[6,1],[11,1],0,0,[1],[[[4,[2,3]]]],[[1,1]],[[1,1],1],[[1,1],8],[[]],[[]],[[]],[[]],[1,8],[1,8],0,[5,[[4,[2,3]]]],[[1,1],5],[1,1],[[1,1],[[14,[7]]]],0,0,[[1,1]],0,[[1,1,8]],[[[4,[2,3]],5]],[[1,1],1],[[1,1]],[[1,1],1],[[]],[[1,1]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[1,1],1],[[[4,[2,3]],17],13],0,0,0,0,0,0,[[]],[[]],[[]],[[],18],[19,18],[[]],[[]],[[],19],[[19,6],6],[18],[[19,18]],[[19,6]],[[19,6,6]],[[],15],[[],15],[[],16],0,0,0,0,0,0,0,[20],[20,5],0,0,[[]],[[]],[[]],[[]],0,[[20,21]],0,[[20,18,18]],[22,22],0,[22,22],[22,22],[[22,22],8],[[22,12],13],[[]],[[]],[[20,18],18],[[]],[[]],[6,8],[20,8],[5,20],[20],[20,18],[[20,21]],[[18,18],18],0,[20],[[20,5]],[20],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16]],"p":[[3,"Colour"],[8,"Cursor"],[8,"Serial"],[3,"Text"],[3,"Attribute"],[15,"u8"],[4,"Ordering"],[15,"bool"],[3,"TEXT"],[6,"Mutex"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"str"],[15,"usize"],[3,"VgaCursor"],[3,"Grid"],[15,"char"],[3,"Cell"]]},\
"tracing":{"doc":"A scoped, structured logging and diagnostics system.","t":[8,18,3,18,3,18,8,3,3,3,18,8,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,14,14,11,0,11,11,11,11,11,11,11,11,11,10,11,14,10,11,11,11,11,11,14,14,0,10,11,14,11,14,10,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,10,11,11,11,11,11,10,10,11,10,11,11,11,0,14,14,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,8,3,3,3,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,10,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,5,11,5,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,3,3,3,3,8,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,3,18,3,17,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,3,3,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Collect","DEBUG","Dispatch","ERROR","Event","INFO","Instrument","Level","Metadata","Span","TRACE","Value","WARN","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone","clone_span","clone_span","cmp","collect","current_span","current_span","debug","debug_span","default","dispatch","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downcast_ref","drop","drop_span","drop_span","enabled","enabled","enabled","enter","enter","eq","eq","eq","eq","error","error_span","event","event","event","event","event_enabled","event_enabled","exit","exit","field","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_static","from_str","ge","ge","gt","gt","hash","hash","in_current_span","info","info_span","instrument","instrument","into","into","into","into","is","is","is","is","is","is_event","is_span","le","le","level","level_filters","line","lt","lt","max_level_hint","module_path","name","new","new_span","new_span","none","on_register_dispatch","partial_cmp","partial_cmp","record","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","span","span","span_enabled","target","trace","trace_span","try_close","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","warn","warn_span","Collect","Interest","NoCollector","SetGlobalDefaultError","always","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_span","current_span","current_span","default","downcast_raw","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","from","from","into","into","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","sometimes","try_close","try_from","try_from","try_into","try_into","type_id","type_id","Dispatch","SetGlobalDefaultError","borrow","borrow_mut","fmt","fmt","from","get_default","into","set_global_default","try_from","try_into","type_id","Event","borrow","borrow_mut","child_of","dispatch","fields","fmt","from","into","is_contextual","is_root","metadata","new","new_child_of","parent","record","try_from","try_into","type_id","AsField","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","as_field","as_field","as_field","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone","contains","debug","display","eq","eq","eq","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Instrument","Instrumented","borrow","borrow_mut","clone","fmt","from","in_current_span","inner","inner_mut","inner_pin_mut","inner_pin_ref","instrument","into","into_future","into_inner","poll","span","span_mut","try_from","try_into","type_id","DEBUG","ERROR","INFO","LevelFilter","OFF","ParseLevelFilterError","STATIC_MAX_LEVEL","TRACE","WARN","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","current","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_level","from_str","ge","ge","gt","gt","hash","into","into","into_level","le","le","lt","lt","partial_cmp","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","as_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","child_of","clone","contains","contains","current","deref","drop","drop","enter","entered","eq","exit","field","fields","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from_non_zero_u64","from_u64","has_field","hash","id","id","in_scope","into","into","into","into","into","into_non_zero_u64","into_u64","is_contextual","is_disabled","is_empty","is_empty","is_none","is_root","metadata","metadata","new","new","new","new_disabled","new_root","new_root","none","or_current","parent","record","record","record","record_all","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","with_collector"],"q":["tracing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing::collect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing::dispatch","","","","","","","","","","","","","tracing::event","","","","","","","","","","","","","","","","","","","tracing::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing::instrument","","","","","","","","","","","","","","","","","","","","","","tracing::level_filters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trait representing the functions required to collect trace …","The “debug” level.","<code>Dispatch</code> trace data to a <code>Collect</code>.","The “error” level.","<code>Event</code>s represent single points in time where something …","The “info” level.","Attaches spans to a [<code>std::future::Future</code>].","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to enter …","The “trace” level.","A field value of an erased type.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","","Notifies the collector that a span ID has been cloned.","Notifies the collector that a span ID has been cloned.","","Collects and records trace data.","Returns a type representing this collector’s view of the …","Returns a type representing this collector’s view of the …","Constructs an event at the debug level.","Constructs a span at the debug level.","Returns the current default dispatcher","Dispatches trace events to a <code>Collect</code>.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to the <code>Collect</code> this <code>Dispatch</code> …","","<strong>This method is deprecated.</strong>","Notifies the collector that a span ID has been dropped.","Returns true if a span or event with the specified metadata…","Returns true if a span with the specified metadata would be","Checks whether a span or event is enabled based on the …","Records that a span has been entered.","Records that a span has been can_enter.","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Records that an <code>Event</code> has occurred.","Constructs a new <code>Event</code>.","Determine if an <code>Event</code> should be recorded.","Tests whether an event with the specified level and target …","Records that a span has been exited.","Records that a span has been exited.","Structured data associated with <code>Span</code>s and <code>Event</code>s.","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Dispatch</code> that forwards to the given static …","","","","","","","","Instruments this type with the current <code>Span</code>, returning an …","Constructs an event at the info level.","Constructs a span at the info level.","Attach a span to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a collector of …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Span</code>.","","","Returns the level of verbosity of the described span or …","Trace verbosity level filtering.","Returns the line number in the source code file where the …","","","Returns the highest verbosity level that this <code>Collector</code> …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Visit the construction of a new span, returning a new span …","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Invoked when this collector becomes a <code>Dispatch</code>.","","","Record a set of values on a span.","Visits this value with the given <code>Visitor</code>.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Registers a new callsite with this collector, returning …","Spans represent periods of time in which a program was …","Constructs a new span.","Tests whether a span with the specified level and target …","Returns a string describing the part of the system where …","Constructs an event at the trace level.","Constructs a span at the trace level.","Notifies the collector that a <code>span ID</code> has been dropped, …","Notifies the collector that a span ID has been dropped, …","","","","","","","","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","Trait representing the functions required to collect trace …","Indicates a <code>Collect</code>’s interest in a particular callsite.","A no-op collector.","Returned if setting the global dispatcher fails.","Returns an <code>Interest</code> indicating the collector is always …","","","","","","","Notifies the collector that a span ID has been cloned.","Returns a type representing this collector’s view of the …","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the collector is always interested in …","Returns <code>true</code> if the collector is never interested in being …","Returns <code>true</code> if the collector is sometimes interested in …","Returns the highest verbosity level that this <code>Collector</code> …","Returns an <code>Interest</code> indicating that the collector is never …","Returns a new <code>NoCollector</code> instance.","Visit the construction of a new span, returning a new span …","","Invoked when this collector becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this collector, returning …","","Returns an <code>Interest</code> indicating the collector is sometimes …","Notifies the collector that a <code>span ID</code> has been dropped, …","","","","","","","<code>Dispatch</code> trace data to a <code>Collect</code>.","Returned if setting the global dispatcher fails.","","","","","Returns the argument unchanged.","Executes a closure with a reference to the current …","Calls <code>U::from(self)</code>.","Sets this dispatch as the global default for the duration …","","","","<code>Event</code>s represent single points in time where something …","","","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","","","","Trait implemented to allow a type to be used as a field …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","Attempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …","","","","","","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","Attaches spans to a [<code>std::future::Future</code>].","A <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.","","","","","Returns the argument unchanged.","Instruments this type with the current <code>Span</code>, returning an …","Borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned reference to the wrapped type.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","","Consumes the <code>Instrumented</code>, returning the wrapped type.","","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented by.","","","","The “debug” level.","The “error” level.","The “info” level.","A filter comparable to a verbosity <code>Level</code>.","The “off” level.","Indicates that a string could not be parsed to a valid …","The statically configured maximum trace level.","The “trace” level.","The “warn” level.","","","","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","","","","","","","","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a collector describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a collector.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","","","Constructs a new <code>Span</code> as child of the given parent span, …","Returns <code>Attributes</code> describing a new child span of the …","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","Returns a handle to the span considered by the <code>Collector</code> …","","","","Enters this span, returning a guard that will exit the …","Enters this span, consuming it and returning a guard that …","","Exits this span, returning the underlying <code>Span</code>.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the set of all fields defined by this span’s …","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","Returns this span’s <code>Id</code>, if it is enabled.","Returns this span’s <code>Id</code>, if it is enabled.","Executes the given function in the context of this span.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns <code>true</code> if this span was disabled by the collector …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Returns true if the new span should be a root.","Returns this span’s <code>Metadata</code>, if it is enabled.","Returns a reference to the new span’s metadata.","Constructs a new <code>Span</code> with the given metadata and set of …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new span that is <em>completely disabled</em>.","Returns this span, if it was enabled by the current …","Returns the new span’s explicitly-specified parent, if …","Records that the field described by <code>field</code> has the value …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","Records all the fields in the provided <code>ValueSet</code>.","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","Invokes a function with a reference to this span’s ID …"],"i":[0,1,0,1,0,1,0,0,0,0,1,0,1,1,5,3,6,1,5,3,6,1,3,5,6,1,13,6,1,0,13,6,0,0,6,0,13,13,13,13,13,6,5,13,6,13,6,0,13,6,5,3,1,1,0,0,0,13,6,0,13,0,13,6,0,3,3,5,20,20,3,6,1,1,5,3,6,1,6,1,1,1,1,1,5,1,57,0,0,0,57,5,3,6,1,13,13,13,13,6,3,3,1,1,3,0,3,1,1,13,3,3,3,13,6,6,13,1,1,13,20,6,13,6,13,6,0,0,0,3,0,0,13,6,5,3,6,1,5,3,6,1,5,3,6,1,0,0,0,0,0,0,31,31,32,31,32,31,32,13,13,32,32,13,13,13,32,13,32,13,32,13,13,32,31,32,31,32,31,32,31,31,31,13,31,32,13,32,13,13,32,13,32,13,32,31,13,31,32,31,32,31,32,0,0,33,33,33,33,33,0,33,0,33,33,33,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,58,29,29,29,17,35,29,39,36,37,38,17,35,29,39,36,37,38,35,29,29,37,38,17,0,0,17,29,39,17,17,17,35,35,29,29,39,36,37,37,38,17,35,29,39,36,37,38,29,17,35,29,39,36,37,38,17,36,17,17,17,29,17,36,20,35,39,37,38,30,30,30,30,30,30,30,30,17,35,29,39,36,37,38,17,35,29,39,36,37,38,17,35,29,39,36,37,38,0,0,24,24,24,24,24,57,24,24,24,24,57,24,24,24,24,24,24,24,24,24,15,15,15,0,15,0,0,15,15,15,52,15,52,15,52,15,15,15,15,15,15,52,52,15,15,15,52,15,15,15,15,15,15,15,15,52,15,15,15,15,15,15,15,15,52,15,52,15,52,0,0,0,0,0,0,0,59,54,53,7,27,28,54,53,7,27,28,5,27,7,27,28,5,53,54,53,5,5,7,53,5,27,54,53,7,27,28,5,54,53,7,27,28,7,7,5,7,5,53,5,54,53,7,27,28,7,7,27,5,27,28,5,27,5,27,5,27,28,5,5,27,5,5,27,5,27,28,5,54,53,7,27,28,54,53,7,27,28,54,53,7,27,28,27,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[5,5],[6,6],[1,1],[7,7],[[6,7],7],[[1,1],8],0,[[],9],[6,9],0,0,[[],6],0,[10,[[12,[11]]]],[13,12],[13,12],[13,12],[13,12],[6,12],[5],[7],[[6,7]],[3,14],[[6,3],14],0,[7],[[6,7]],[[5,5],14],[[3,3],14],[[1,1],14],[[1,15],14],0,0,0,[16],[[6,16]],0,[16,14],0,[7],[[6,7]],0,[3,17],[3,[[12,[2]]]],[[5,18],19],[[20,18],[[22,[21]]]],[[20,18],[[22,[21]]]],[[3,18],[[22,[21]]]],[[6,18],[[22,[21]]]],[[1,18],[[22,[21]]]],[[1,18],[[22,[21]]]],[[]],[[]],[[]],[[]],[13,6],[2,[[22,[1,23]]]],[[1,1],14],[[1,15],14],[[1,1],14],[[1,15],14],[5],[1],[[],24],0,0,0,[5,24],[[]],[[]],[[]],[[]],[13,14],[13,14],[13,14],[13,14],[6,14],[3,14],[3,14],[[1,1],14],[[1,15],14],[3,1],0,[3,[[12,[25]]]],[[1,1],14],[[1,15],14],[[],[[12,[15]]]],[3,[[12,[2]]]],[3,2],[[2,2,1,[12,[2]],[12,[25]],[12,[2]],17,26],3],[27,7],[[6,27],7],[[],6],[6],[[1,15],[[12,[8]]]],[[1,1],[[12,[8]]]],[[7,28]],[[29,30]],[[6,7,28]],[[7,7]],[[6,7,7]],[3,31],[[6,3],31],0,0,0,[3,2],0,0,[7,14],[[6,7],14],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[],31],[[]],[[]],[[]],[[]],[31,31],[32,32],[7,7],[[],9],[32,9],[[],32],[10,[[12,[11]]]],[7],[3,14],[[32,3],14],[7],[[32,7]],[16],[[32,16]],[16,14],[7],[[32,7]],[[31,18],[[22,[21]]]],[[32,18],[[22,[21]]]],[[]],[[]],[[]],[[]],[31,14],[31,14],[31,14],[[],[[12,[15]]]],[[],31],[[],32],[27,7],[[32,27],7],[6],[[7,28]],[[32,7,28]],[[7,7]],[[32,7,7]],[3,31],[[32,3],31],[[],31],[7,14],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],0,0,[[]],[[]],[[33,18],[[22,[21]]]],[[33,18],[[22,[21]]]],[[]],[[]],[[]],[6,[[22,[33]]]],[[],22],[[],22],[[],10],0,[[]],[[]],[[[34,[[12,[7]]]],3,35]],[[3,35]],[16,36],[[16,18],[[22,[21]]]],[[]],[[]],[16,14],[16,14],[16,3],[[3,35],16],[[[34,[[12,[7]]]],3,35],16],[16,[[12,[7]]]],[[16,30]],[[],22],[[],22],[[],10],0,0,0,0,0,0,0,0,0,0,[3,[[12,[29]]]],[[29,3],[[12,[29]]]],[[29,3],[[12,[29]]]],[29,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,4],[29,4],[29,29],[37,37],[38,38],[[17,29],14],[[],38],[[],37],[[17,17],14],[[29,29],14],[[39,39],14],[17,[[12,[29]]]],[[17,18],[[22,[21]]]],[[17,18],[[22,[21]]]],[[35,18],[[22,[21]]]],[[35,18],[[22,[21]]]],[[29,18],[[22,[21]]]],[[29,18],[[22,[21]]]],[[39,18],[[22,[21]]]],[[36,18],[[22,[21]]]],[[37,18],[[22,[21]]]],[[37,18],[[22,[21]]]],[[38,18],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],[[]],[17,14],[17,36],[17,40],[29,2],[4,17],[36,[[12,[29]]]],[[29,30]],[[35,30]],[[39,29,30]],[[37,29,30]],[[38,29,30]],[[29,14]],[[29,41]],[[29,42]],[[29,43]],[[29,44]],[[29,2]],[[29,45]],[[29,46]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[]],[[]],[[[24,[47]]],[[24,[47]]]],[[[24,[41]],18],19],[[]],[[],24],[24],[24],[[[48,[24]]],48],[[[48,[24]]],48],[5,24],[[]],[[]],[24],[[[48,[[24,[49]]]],50],51],[24,5],[24,5],[[],22],[[],22],[[],10],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[15,15],[52,52],[[15,15],8],[[],15],[[15,1],14],[[15,15],14],[[15,18],[[22,[21]]]],[[15,18],[[22,[21]]]],[[52,18],[[22,[21]]]],[[52,18],[[22,[21]]]],[[]],[[[12,[1]]],15],[1,15],[[]],[1,15],[2,[[22,[15]]]],[[15,15],14],[[15,1],14],[[15,1],14],[[15,15],14],[15],[[]],[[]],[15,[[12,[1]]]],[[15,15],14],[[15,1],14],[[15,1],14],[[15,15],14],[[15,1],[[12,[8]]]],[[15,15],[[12,[8]]]],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],0,0,0,0,0,0,0,[[],[[12,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[34,[[12,[7]]]],3,35],5],[[7,3,35],27],[7,7],[[27,29],14],[[28,29],14],[[],5],[53,5],[54],[53],[5,54],[5,53],[[7,7],14],[53,5],[5,[[12,[29]]]],[27,17],[[54,18],19],[[53,18],19],[[7,18],[[22,[21]]]],[[27,18],[[22,[21]]]],[[28,18],[[22,[21]]]],[[5,[34,[[12,[7]]]]],5],[[]],[[]],[[]],[[]],[[]],[55,7],[46,7],[5,14],[7],[5,[[12,[7]]]],[53,[[12,[7]]]],[[5,56]],[[]],[[]],[[]],[[]],[[]],[7,55],[7,46],[27,14],[5,14],[27,14],[28,14],[5,14],[27,14],[5,[[12,[3]]]],[27,3],[[3,35],5],[[3,35],27],[35,28],[3,5],[[3,35],5],[[3,35],27],[[],5],[5,5],[27,[[12,[7]]]],[5,5],[[27,30]],[[28,30]],[[5,35],5],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],10],[[],10],[[],10],[[],10],[[],10],[27,35],[[5,56],12]],"p":[[3,"Level"],[15,"str"],[3,"Metadata"],[3,"Identifier"],[3,"Span"],[3,"Dispatch"],[3,"Id"],[4,"Ordering"],[3,"Current"],[3,"TypeId"],[3,"NonNull"],[4,"Option"],[8,"Collect"],[15,"bool"],[3,"LevelFilter"],[3,"Event"],[3,"FieldSet"],[3,"Formatter"],[6,"Result"],[8,"Value"],[3,"Error"],[4,"Result"],[3,"ParseLevelError"],[3,"Instrumented"],[15,"u32"],[3,"Kind"],[3,"Attributes"],[3,"Record"],[3,"Field"],[8,"Visit"],[3,"Interest"],[3,"NoCollector"],[3,"SetGlobalDefaultError"],[8,"Into"],[3,"ValueSet"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"Empty"],[15,"usize"],[8,"Debug"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"u128"],[15,"u64"],[8,"Clone"],[3,"Pin"],[8,"Future"],[3,"Context"],[4,"Poll"],[3,"ParseLevelFilterError"],[3,"EnteredSpan"],[3,"Entered"],[3,"NonZeroU64"],[8,"FnOnce"],[8,"Instrument"],[8,"AsField"],[8,"AsId"]]},\
"tracing_core":{"doc":"Core primitives for <code>tracing</code>.","t":[8,8,3,3,3,2,2,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,10,11,0,11,11,10,10,11,11,11,11,11,11,0,10,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,14,10,11,11,11,11,11,10,10,11,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,5,10,11,11,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,8,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,3,3,3,3,18,3,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Callsite","Collect","Dispatch","Event","Field","Interest","Kind","Level","LevelFilter","Metadata","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone","clone","clone_span","cmp","cmp","collect","current_span","default","dispatch","downcast_raw","drop_span","enabled","enter","eq","eq","eq","eq","eq","eq","event","event","event_enabled","exit","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","identify_callsite","into","into","into","into","into","into","le","le","le","le","lt","lt","lt","lt","max_level_hint","metadata","metadata","metadata","new_span","on_register_dispatch","partial_cmp","partial_cmp","partial_cmp","partial_cmp","record","record_follows_from","register_callsite","set_interest","span","try_close","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Callsite","Identifier","Registration","borrow","borrow","borrow_mut","borrow_mut","clone","eq","fmt","fmt","from","from","hash","into","into","metadata","new","rebuild_interest_cache","register","set_interest","try_from","try_from","try_into","try_into","type_id","type_id","Collect","Interest","NoCollector","always","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_span","current_span","current_span","default","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","from","from","into","into","is","is","is","is","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","sometimes","try_close","try_from","try_from","try_into","try_into","type_id","type_id","Dispatch","SetGlobalDefaultError","borrow","borrow_mut","clone_span","current_span","downcast_ref","drop_span","enabled","enter","event","exit","fmt","fmt","from","from_static","get_default","into","is","new_span","none","record","record_follows_from","register_callsite","set_global_default","try_close","try_from","try_into","type_id","Event","child_of","dispatch","fields","is_contextual","is_root","metadata","new","new_child_of","parent","record","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","contains","debug","display","eq","eq","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","DEBUG","DEBUG","ERROR","ERROR","EVENT","HINT","INFO","INFO","Kind","Level","LevelFilter","Metadata","OFF","ParseLevelError","ParseLevelFilterError","SPAN","TRACE","TRACE","WARN","WARN","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","current","eq","fields","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from_level","hint","into","into","into","into_level","is_event","is_event","is_hint","is_span","is_span","level","line","module_path","name","new","target","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Attributes","Current","Id","Record","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","clone","contains","contains","eq","fields","fmt","fmt","fmt","fmt","from","from","from","from","from_non_zero_u64","from_u64","hash","id","into","into","into","into","into_inner","into_non_zero_u64","into_u64","is_contextual","is_empty","is_empty","is_known","is_root","metadata","metadata","new","new","new","new_root","none","parent","record","record","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unknown","values"],"q":["tracing_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::callsite","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::collect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::dispatch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::event","","","","","","","","","","","tracing_core::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trait implemented by callsites.","Trait representing the functions required to collect trace …","<code>Dispatch</code> trace data to a <code>Collect</code>.","<code>Event</code>s represent single points in time where something …","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","","","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","","","","","","","","","","","","","","Callsites represent the source locations from which spans …","","","","","Notifies the collector that a span ID has been cloned.","","","Collectors collect and record trace data.","Returns a type representing this collector’s view of the …","Returns the current default dispatcher","Dispatches trace events to <code>Collect</code>s.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","Records that a span has been entered.","","","","","","","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","Span and <code>Event</code> key-value data.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Statically constructs an <code>Identifier</code> for the provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the highest verbosity level that this <code>Collector</code> …","Metadata describing trace data.","Returns the metadata associated with the callsite.","Statically constructs new span metadata.","Visit the construction of a new span, returning a new span …","Invoked when this collector becomes a <code>Dispatch</code>.","","","","","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Sets the <code>Interest</code> for this callsite.","Spans represent periods of time in the execution of a …","Notifies the collector that a <code>span ID</code> has been dropped, …","","","","","","","","","","","","","","","","","","","Trait implemented by callsites.","Uniquely identifies a <code>Callsite</code>","A registration with the callsite registry.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the metadata associated with the callsite.","Construct a new <code>Registration</code> from some …","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Sets the <code>Interest</code> for this callsite.","","","","","","","Trait representing the functions required to collect trace …","Indicates a <code>Collect</code>’s interest in a particular callsite.","A no-op collector.","Returns an <code>Interest</code> indicating the collector is always …","","","","","","","Notifies the collector that a span ID has been cloned.","Returns a type representing this collector’s view of the …","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if the collector is always interested in …","Returns <code>true</code> if the collector is never interested in being …","Returns <code>true</code> if the collector is sometimes interested in …","Returns the highest verbosity level that this <code>Collector</code> …","Returns an <code>Interest</code> indicating that the collector is never …","Returns a new <code>NoCollector</code> instance.","Visit the construction of a new span, returning a new span …","","Invoked when this collector becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this collector, returning …","","Returns an <code>Interest</code> indicating the collector is sometimes …","Notifies the collector that a <code>span ID</code> has been dropped, …","","","","","","","<code>Dispatch</code> trace data to a <code>Collect</code>.","Returned if setting the global dispatcher fails.","","","Notifies the collector that a span ID has been cloned.","Returns a type representing this collector’s view of the …","Returns some reference to the <code>Collect</code> this <code>Dispatch</code> …","Notifies the collector that a span ID has been dropped.","Returns true if a span with the specified metadata would be","Records that a span has been can_enter.","Records that an <code>Event</code> has occurred.","Records that a span has been exited.","","","Returns the argument unchanged.","Returns a <code>Dispatch</code> that forwards to the given static …","Executes a closure with a reference to the current …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a collector of …","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Sets this dispatch as the global default for the duration …","Notifies the collector that a span ID has been dropped, …","","","","<code>Event</code>s represent single points in time where something …","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","The “debug” level.","The “debug” level.","The “error” level.","The “error” level.","<code>Event</code> callsite","<code>enabled!</code> callsite. <code>Collect</code>s can assume this <code>Kind</code> means …","The “info” level.","The “info” level.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","The “off” level.","Returned if parsing a <code>Level</code> fails.","Indicates that a string could not be parsed to a valid …","<code>Span</code> callsite","The “trace” level.","The “trace” level.","The “warn” level.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","Sets that this <code>Kind</code> is a hint.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Event</code>","Return true if the callsite kind is <code>Hint</code>","Return true if the callsite kind is <code>Span</code>.","Return true if the callsite kind is <code>Span</code>","Returns the level of verbosity of the described span or …","Returns the line number in the source code file where the …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Returns a string describing the part of the system where …","","","","","","","","","","Attributes provided to a collector describing a new span …","Indicates what the collector considers the “current” …","Identifies a span within the context of a collector.","A set of fields recorded by a span.","","","","","","","","","Returns <code>Attributes</code> describing a new child span of the …","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","Returns the set of all fields defined by this span’s …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","","Borrows the <code>Id</code> of the current span, if one exists and is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if the collector that constructed this <code>Current</code>…","Returns true if the new span should be a root.","Returns a reference to the new span’s metadata.","Borrows the <code>Metadata</code> of the current span, if one exists …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new <code>Current</code> that indicates the current …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new <code>Current</code> that indicates the current …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","","","","","","","","","","","","","Constructs a new <code>Current</code> that indicates the collector does …","Returns a reference to a <code>ValueSet</code> containing any values …"],"i":[0,0,0,0,0,0,0,0,0,0,1,12,3,14,1,4,5,12,3,14,1,4,5,0,3,1,4,5,25,4,5,0,25,3,0,25,25,25,25,12,1,4,4,5,5,0,25,25,25,0,12,3,14,1,1,4,4,5,5,12,3,14,1,4,5,5,5,4,5,4,4,5,5,4,4,5,5,1,4,5,0,12,3,14,1,4,5,4,4,5,5,4,4,5,5,25,0,49,0,25,25,4,4,5,5,25,25,25,49,0,25,12,3,14,1,4,5,12,3,14,1,4,5,12,3,14,1,4,5,0,0,0,23,22,23,22,22,22,23,22,23,22,22,23,22,49,23,0,0,49,23,22,23,22,23,22,0,0,0,21,21,24,21,24,21,24,25,25,24,24,25,25,25,25,25,25,25,24,25,24,25,24,25,25,24,21,24,21,24,21,24,25,25,25,25,21,21,21,25,21,24,25,24,25,25,24,25,24,25,24,21,25,21,24,21,24,21,24,0,0,26,26,3,3,3,3,3,3,3,3,26,26,26,3,0,26,3,3,3,3,3,3,0,3,26,26,26,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,36,28,37,29,33,35,36,28,37,29,33,35,28,1,33,35,36,0,0,36,37,36,36,36,28,28,38,38,37,29,33,33,35,36,28,37,29,33,35,36,28,37,29,33,35,36,29,36,36,36,1,36,29,38,28,37,33,35,30,30,30,30,30,30,30,30,36,28,37,29,33,35,36,28,37,29,33,35,36,28,37,29,33,35,4,5,4,5,45,45,4,5,0,0,0,0,5,0,0,45,4,5,4,5,4,45,46,17,45,46,17,12,45,46,5,45,12,12,45,46,46,17,17,45,46,17,5,45,45,46,17,5,12,45,45,12,45,12,12,12,12,12,12,45,46,17,45,46,17,45,46,17,0,0,0,0,6,19,20,8,6,19,20,8,19,6,19,20,6,19,6,19,20,8,6,19,20,8,6,6,6,8,6,19,20,8,8,6,6,19,19,20,8,19,19,8,19,20,8,19,8,19,19,20,6,19,20,8,6,19,20,8,6,19,20,8,8,19],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,3],[1,1],[4,4],[5,5],[6,6],[[4,4],7],[[5,5],7],0,[[],8],[[],3],0,[9,[[11,[10]]]],[6],[12,13],[6],[[12,12],13],[[1,1],13],[[4,4],13],[[4,5],13],[[5,4],13],[[5,5],13],0,[14],[14,13],[6],0,[[12,15],16],[[3,15],16],[[14,15],16],[[1,15],16],[[1,15],16],[[4,15],16],[[4,15],16],[[5,15],16],[[5,15],16],[[]],[[]],[[]],[[]],[[]],[[[11,[4]]],5],[[]],[4,5],[2,[[18,[4,17]]]],[2,[[18,[5]]]],[[4,5],13],[[4,4],13],[[5,4],13],[[5,5],13],[[4,5],13],[[4,4],13],[[5,4],13],[[5,5],13],[1],[4],[5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],13],[[4,5],13],[[5,5],13],[[5,4],13],[[4,5],13],[[4,4],13],[[5,5],13],[[5,4],13],[[],[[11,[5]]]],0,[[],12],0,[19,6],[3],[[4,5],[[11,[7]]]],[[4,4],[[11,[7]]]],[[5,5],[[11,[7]]]],[[5,4],[[11,[7]]]],[[6,20]],[[6,6]],[12,21],[21],0,[6,13],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[]],[[]],[[]],[[]],[22,22],[[22,22],13],[[23,15],16],[[22,15],16],[[]],[[]],[22],[[]],[[]],[[],12],[[],23],[[]],[23],[21],[[],18],[[],18],[[],18],[[],18],[[],9],[[],9],0,0,0,[[],21],[[]],[[]],[[]],[[]],[21,21],[24,24],[6,6],[[],8],[24,8],[[],24],[9,[[11,[10]]]],[25,11],[25,11],[25,11],[25,11],[6],[12,13],[[24,12],13],[6],[[24,6]],[14],[[24,14]],[14,13],[6],[[24,6]],[[21,15],16],[[24,15],16],[[]],[[]],[[]],[[]],[25,13],[25,13],[25,13],[25,13],[21,13],[21,13],[21,13],[[],[[11,[5]]]],[[],21],[[],24],[19,6],[[24,19],6],[3],[[6,20]],[[24,6,20]],[[6,6]],[[24,6,6]],[12,21],[[24,12],21],[[],21],[6,13],[[],18],[[],18],[[],18],[[],18],[[],9],[[],9],0,0,[[]],[[]],[[3,6],6],[3,8],[3,11],[[3,6]],[[3,12],13],[[3,6]],[[3,14]],[[3,6]],[[26,15],16],[[26,15],16],[[]],[25,3],[[]],[[]],[3,13],[[3,19],6],[[],3],[[3,6,20]],[[3,6,6]],[[3,12],21],[3,[[18,[26]]]],[[3,6],13],[[],18],[[],18],[[],9],0,[[[27,[[11,[6]]]],12,28]],[[12,28]],[14,29],[14,13],[14,13],[14,12],[[12,28],14],[[[27,[[11,[6]]]],12,28],14],[14,[[11,[6]]]],[[14,30]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,22],[1,22],[[[33,[[0,[31,32]]]]],[[33,[[0,[31,32]]]]]],[[[35,[[0,[31,34]]]]],[[35,[[0,[31,34]]]]]],[[36,1],13],[[],35],[[],33],[[36,36],13],[[37,37],13],[36,[[11,[1]]]],[[36,15],16],[[36,15],16],[[28,15],16],[[28,15],16],[[38,15],16],[[38,15],16],[[37,15],16],[[29,15],16],[[[33,[32]],15],16],[[[33,[32]],15],16],[[[35,[34]],15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36],[[]],[36,13],[36,29],[36,39],[1,2],[22,36],[29,[[11,[1]]]],[[1,30]],[[28,30]],[[37,1,30]],[[33,1,30]],[[[35,[34]],1,30]],[[1,13]],[[1,34]],[[1,40]],[[1,41]],[[1,42]],[[1,2]],[[1,43]],[[1,44]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,2],[[]],[[]],[[]],[[]],[[]],[[]],[12,22],[45,45],[46,46],[[],5],[[45,45],13],[12,36],[12,[[11,[2]]]],[[45,15],16],[[46,15],16],[[46,15],16],[[17,15],16],[[17,15],16],[[]],[[]],[[]],[4,5],[45,45],[[]],[[]],[[]],[5,[[11,[4]]]],[12,13],[45,13],[45,13],[12,13],[45,13],[12,4],[12,[[11,[47]]]],[12,[[11,[2]]]],[12,2],[[2,2,4,[11,[2]],[11,[47]],[11,[2]],36,45],12],[12,2],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],9],[[],9],[[],9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,12,28],19],[6,6],[[19,1],13],[[20,1],13],[[6,6],13],[19,36],[[6,15],16],[[19,15],16],[[20,15],16],[[8,15],16],[[]],[[]],[[]],[[]],[48,6],[44,6],[6],[8,[[11,[6]]]],[[]],[[]],[[]],[[]],[8,11],[6,48],[6,44],[19,13],[19,13],[20,13],[8,13],[19,13],[19,12],[8,[[11,[12]]]],[[12,28],19],[28,20],[[6,12],8],[[12,28],19],[[],8],[19,[[11,[6]]]],[[19,30]],[[20,30]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],9],[[],9],[[],9],[[],9],[[],8],[19,28]],"p":[[3,"Field"],[15,"str"],[3,"Dispatch"],[3,"Level"],[3,"LevelFilter"],[3,"Id"],[4,"Ordering"],[3,"Current"],[3,"TypeId"],[3,"NonNull"],[4,"Option"],[3,"Metadata"],[15,"bool"],[3,"Event"],[3,"Formatter"],[6,"Result"],[3,"ParseLevelError"],[4,"Result"],[3,"Attributes"],[3,"Record"],[3,"Interest"],[3,"Identifier"],[3,"Registration"],[3,"NoCollector"],[8,"Collect"],[3,"SetGlobalDefaultError"],[8,"Into"],[3,"ValueSet"],[3,"Iter"],[8,"Visit"],[8,"Clone"],[8,"Display"],[3,"DisplayValue"],[8,"Debug"],[3,"DebugValue"],[3,"FieldSet"],[3,"Empty"],[8,"Value"],[15,"usize"],[15,"f64"],[15,"i128"],[15,"i64"],[15,"u128"],[15,"u64"],[3,"Kind"],[3,"ParseLevelFilterError"],[15,"u32"],[3,"NonZeroU64"],[8,"Callsite"]]},\
"trap_handler":{"doc":"","t":[17,17,17,17,17,5,5,5,5,5,5,14,5,5],"n":["MAIN_VALUE","MAX_RECURSION_LEVEL","TRAP_HANDLER_VALUE","TRAP_STACK_PAGES","TRASH_VALUE","check_main_signature","fill_block","generate_page_fault","log","main","map_pages","my_assert","recursive_trap_handler","simple_trap_handler"],"q":["trap_handler","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,[[]],[[[2,[1]],3]],[[],4],[[5,3]],[[]],[[3,3],[[2,[1]]]],0,[6],[6]],"p":[[6,"Page"],[3,"Block"],[15,"usize"],[15,"never"],[15,"str"],[3,"TrapInfo"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"p":[[15,"char"],[15,"bool"]]},\
"volatile":{"doc":"Provides the wrapper type <code>Volatile</code>, which wraps a …","t":[3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Volatile","access","as_mut_slice","as_slice","borrow","borrow_mut","clone","extract_inner","fmt","fmt","from","index","index_mut","into","map","map_mut","new","new_read_only","new_write_only","read","read_only","try_from","try_into","type_id","update","write","write_only","ReadOnly","ReadWrite","Readable","Writable","WriteOnly","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","fmt","fmt","fmt","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["volatile","","","","","","","","","","","","","","","","","","","","","","","","","","","volatile::access","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wraps a reference to make accesses to the referenced value …","Allows creating read-only and write-only <code>Volatile</code> values.","Converts a mutable array reference to a mutable slice.","Converts an array reference to a shared slice.","","","","Extracts the inner value stored in the wrapper type.","","","Returns the argument unchanged.","Applies the index operation on the wrapped slice.","Applies the mutable index operation on the wrapped slice.","Calls <code>U::from(self)</code>.","Constructs a new <code>Volatile</code> reference by mapping the wrapped …","Constructs a new mutable <code>Volatile</code> reference by mapping the …","Constructs a new volatile instance wrapping the given …","Constructs a new read-only volatile instance wrapping the …","Constructs a new write-only volatile instance wrapping the …","Performs a volatile read of the contained value.","Restricts access permissions to read-only.","","","","Updates the contained value using the given closure and …","Performs a volatile write, setting the contained value to …","Restricts access permissions to write-only.","Zero-sized marker type for allowing only read access.","Zero-sized marker type for allowing both read and write …","Helper trait that is implemented by <code>ReadWrite</code> and <code>ReadOnly</code>.","Helper trait that is implemented by <code>ReadWrite</code> and <code>WriteOnly</code>…","Zero-sized marker type for allowing only write access.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,9,6,5,9,6,5,9,6,5,9,6,5,9,6,5,9,6,5,9,6,5,9,6,5,9,6,5],"f":[0,0,[1,1],[1,1],[[]],[[]],[[[1,[2,2]]],[[1,[2,2]]]],[1],[[1,3],4],[[[1,[5]],3],4],[[]],[1,1],[1,1],[[]],[1,1],[1,1],[[],1],[[],[[1,[6]]]],[[],[[1,[5]]]],[1],[1,[[1,[6]]]],[[],7],[[],7],[[],8],[1],[1],[1,[[1,[5]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[6,6],[5,5],[[9,3],4],[[6,3],4],[[5,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8]],"p":[[3,"Volatile"],[8,"Clone"],[3,"Formatter"],[6,"Result"],[3,"WriteOnly"],[3,"ReadOnly"],[4,"Result"],[3,"TypeId"],[3,"ReadWrite"]]},\
"x86":{"doc":"","t":[4,13,13,13,13,0,0,0,0,11,11,11,0,0,0,0,0,11,0,11,11,14,14,5,14,11,0,0,0,0,5,0,14,0,0,0,11,11,11,0,13,13,8,4,13,13,4,4,4,4,13,13,3,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,0,10,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,0,11,11,11,0,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,12,12,12,18,18,17,17,17,18,18,18,18,3,17,3,18,18,17,18,18,3,18,18,6,3,3,18,6,3,3,18,18,3,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,11,12,12,12,11,12,12,12,12,11,11,11,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,18,18,18,18,18,17,17,17,18,18,18,18,18,18,17,3,3,17,3,17,17,17,18,18,18,18,18,17,18,18,3,18,18,18,18,18,6,3,3,6,3,3,6,3,3,17,6,3,3,18,18,6,3,3,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,2,11,11,11,11,11,11,11,11,3,18,11,11,11,11,11,11,2,2,11,5,5,5,11,11,11,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,13,3,4,13,13,13,13,13,17,13,3,3,4,3,3,4,13,3,3,13,3,3,4,13,13,13,3,13,13,13,3,3,3,4,4,3,3,3,3,3,3,13,13,13,13,4,3,13,13,13,13,13,3,3,3,3,3,13,3,3,13,3,13,13,13,13,13,3,3,13,13,3,3,3,3,3,13,13,13,3,3,13,13,13,3,4,3,3,3,3,13,3,13,3,13,4,3,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,12,18,18,18,18,18,17,18,18,4,4,4,13,13,13,13,13,13,13,13,13,13,3,3,18,18,18,13,13,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,5,5,5,12,5,11,11,5,5,11,11,11,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,7,17,18,17,17,3,17,17,17,18,17,18,3,18,17,17,17,18,17,18,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,8,8,10,10,5,5,5,5,5,5,5,5,8,13,13,13,4,4,3,3,13,13,13,13,13,13,13,13,8,13,13,13,13,13,8,18,18,18,18,18,13,13,13,13,13,13,13,13,8,3,4,4,18,18,13,13,13,8,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,10,11,11,11,11,11,5,11,11,11,11,11,11,5,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,2,5,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,5,2,5,5,5,5,5,6,4,13,13,11,11,11,11,11,11,11,11,0,0,0,0,0,18,17,17,18,18,18,18,18,17,17,18,18,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,18,3,3,18,18,18,18,18,18,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,18,18,18,17,17,18,18,17,17,17,17,17,18,17,17,17,17,3,3,18,18,18,18,18,18,18,18,18,17,17,17,18,3,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,18,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["Ring","Ring0","Ring1","Ring2","Ring3","apic","bits16","bits32","bits64","borrow","borrow_mut","clone","controlregs","cpuid","current","debugregs","dtables","eq","fence","fmt","from","fs_deref","gs_deref","halt","int","into","io","irq","msr","random","rdpid","segmentation","syscall","task","time","tlb","try_from","try_into","type_id","vmx","AllExcludingSelf","AllIncludingSelf","ApicControl","ApicId","Assert","Deassert","DeliveryMode","DeliveryStatus","DestinationMode","DestinationShorthand","Edge","Fixed","Icr","Idle","Init","Level","Level","Logical","LowestPriority","Myself","NMI","NoShorthand","Physical","SMI","SendPending","StartUp","TriggerMode","X2Apic","XApic","_Reserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp","clone","eoi","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_x2apic","for_xapic","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","ioapic","ipi_init","ipi_init_deassert","ipi_startup","logical_id","lower","send_ipi","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_enable","tsc_set","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","version","x2apic","x2apic_logical_cluster_address","x2apic_logical_cluster_id","x2apic_logical_id","xapic","0","0","IoApic","borrow","borrow_mut","disable_all","enable","from","id","into","new","supported_interrupts","try_from","try_into","type_id","version","X2APIC","attach","borrow","borrow_mut","bsp","default","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","send_self_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","XAPIC","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_ID","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_LDR","XAPIC_LVT_CMCI","XAPIC_LVT_ERROR","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_PMI","XAPIC_LVT_THERMAL","XAPIC_LVT_TIMER","XAPIC_PPR","XAPIC_SVR","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC_TIMER_INIT_COUNT","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_TPR","XAPIC_VERSION","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","segmentation","eflags","paging","segmentation","task","EFlags","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","remove","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","0","0","0","0","0","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","G","G","IOAddr","LARGE_PAGE_SIZE","LargePage","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PD","PDEntry","PDFlags","PS","PT","PTEntry","PTFlags","PWT","PWT","Page","RW","RW","US","US","VAddr","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_u32","as_u32","as_u32","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_u32","from_usize","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_global","is_global","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","set","set","shr","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","zero","zero","zero","TaskStateSegment","borrow","borrow_mut","clone","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","fmt","from","fs","gs","into","iobp_offset","ldtr","link","new","ss","ss0","ss1","ss2","try_from","try_into","type_id","paging","registers","rflags","segmentation","sgx","syscall","task","vmx","0","0","0","0","0","0","0","0","A","A","A","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","D","G","G","G","HUGE_PAGE_SIZE","HugePage","IOAddr","LARGE_PAGE_SIZE","LargePage","MAXPHYADDR","MAXVADDR","MAXVADDR_BITS","P","P","P","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PCD","PCD","PCD","PD","PDEntry","PDFlags","PDPT","PDPTEntry","PDPTFlags","PML4","PML4Entry","PML4Flags","PML4_SLOT_SIZE","PML5","PML5Entry","PML5Flags","PS","PS","PT","PTEntry","PTFlags","PWT","PWT","PWT","PWT","PWT","Page","RW","RW","RW","RW","RW","US","US","US","US","US","VAddr","XD","XD","XD","XD","XD","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","address","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","all","all","all","as_mut_ptr","as_ptr","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_u64","from_usize","hash","hash","hash","hash","hash","hash","hash","hash","huge_page_offset","huge_page_offset","huge_page_offset","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_accessed","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_all","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_empty","is_empty","is_global","is_global","is_huge_page_aligned","is_huge_page_aligned","is_huge_page_aligned","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_present","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_writeable","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","new","new","new","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pdpt_index","pml4_index","pml5_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","remove","remove","remove","set","set","set","set","set","shr","shr","shr","shr","shr","split","split","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","zero","zero","zero","rbp","rip","rsp","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","RFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","from_raw","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","read","remove","set","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","Descriptor64","NULL","borrow","borrow_mut","clone","default","fmt","from","fs_deref","gs_deref","into","load_cs","rdfsbase","rdgsbase","set_base_limit","set_ist","set_selector_offset","swapgs","try_from","try_into","type_id","wrfsbase","wrgsbase","encls_create","encls_eadd","encls_eaug","encls_eblock","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","TaskStateSegment","borrow","borrow_mut","clone","default","fmt","from","into","iomap_base","ist","new","reserved","reserved2","reserved3","reserved4","rsp","set_ist","set_rsp","try_from","try_into","type_id","vmclear","vmlaunch","vmptrld","vmptrst","vmread","vmresume","vmwrite","vmxoff","vmxon","CR0_ALIGNMENT_MASK","CR0_CACHE_DISABLE","CR0_EMULATE_COPROCESSOR","CR0_ENABLE_PAGING","CR0_EXTENSION_TYPE","CR0_MONITOR_COPROCESSOR","CR0_NOT_WRITE_THROUGH","CR0_NUMERIC_ERROR","CR0_PROTECTED_MODE","CR0_TASK_SWITCHED","CR0_WRITE_PROTECT","CR4_DEBUGGING_EXTENSIONS","CR4_ENABLE_FSGSBASE","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_LA57","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PAE","CR4_ENABLE_PCID","CR4_ENABLE_PPMC","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_PSE","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_SMX","CR4_ENABLE_SSE","CR4_ENABLE_UMIP","CR4_ENABLE_VME","CR4_ENABLE_VMX","CR4_TIME_STAMP_DISABLE","CR4_UNMASKED_SSE","CR4_VIRTUAL_INTERRUPTS","Cr0","Cr4","XCR0_AVX_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_FPU_MMX_STATE","XCR0_HI16_ZMM_STATE","XCR0_OPMASK_STATE","XCR0_PKRU_STATE","XCR0_SSE_STATE","XCR0_ZMM_HI256_STATE","Xcr0","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","union","xcr0","xcr0_write","ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_bmi1","has_bmi2","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vte","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","0","0","0","1","2","0","cpuid_count","0","B0","B1","B2","B3","BD","BREAKPOINT_REGS","BS","BT","BreakCondition","BreakSize","Breakpoint","Bytes1","Bytes2","Bytes4","Bytes8","DataReadsWrites","DataWrites","Dr0","Dr1","Dr2","Dr3","Dr6","Dr7","EMPTY","GD_BIT","GE_BIT","Instructions","IoReadsWrites","LE_BIT","RTM","RTM_BIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","complement","configure","configure_bp","contains","default","difference","disable_bp","disable_global","disable_local","dr","dr0","dr0_write","dr1","dr1_write","dr2","dr2_write","dr3","dr3_write","dr6","dr6_write","dr7","dr7_write","empty","enable_bp","enable_exact_global_bp","enable_exact_local_bp","enable_general_detect","enable_global","enable_local","enable_rtm","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","write","DescriptorTablePointer","base","borrow","borrow_mut","default","fmt","from","into","ldtr","lgdt","lidt","limit","load_ldtr","new","new_from_slice","sgdt","sidt","try_from","try_into","type_id","lfence","mfence","sfence","inb","inl","inw","outb","outl","outw","ALIGNMENT_CHECK_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","BREAKPOINT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","DEBUG_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DIVIDE_ERROR_VECTOR","DOUBLE_FAULT_VECTOR","EXCEPTIONS","GENERAL_PROTECTION_FAULT_VECTOR","ID","INVALID_OPCODE_VECTOR","INVALID_TSS_VECTOR","InterruptDescription","MACHINE_CHECK_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","OVERFLOW_VECTOR","P","PAGE_FAULT_VECTOR","PK","PageFaultError","RSVD","SEGMENT_NOT_PRESENT_VECTOR","SIMD_FLOATING_POINT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","US","VIRTUALIZATION_VECTOR","WR","X87_FPU_VECTOR","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","description","difference","disable","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","irqtype","is_all","is_empty","mnemonic","not","partial_cmp","remove","set","source","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vector","APIC_BASE","BIOS_UPDT_TRIG","DEBUGCTLMSR","EBL_CR_POWERON","IA32_APERF","IA32_APIC_BASE","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","IA32_BIOS_SIGN_ID","IA32_BIOS_UPDT_TRIG","IA32_CLOCK_MODULATION","IA32_CPU_DCA_CAP","IA32_CSTAR","IA32_DCA_0_CAP","IA32_DEBUGCTL","IA32_DS_AREA","IA32_EFER","IA32_ENERGY_PERF_BIAS","IA32_FEATURE_CONTROL","IA32_FIXED_CTR0","IA32_FIXED_CTR1","IA32_FIXED_CTR2","IA32_FIXED_CTR_CTRL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_CTL","IA32_MC0_CTL2","IA32_MC0_MISC","IA32_MC0_STATUS","IA32_MC10_ADDR1","IA32_MC10_CTL","IA32_MC10_CTL2","IA32_MC10_MISC","IA32_MC10_STATUS","IA32_MC11_ADDR1","IA32_MC11_CTL","IA32_MC11_CTL2","IA32_MC11_MISC","IA32_MC11_STATUS","IA32_MC12_ADDR1","IA32_MC12_CTL","IA32_MC12_CTL2","IA32_MC12_MISC","IA32_MC12_STATUS","IA32_MC13_ADDR1","IA32_MC13_CTL","IA32_MC13_CTL2","IA32_MC13_MISC","IA32_MC13_STATUS","IA32_MC14_ADDR1","IA32_MC14_CTL","IA32_MC14_CTL2","IA32_MC14_MISC","IA32_MC14_STATUS","IA32_MC15_ADDR1","IA32_MC15_CTL","IA32_MC15_CTL2","IA32_MC15_MISC","IA32_MC15_STATUS","IA32_MC16_ADDR1","IA32_MC16_CTL","IA32_MC16_CTL2","IA32_MC16_MISC","IA32_MC16_STATUS","IA32_MC17_ADDR1","IA32_MC17_CTL","IA32_MC17_CTL2","IA32_MC17_MISC","IA32_MC17_STATUS","IA32_MC18_ADDR1","IA32_MC18_CTL","IA32_MC18_CTL2","IA32_MC18_MISC","IA32_MC18_STATUS","IA32_MC19_ADDR1","IA32_MC19_CTL","IA32_MC19_CTL2","IA32_MC19_MISC","IA32_MC19_STATUS","IA32_MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_CTL","IA32_MC1_CTL2","IA32_MC1_MISC","IA32_MC1_STATUS","IA32_MC20_ADDR1","IA32_MC20_CTL","IA32_MC20_CTL2","IA32_MC20_MISC","IA32_MC20_STATUS","IA32_MC21_ADDR1","IA32_MC21_CTL","IA32_MC21_CTL2","IA32_MC21_MISC","IA32_MC21_STATUS","IA32_MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_CTL","IA32_MC2_CTL2","IA32_MC2_MISC","IA32_MC2_STATUS","IA32_MC3_ADDR","IA32_MC3_ADDR1","IA32_MC3_CTL","IA32_MC3_CTL2","IA32_MC3_MISC","IA32_MC3_STATUS","IA32_MC4_ADDR","IA32_MC4_ADDR1","IA32_MC4_CTL","IA32_MC4_CTL2","IA32_MC4_MISC","IA32_MC4_STATUS","IA32_MC5_ADDR1","IA32_MC5_CTL","IA32_MC5_CTL2","IA32_MC5_MISC","IA32_MC5_STATUS","IA32_MC6_ADDR1","IA32_MC6_CTL","IA32_MC6_CTL2","IA32_MC6_MISC","IA32_MC6_STATUS","IA32_MC7_ADDR1","IA32_MC7_CTL","IA32_MC7_CTL2","IA32_MC7_MISC","IA32_MC7_STATUS","IA32_MC8_ADDR1","IA32_MC8_CTL","IA32_MC8_CTL2","IA32_MC8_MISC","IA32_MC8_STATUS","IA32_MC9_ADDR1","IA32_MC9_CTL","IA32_MC9_CTL2","IA32_MC9_MISC","IA32_MC9_STATUS","IA32_MCG_CAP","IA32_MCG_CTL","IA32_MCG_STATUS","IA32_MISC_ENABLE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_MONITOR_FILTER_SIZE","IA32_MPERF","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_MTRR_FIX64K_00000","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSMASK9","IA32_P5_MC_ADDR","IA32_P5_MC_TYPE","IA32_PACKAGE_THERM_INTERRUPT","IA32_PACKAGE_THERM_STATUS","IA32_PAT","IA32_PEBS_ENABLE","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","IA32_PERFEVTSEL3","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","IA32_PERF_CAPABILITIES","IA32_PERF_CTL","IA32_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_STAUS","IA32_PERF_STATUS","IA32_PLATFORM_DCA_CAP","IA32_PLATFORM_ID","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","IA32_PQR_ASSOC","IA32_QM_CTR","IA32_QM_EVTSEL","IA32_SMBASE","IA32_SMM_MONITOR_CTL","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","IA32_TIME_STAMP_COUNTER","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA32_VMX_BASIC","IA32_VMX_CR0_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_CRO_FIXED0","IA32_VMX_CRO_FIXED1","IA32_VMX_ENTRY_CTLS","IA32_VMX_EPT_VPID_CAP","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EXIT_CTLS","IA32_VMX_FMFUNC","IA32_VMX_MISC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_VMCS_ENUM","IA32_VMX_VMFUNC","IA32_X2APIC_APICID","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_LDR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_PPR","IA32_X2APIC_SELF_IPI","IA32_X2APIC_SIVR","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_TPR","IA32_X2APIC_VERSION","LASTBRANCHFROMIP","LASTBRANCHTOIP","LASTINTFROMIP","LASTINTTOIP","MC0_ADDR","MC0_CTL","MC0_MISC","MC0_STATUS","MC1_ADDR","MC1_CTL","MC1_MISC","MC1_STATUS","MC2_ADDR","MC2_CTL","MC2_MISC","MC2_STATUS","MC3_ADDR","MC3_CTL","MC3_MISC","MC3_STATUS","MC4_ADDR","MC4_CTL","MC4_MISC","MC4_STATUS","MCG_CAP","MCG_CTL","MCG_STATUS","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_CTR0","MSR_B0_PMON_CTR1","MSR_B0_PMON_CTR2","MSR_B0_PMON_CTR3","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_MASK","MSR_B0_PMON_MATCH","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_CTR0","MSR_B1_PMON_CTR1","MSR_B1_PMON_CTR2","MSR_B1_PMON_CTR3","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_MASK","MSR_B1_PMON_MATCH","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_BPU_COUNTER0","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_BPU_ESCR0","MSR_BPU_ESCR1","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_CTR0","MSR_C0_PMON_CTR1","MSR_C0_PMON_CTR2","MSR_C0_PMON_CTR3","MSR_C0_PMON_CTR4","MSR_C0_PMON_CTR5","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_EVNT_SEL5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_CTR0","MSR_C1_PMON_CTR1","MSR_C1_PMON_CTR2","MSR_C1_PMON_CTR3","MSR_C1_PMON_CTR4","MSR_C1_PMON_CTR5","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_EVNT_SEL5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_CTR0","MSR_C2_PMON_CTR1","MSR_C2_PMON_CTR2","MSR_C2_PMON_CTR3","MSR_C2_PMON_CTR4","MSR_C2_PMON_CTR5","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_EVNT_SEL5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_CTR0","MSR_C3_PMON_CTR1","MSR_C3_PMON_CTR2","MSR_C3_PMON_CTR3","MSR_C3_PMON_CTR4","MSR_C3_PMON_CTR5","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_EVNT_SEL5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_CTR0","MSR_C4_PMON_CTR1","MSR_C4_PMON_CTR2","MSR_C4_PMON_CTR3","MSR_C4_PMON_CTR4","MSR_C4_PMON_CTR5","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_EVNT_SEL5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_CTR0","MSR_C5_PMON_CTR1","MSR_C5_PMON_CTR2","MSR_C5_PMON_CTR3","MSR_C5_PMON_CTR4","MSR_C5_PMON_CTR5","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_EVNT_SEL5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_CTR0","MSR_C6_PMON_CTR1","MSR_C6_PMON_CTR2","MSR_C6_PMON_CTR3","MSR_C6_PMON_CTR4","MSR_C6_PMON_CTR5","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_EVNT_SEL5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_CTR0","MSR_C7_PMON_CTR1","MSR_C7_PMON_CTR2","MSR_C7_PMON_CTR3","MSR_C7_PMON_CTR4","MSR_C7_PMON_CTR5","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_EVNT_SEL5","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_CTR0","MSR_C8_PMON_CTR1","MSR_C8_PMON_CTR2","MSR_C8_PMON_CTR3","MSR_C8_PMON_CTR4","MSR_C8_PMON_CTR5","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_EVNT_SEL5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_CTR0","MSR_C9_PMON_CTR1","MSR_C9_PMON_CTR2","MSR_C9_PMON_CTR3","MSR_C9_PMON_CTR4","MSR_C9_PMON_CTR5","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_EVNT_SEL5","MSR_CONFIG_TDP_CONTROL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_NOMINAL","MSR_CORE_C1_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_DEBUGCTLA","MSR_DEBUGCTLB","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_EBC_FREQUENCY_ID","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBL_CR_POWERON","MSR_EFSB_DRDY0","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL0","MSR_EMON_L3_CTR_CTL1","MSR_EMON_L3_CTR_CTL2","MSR_EMON_L3_CTR_CTL3","MSR_EMON_L3_CTR_CTL4","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_EMON_L3_GL_CTL","MSR_ERROR_CONTROL","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_FLAME_COUNTER0","MSR_FLAME_COUNTER1","MSR_FLAME_COUNTER2","MSR_FLAME_COUNTER3","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FSB_FREQ","MSR_GQ_SNOOP_MESF","MSR_IA32_ADDR0_END","MSR_IA32_ADDR0_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR3_END","MSR_IA32_ADDR3_START","MSR_IA32_CR3_MATCH","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_STATUS","MSR_IA32_TSX_CTRL","MSR_IFSB_BUSQ0","MSR_IFSB_BUSQ1","MSR_IFSB_CNTR7","MSR_IFSB_CTL6","MSR_IFSB_SNPQ0","MSR_IFSB_SNPQ1","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_IS_ESCR0","MSR_IS_ESCR1","MSR_ITLB_ESCR0","MSR_ITLB_ESCR1","MSR_IX_ESCR0","MSR_LASTBRANCH_0","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_15_TO_IP","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_7_TO_IP","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_TOS","MSR_LBR_SELECT","MSR_LER_FROM_LIP","MSR_LER_TO_LIP","MSR_M0_PMON_ADDR_MASK","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_CTR0","MSR_M0_PMON_CTR1","MSR_M0_PMON_CTR2","MSR_M0_PMON_CTR3","MSR_M0_PMON_CTR4","MSR_M0_PMON_CTR5","MSR_M0_PMON_DSP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_ZDP","MSR_M1_PMON_ADDR_MASK","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_CTR0","MSR_M1_PMON_CTR1","MSR_M1_PMON_CTR2","MSR_M1_PMON_CTR3","MSR_M1_PMON_CTR4","MSR_M1_PMON_CTR5","MSR_M1_PMON_DSP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_ZDP","MSR_MC0_MISC","MSR_MC10_ADDR","MSR_MC10_CTL","MSR_MC10_MISC","MSR_MC10_STATUS","MSR_MC11_ADDR","MSR_MC11_CTL","MSR_MC11_MISC","MSR_MC11_STATUS","MSR_MC12_ADDR","MSR_MC12_CTL","MSR_MC12_MISC","MSR_MC12_STATUS","MSR_MC13_ADDR","MSR_MC13_CTL","MSR_MC13_MISC","MSR_MC13_STATUS","MSR_MC14_ADDR","MSR_MC14_CTL","MSR_MC14_MISC","MSR_MC14_STATUS","MSR_MC15_ADDR","MSR_MC15_CTL","MSR_MC15_MISC","MSR_MC15_STATUS","MSR_MC16_ADDR","MSR_MC16_CTL","MSR_MC16_MISC","MSR_MC16_STATUS","MSR_MC17_ADDR","MSR_MC17_CTL","MSR_MC17_MISC","MSR_MC17_STATUS","MSR_MC18_ADDR","MSR_MC18_CTL","MSR_MC18_MISC","MSR_MC18_STATUS","MSR_MC19_ADDR","MSR_MC19_CTL","MSR_MC19_MISC","MSR_MC19_STATUS","MSR_MC1_MISC","MSR_MC20_ADDR","MSR_MC20_CTL","MSR_MC20_MISC","MSR_MC20_STATUS","MSR_MC21_ADDR","MSR_MC21_CTL","MSR_MC21_MISC","MSR_MC21_STATUS","MSR_MC22_ADDR","MSR_MC22_CTL","MSR_MC22_MISC","MSR_MC22_STATUS","MSR_MC23_ADDR","MSR_MC23_CTL","MSR_MC23_MISC","MSR_MC23_STATUS","MSR_MC24_ADDR","MSR_MC24_CTL","MSR_MC24_MISC","MSR_MC24_STATUS","MSR_MC25_ADDR","MSR_MC25_CTL","MSR_MC25_MISC","MSR_MC25_STATUS","MSR_MC26_ADDR","MSR_MC26_CTL","MSR_MC26_MISC","MSR_MC26_STATUS","MSR_MC2_MISC","MSR_MC3_ADDR","MSR_MC3_CTL","MSR_MC3_MISC","MSR_MC3_STATUS","MSR_MC4_ADDR","MSR_MC4_CTL","MSR_MC4_CTL2","MSR_MC4_MISC","MSR_MC4_STATUS","MSR_MC5_ADDR","MSR_MC5_CTL","MSR_MC5_MISC","MSR_MC5_STATUS","MSR_MC6_ADDR","MSR_MC6_CTL","MSR_MC6_MISC","MSR_MC6_STATUS","MSR_MC7_ADDR","MSR_MC7_CTL","MSR_MC7_MISC","MSR_MC7_STATUS","MSR_MC8_ADDR","MSR_MC8_CTL","MSR_MC8_MISC","MSR_MC8_STATUS","MSR_MC9_ADDR","MSR_MC9_CTL","MSR_MC9_MISC","MSR_MC9_STATUS","MSR_MCG_MISC","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_RAX","MSR_MCG_RBP","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDI","MSR_MCG_RDX","MSR_MCG_RFLAGS","MSR_MCG_RIP","MSR_MCG_RSI","MSR_MISC_PWR_MGMT","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_MS_ESCR0","MSR_MS_ESCR1","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_PEBS_ENABLE","MSR_PEBS_LD_LAT","MSR_PEBS_MATRIX_VERT","MSR_PEBS_NUM_ALT","MSR_PERF_CAPABILITIES","MSR_PERF_FIXED_CTR0","MSR_PERF_FIXED_CTR1","MSR_PERF_FIXED_CTR2","MSR_PERF_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","MSR_PERF_GLOBAL_STAUS","MSR_PERF_STATUS","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_C10_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C3_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C9_RESIDENCY","MSR_PKG_CST_CONFIG_CONTROL","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_PKG_POWER_LIMIT","MSR_PLATFORM_BRV","MSR_PLATFORM_ID","MSR_PLATFORM_INFO","MSR_PMG_IO_CAPTURE_BASE","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_POWER_CTL","MSR_PP0_ENERGY_STATUS","MSR_PP0_PERF_STATUS","MSR_PP0_POLICY","MSR_PP0_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_PP1_POWER_LIMIT","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_CTR0","MSR_R0_PMON_CTR1","MSR_R0_PMON_CTR2","MSR_R0_PMON_CTR3","MSR_R0_PMON_CTR4","MSR_R0_PMON_CTR5","MSR_R0_PMON_CTR6","MSR_R0_PMON_CTR7","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_CTR10","MSR_R1_PMON_CTR11","MSR_R1_PMON_CTR12","MSR_R1_PMON_CTR13","MSR_R1_PMON_CTR14","MSR_R1_PMON_CTR15","MSR_R1_PMON_CTR8","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_RAPL_POWER_UNIT","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_CTR0","MSR_S0_PMON_CTR1","MSR_S0_PMON_CTR2","MSR_S0_PMON_CTR3","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_CTR0","MSR_S1_PMON_CTR1","MSR_S1_PMON_CTR2","MSR_S1_PMON_CTR3","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_MASK","MSR_S1_PMON_MATCH","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_SMI_COUNT","MSR_SMM_BLOCKED","MSR_SMM_DELAYED","MSR_SMM_FEATURE_CONTROL","MSR_SMM_MCA_CAP","MSR_SMRR_PHYSMASK","MSR_SSU_ESCR0","MSR_TBPU_ESCR0","MSR_TBPU_ESCR1","MSR_TC_ESCR0","MSR_TC_ESCR1","MSR_TEMPERATURE_TARGET","MSR_THERM2_CTL","MSR_TURBO_ACTIVATION_RATIO","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","MSR_U2L_ESCR0","MSR_U2L_ESCR1","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNCORE_FIXED_CTR0","MSR_UNCORE_FIXED_CTR_CTRL","MSR_UNCORE_PERFEVTSEL0","MSR_UNCORE_PERFEVTSEL1","MSR_UNCORE_PERFEVTSEL2","MSR_UNCORE_PERFEVTSEL3","MSR_UNCORE_PERFEVTSEL4","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNCORE_PMC0","MSR_UNCORE_PMC1","MSR_UNCORE_PMC2","MSR_UNCORE_PMC3","MSR_UNCORE_PMC4","MSR_UNCORE_PMC5","MSR_UNCORE_PMC6","MSR_UNCORE_PMC7","MSR_UNC_ARB_PERFEVTSEL0","MSR_UNC_ARB_PERFEVTSEL1","MSR_UNC_ARB_PER_CTR0","MSR_UNC_ARB_PER_CTR1","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","MSR_UNC_CBO_CONFIG","MSR_UNC_PERF_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_STATUS","MSR_U_PMON_CTR","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_OVF_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_CTR0","MSR_W_PMON_CTR1","MSR_W_PMON_CTR2","MSR_W_PMON_CTR3","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_FIXED_CTR","MSR_W_PMON_FIXED_CTR_CTL","P5_MC_ADDR","P5_MC_TYPE","ROB_CR_BKUPTMPDR6","SYSENTER_CS_MSR","SYSENTER_EIP_MSR","SYSENTER_ESP_MSR","TEST_CTL","TSC","rdmsr","wrmsr","RdRand","RdSeed","fill_random","fill_random","rdrand16","rdrand32","rdrand64","rdrand_slice","rdseed16","rdseed32","rdseed64","rdseed_slice","BuildDescriptor","CallGate","CallGate16","CallGate32","CodeSegmentType","DataSegmentType","Descriptor","DescriptorBuilder","Execute","ExecuteAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","InterruptGate","InterruptGate16","InterruptGate32","LDT","LDT","LdtDescriptorBuilder","NULL","RPL_0","RPL_1","RPL_2","RPL_3","ReadExpand","ReadExpandAccessed","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadWriteExpand","ReadWriteExpandAccessed","SegmentDescriptorBuilder","SegmentSelector","SystemDescriptorTypes32","SystemDescriptorTypes64","TI_GDT","TI_LDT","TSSAvailable16","TSSBusy16","TaskGate","TaskGateDescriptorBuilder","TrapGate","TrapGate16","TrapGate32","TssAvailable","TssAvailable32","TssBusy","TssBusy32","all","as_u64","avl","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","clone","clone","clone","clone","clone","clone","cmp","code_descriptor","code_descriptor","complement","contains","cs","data_descriptor","data_descriptor","db","default","difference","dpl","ds","empty","eq","eq","eq","eq","eq","es","extend","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fs","gs","hash","index","insert","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","ist","l","ldt_descriptor","ldt_descriptor","ldt_descriptor","limit_granularity_4kb","load_cs","load_ds","load_es","load_fs","load_gs","load_ss","lower","new","not","partial_cmp","present","remove","set","set_avl","set_base_limit","set_db","set_dpl","set_g","set_l","set_p","set_s","set_selector_offset","set_type","ss","sub","sub_assign","symmetric_difference","task_gate_descriptor","task_gate_descriptor","toggle","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","tss_descriptor","tss_descriptor","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upper","load_tr","segmentation","tr","rdtsc","rdtscp","flush","flush_all","Result","VmFail","VmFailInvalid","VmFailValid","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","vmcs","control","guest","host","ro","ACK_INTERRUPT_ON_EXIT","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","CLEAR_IA32_BNDCFGS","CLEAR_IA32_RTIT_CTL","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CR0_GUEST_HOST_MASK","CR0_READ_SHADOW","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR3_TARGET_COUNT","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","CR4_GUEST_HOST_MASK","CR4_READ_SHADOW","CR8_LOAD_EXITING","CR8_STORE_EXITING","DEACTIVATE_DUAL_MONITOR","DTABLE_EXITING","ENABLE_EPT","ENABLE_INVPCID","ENABLE_PML","ENABLE_RDTSCP","ENABLE_USER_WAIT_PAUSE","ENABLE_VM_FUNCTIONS","ENABLE_VPID","ENABLE_XSAVES_XRSTORS","ENCLS_EXITING","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","ENCLV_EXITING","ENTRY_TO_SMM","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_FULL","EPTP_HIGH","EPTP_INDEX","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","EPT_VIOLATION_VE","EXCEPTION_BITMAP","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","EXTERNAL_INTERRUPT_EXITING","EntryControls","ExitControls","HLT_EXITING","HOST_ADDRESS_SPACE_SIZE","IA32E_MODE_GUEST","INTEL_PT_GUEST_PHYSICAL","INTERRUPT_WINDOW_EXITING","INVLPG_EXITING","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","LOAD_DEBUG_CONTROLS","LOAD_IA32_BNDCFGS","LOAD_IA32_EFER","LOAD_IA32_EFER","LOAD_IA32_PAT","LOAD_IA32_PAT","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_RTIT_CTL","MODE_BASED_EPT","MONITOR_EXITING","MONITOR_TRAP_FLAG","MOV_DR_EXITING","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","MWAIT_EXITING","NMI_EXITING","NMI_WINDOW_EXITING","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","PAUSE_EXITING","PAUSE_LOOP_EXITING","PINBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","PML_ADDR_FULL","PML_ADDR_HIGH","POSTED_INTERRUPTS","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","POSTED_INTERRUPT_NOTIFICATION_VECTOR","PRIMARY_PROCBASED_EXEC_CONTROLS","PinbasedControls","PrimaryControls","RDPMC_EXITING","RDRAND_EXITING","RDSEED_EXITING","RDTSC_EXITING","SAVE_DEBUG_CONTROLS","SAVE_IA32_EFER","SAVE_IA32_PAT","SAVE_VMX_PREEMPTION_TIMER","SECONDARY_CONTROLS","SECONDARY_PROCBASED_EXEC_CONTROLS","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","SUB_PAGE_EPT","SecondaryControls","TPR_THRESHOLD","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","UNCOND_IO_EXITING","UNRESTRICTED_GUEST","USE_IO_BITMAPS","USE_MSR_BITMAPS","USE_TPR_SHADOW","USE_TSC_OFFSETTING","USE_TSC_SCALING","VIRTUALIZE_APIC","VIRTUALIZE_APIC_REGISTER","VIRTUALIZE_X2APIC","VIRTUAL_INTERRUPT_DELIVERY","VIRTUAL_NMIS","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","VMCS_SHADOWING","VMENTRY_CONTROLS","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMEXIT_MSR_LOAD_COUNT","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_STORE_COUNT","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VMX_PREEMPTION_TIMER","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","VPID","WBINVD_EXITING","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ACTIVITY_STATE","CR0","CR3","CR4","CS_ACCESS_RIGHTS","CS_BASE","CS_LIMIT","CS_SELECTOR","DR7","DS_ACCESS_RIGHTS","DS_BASE","DS_LIMIT","DS_SELECTOR","ES_ACCESS_RIGHTS","ES_BASE","ES_LIMIT","ES_SELECTOR","FS_ACCESS_RIGHTS","FS_BASE","FS_LIMIT","FS_SELECTOR","GDTR_BASE","GDTR_LIMIT","GS_ACCESS_RIGHTS","GS_BASE","GS_LIMIT","GS_SELECTOR","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","IDTR_LIMIT","INTERRUPTIBILITY_STATE","INTERRUPT_STATUS","LDTR_ACCESS_RIGHTS","LDTR_BASE","LDTR_LIMIT","LDTR_SELECTOR","LINK_PTR_FULL","LINK_PTR_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","PENDING_DBG_EXCEPTIONS","PML_INDEX","RFLAGS","RIP","RSP","SMBASE","SS_ACCESS_RIGHTS","SS_BASE","SS_LIMIT","SS_SELECTOR","TR_ACCESS_RIGHTS","TR_BASE","TR_LIMIT","TR_SELECTOR","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","CS_SELECTOR","DS_SELECTOR","ES_SELECTOR","FS_BASE","FS_SELECTOR","GDTR_BASE","GS_BASE","GS_SELECTOR","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","RIP","RSP","SS_SELECTOR","TR_BASE","TR_SELECTOR","EXIT_QUALIFICATION","EXIT_REASON","GUEST_LINEAR_ADDR","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","IDT_VECTORING_ERR_CODE","IDT_VECTORING_INFO","IO_RCX","IO_RDI","IO_RIP","IO_RSI","VMEXIT_INSTRUCTION_INFO","VMEXIT_INSTRUCTION_LEN","VMEXIT_INTERRUPTION_ERR_CODE","VMEXIT_INTERRUPTION_INFO","VM_INSTRUCTION_ERROR"],"q":["x86","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic::ApicId","","x86::apic::ioapic","","","","","","","","","","","","","","x86::apic::x2apic","","","","","","","","","","","","","","","","","","","","","","","","","x86::apic::xapic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits16","x86::bits32","","","","x86::bits32::eflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits32::pagingx86::bits32::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64","","","","","","","","x86::bits64::pagingx86::bits64::registers","","","x86::bits64::rflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::segmentation","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::sgx","","","","","","","","","","","","","","","","","","","","","","","","x86::bits64::syscall","","","","","","","x86::bits64::task","","","","","","","","","","","","","","","","","","","","","x86::bits64::vmx","","","","","","","","","x86::controlregsx86::cpuidx86::cpuid::Associativity","x86::cpuid::ExtendedRegisterType","x86::cpuid::Hypervisor","","","x86::cpuid::SgxSectionInfo","x86::cpuid::native_cpuid","x86::debugregs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::dtables","","","","","","","","","","","","","","","","","","","","x86::fence","","","x86::io","","","","","","x86::irq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::msr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::random","","","","","","","","","","","","x86::segmentationx86::task","","","x86::time","","x86::tlb","","x86::vmx","","","","","","","","","","","","","x86::vmx::vmcs","","","","x86::vmx::vmcs::controlx86::vmx::vmcs::guest","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::host","","","","","","","","","","","","","","","","","","","","","","","","","","x86::vmx::vmcs::ro","","","","","","","","","","","","","","",""],"d":["x86 Protection levels","","","","","Register information and driver to program xAPIC, X2APIC …","Data structures and functions used by 16-bit mode.","Data structures and functions used by 32-bit mode.","Data structures and functions used by IA-32e but not …","","","","Functions to read and write control registers. See Intel …","Support for the CPUID instructions.","A short-cut to the architecture (bits32 or bits64) this …","Functions to read and write debug registers.","Functions and data-structures for working with descriptor …","","Intel fence instructions","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Stops instruction execution and places the processor in a …","Generate a software interrupt. This is a macro argument …","Calls <code>U::from(self)</code>.","I/O port functionality.","Shared interrupt description and set-up code. See the …","MSR value list and function to read and write them.","Instructions to generate random bits directly from the …","Read Processor ID","Functionality to manipulate segment registers, build …","","Helpers to program the task state segment. See Intel 3a, …","Functions to read time stamp counters on x86.","Functions to flush the translation lookaside buffer (TLB).","","","","Data structures and definitions used by Virtual Machine …","","","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Encodes the id of a core.","","","Specify IPI Delivery Mode","Specify Delivery Status","Specify IPI Destination Mode.","IPI Destination Shorthand","","Delivers the interrupt specified in the vector field to …","Abstract the IPI control register","","Delivers an INIT request to the target processor or …","IPI Level","","","Same as fixed mode, except that the interrupt is delivered …","","Delivers an NMI interrupt to the target processor or …","","","Delivers an SMI interrupt to the target processor or …","","Sends a special start-up IPI (called a SIPI) to the target …","IPI Trigger Mode","A core destination encoded as an x2APIC ID.","A core destination encoded as an xAPIC ID.","Reserved","","","","","","","","","","","","","","","","","Is a bootstrap processor?","","End Of Interrupt – Acknowledge interrupt delivery.","","","","","","","","","","","","","","","","","Short-hand to create a Icr value that will work for an …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return APIC ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","To control an I/O APIC.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Returns the logical APIC ID.","Get lower 32-bits of the Icr register.","Send a generic IPI.","","","","","","","","","","","","","","","","","Enable TSC deadline timer.","Set TSC deadline value.","","","","","","","","","Get upper 32-bits of the Icr register.","Read APIC version","x2APIC, the most recent APIC on x86 for large servers with …","Returns the logical address relative to a cluster for a …","Returns the cluster ID a given APIC ID belongs to …","Returns the Logical x2APIC ID.","Information about the xAPIC for the local APIC.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Instantiate a new IoApic.","Number of supported interrupts by this IO APIC.","","","","","Represents an x2APIC driver instance.","Attach to APIC (enable x2APIC mode, initialize LINT0)","","","Is a bootstrap processor?","","Detach from APIC (disable x2APIC and xAPIC mode).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local x2APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …","Create a new x2APIC driver object for the local core.","Send a generic IPI.","Send an IPI to yourself.","","","Enable TSC timer","Set tsc deadline.","","Read APIC version.","State for the XAPIC driver.","EOI register. Write-only.","Error Status Register (ESR). Read/write. See Section …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Logical Destination Register (LDR). Read/write in xAPIC …","LVT CMCI register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Performance Monitoring register. Read/write. See …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Timer register. Read/write. See Figure 10-8 for …","Processor Priority Register (PPR). Read-only.","Spurious Interrupt Vector Register (SVR). Read/write. See …","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","Initial Count register (for Timer). Read/write.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Local APIC Version register. Read-only. Same version used …","Attach driver to the xAPIC (enables device).","","","Is this the bootstrap core?","Detach driver form the xAPIC (disables device).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","","Create a new xAPIC object for the local CPU.","Send a generic IPI.","","","Enable TSC timer.","Set TSC deadline value.","","Read APIC version","","Processor state stored in the EFLAGS register.","Description of the data-structures for IA-32 paging mode.","","Helpers to program the task state segment. See Intel 3a, …","The EFLAGS register.","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","Clears the AC flag bit in EFLAGS register.","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the AC flag bit in EFLAGS register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (4 MiB)","A type wrapping a large page with a 4 MiB buffer.","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 32 entries.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","A wrapper for a physical address.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","Page size; if set this entry maps a 4-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","A wrapper for a virtual address.","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to mutable pointer.","Convert to pointer.","Convert to pointer.","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Convert from <code>u32</code>","Convert from <code>usize</code>","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Page size; if set this entry maps a 4-MByte page; …","Page-level cache disable.","Page-level cache disable.","Page-level write-through.","Page-level write-through.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Description of the data-structures for IA-32e paging mode.","","Processor state stored in the RFLAGS register.","","Program x86 enclaves.","Invokes an OS system-call handler at privilege level 0.","Helpers to program the task state segment. See Intel 3a, …","Virtualize processor hardware for multiple software …","","","","","","","","","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; if PS indicates whether software has written to the …","Dirty; if PS indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if CR4.PGE = 1, determines whether the translation …","Size of a huge page (1 GiB)","A type wrapping a huge page with a 1 GiB buffer.","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (2 MiB)","A type wrapping a large page with a 2 MiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Maximum virtual address.","Maximum supported bits for virtual addresses (with 5-level …","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to reference a PML5 entry","Present; must be 1 to map a 1-GByte page or reference a …","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 64 entries.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","A wrapper for a physical address.","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","A page directory pointer table.","A PDPT Entry consists of an address and a bunch of flags.","PDPT configuration bit description.","A PML4 table.","A PML4 Entry consists of an address and a bunch of flags.","PML4 configuration bit description.","Size of a region covered by a PML4 Entry (512 GiB)","A PML5 table","A PML5 Entry consists of an address and a bunch of flags.","PML5 configuration bit description.","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","A wrapper for a virtual address.","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","","","","","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; if PS set indicates whether software has written to …","Dirty; if PD_PS set indicates whether software has written …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","Is page present?","Is page present?","Is page present?","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page or reference a …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Creates a new PML4Entry.","Creates a new PML5Entry.","Creates a new PDPTEntry.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","Split <code>PAddr</code> into lower and higher 32-bits.","Split <code>IOAddr</code> into lower and higher 32-bits.","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","Read the RBP register (base pointer register).","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","The RFLAGS register. This is duplicated code from bits32 …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Entry for IDT, GDT or LDT.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Reload code segment register.","Read FS Segment Base","Read GS Segment Base","Create a new segment, TSS or LDT descriptor by setting the …","Sets the interrupt stack table index. The 3-bit IST index …","Creates a new descriptor with selector and offset (for IDT …","Swap the GS register.","","","","Write FS Segment Base","Write GS Segment Base","Create an SECS page in the Enclave Page Cache","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Although hardware task-switching is not supported in …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","The full 64-bit canonical forms of the interrupt stack …","Creates a new empty TSS.","","","","","The full 64-bit canonical forms of the stack pointers …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","","","","Clear VMCS.","Launch virtual machine.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Resume virtual machine.","Write to a specified field in a VMCS.","Disable VMX operation.","Enable VMX operation.","","","","","","","","","","","","If set, enables debug register based breaks on I/O space …","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and …","Enable shared (PDE or PTE) address translation between …","Enables 5-Level Paging.","Enable machine check interrupts.","Enable XSAVE and Processor Extended States.","Enable: Physical Address Extension (allows to address …","Enables process-context identifiers (PCIDs).","Enable Performance-Monitoring Counters","Enables use of Protection Keys (MPK).","Enable Page Size Extensions (allows for pages larger than …","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enables Safer Mode Extensions (Trusted Execution …","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","If set, enables support for the virtual interrupt flag …","Enables Virtual Machine Extensions.","If set, disables ability to take time-stamps.","Enables unmasked SSE exceptions.","If set, enables support for the virtual interrupt flag …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported if …","","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","BMI1","BMI2","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","Virtual Transparent Encryption supported if set.","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","","","","","","","","B0 breakpoint condition detected","B1 breakpoint condition detected","B2 breakpoint condition detected","B3 breakpoint condition detected","BD debug register access detected","An array list of all available breakpoint registers.","BS single step","BT task switch","Specifies the  breakpoint condition for a corresponding …","Specify the size of the memory location at the address …","Specifies available hardware breakpoints.","00 — 1-byte length.","01 — 2-byte length.","11 — 4-byte length.","10 — 8 byte length (or undefined, on older processors).","11 — Break on data reads or writes but not instruction …","01 — Break on data writes only.","","","","","Debug register 6 (dr6) flags.","","Empty Dr7 has bit 10 always set.","Bit that controls debug-register protection.","Bit that controls global exact breakpoints.","00 — Break on instruction execution only.","10 — Break on I/O reads or writes.","Bit that controls local exact breakpoints.","Enables (when set) advanced debugging of RTM transactional …","Bit that controls debugging of RTM transactional regions.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Configures the breakpoint by writing <code>dr</code> registers.","Configures a breakpoint condition <code>bc</code> and size <code>bs</code> for the …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disables the breakpoint condition for the associated …","Disable breakpoint in global mode.","Disable breakpoint in local mode.","Read dr{0-3} register based on enum variant.","Read dr0.","Write dr0.","Read dr1.","Write dr1.","Read dr2.","Write dr2.","Read dr3.","Write dr3.","Read dr6.","Write dr6.","Read dr7.","Write dr7.","Returns an empty set of flags.","Enables the breakpoint condition for the associated …","Global exact breakpoint enable.","Local exact breakpoint enable.","Enables debug-register protection, which causes a debug …","Enable the breakpoint in global mode.","Enable the breakpoint in local mode.","Enables advanced debugging of RTM transactional regions.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write dr{0-3} register based on provided enum variant.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the segment selector from the local descriptor …","Load the GDTR register with the specified base and limit.","Load the IDTR register with the specified base and limit.","Size of the DT.","Loads the segment selector into the selector field of the …","","","Retrieve base and limit from the GDTR register.","Retrieve base and limit from the IDTR register.","","","","lfence – Load Fence","mfence – Memory Fence","sfence – Store Fence","Read 8 bits from port","Read 32 bits from port","Read 16 bits from port","Write 8 bits to port","Write 32 bits to port","Write 16 bits to port","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was not caused by an instruction fetch. 1: …","","","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","0: The fault was caused by a non-present page. 1: The …","","0: The fault was not by protection keys. 1: There was a …","","0: The fault was not caused by reserved bit violation. 1: …","","","","0: The access causing the fault originated when the …","","0: The access causing the fault was a read. 1: The access …","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable Interrupts.","Returns an empty set of flags.","Enable Interrupts.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Section 10.4.4, Local APIC Status and Location.","BIOS Update Trigger Register.","","Processor Hard Power-On Configuration  (R/W) Enables and …","Actual Performance Frequency Clock Count (RW)  See Table …","APIC Location and Status (R/W) See Table 35-2. See Section …","(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13…","BIOS Update Signature ID (R/W) See Table 35-2.","BIOS Update Trigger Register (W)  See Table 35-2.","Clock Modulation (R/W)  See Table 35-2. …","","System Call Target Address the compatibility mode.","06_2EH","Debug Control (R/W)  Controls how several debug features …","DS Save Area (R/W) See Table 35-2. Points to the DS buffer …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","if CPUID.6H:ECX[3] = 1","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Fixed-Function Performance Counter Register 0 (R/W)  See …","Fixed-Function Performance Counter Register 1 (R/W)  See …","Fixed-Function Performance Counter Register 2 (R/W)  See …","Fixed-Function-Counter Control Register (R/W)  See Table …","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","06_0FH","See Table 35-2.","06_0FH","06_0FH","06_1DH","06_1DH","See Table 35-2.","Misc MAC information of Integrated I/O. (R/O) see Section …","06_1DH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","Machine Check Capabilities (R) See Table 35-2. See Section …","Machine Check Feature Enable (R/W) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 8.10.5, Monitor/Mwait Address Range …","Maximum Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","Default Memory Types (R/W)  Sets the memory type for the …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors.","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Page Attribute Table See Section 11.11.2.2, Fixed Range …","","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Performance Event Select for Counter 3 (R/W) Supports all …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 14.1, Enhanced Intel  …","06_0FH","Platform ID (R)  See Table 35-2. The operating system can …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If IA32_VMX_MISC[bit 15])","SMM Monitor Configuration (R/W) See Table 35-2.","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","System Call Target Address (R/W)  See Table 35-2.","CS register target for CPL 0 code (R/W) See Table 35-2. …","CPL 0 code entry point (R/W) See Table 35-2. See Section …","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","See Section 17.13, Time-Stamp Counter,  and see Table 35-2.","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of CR0 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR0 Bits Fixed to 1 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 1 (R/O) …","If CPUID.01H:ECX.[bit 5] = 1","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of VM-entry Controls (R/O) …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of EPT and VPID (R/O)  See …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-function Controls …","Reporting Register of Miscellaneous VMX Capabilities (R/O) …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of Secondary Processor-based …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VMCS Field Enumeration …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 )","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Interrupt Command register (R/W)","x2APIC Initial Count register (R/W)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Logical Destination register (R/O)","x2APIC LVT Corrected Machine Check Interrupt register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Performance Monitor register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC Processor Priority register (R/O)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Task Priority register (R/W)","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","","","","","","","Defined in MCA architecture but not implemented in the P6 …","","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","Defined in MCA architecture but not implemented in P6 …","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","","","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","","","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","ConfigTDP Control (R/W)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","Nominal TDP Ratio (R/O)","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","Processor Frequency Configuration The bit field layout of …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","EFSB DRDY Event Control and Counter Register (R/W)  See …","EFSB DRDY Event Control and Counter  Register (R/W)","GBUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","GSNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control and Counter Register (R/W)  See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","MC Bank Error Configuration (R/W)","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Scaleable Bus Speed(RO) This field indicates the intended …","","Trace End Address 0","Trace Start Address 0","Trace End Address 1","Trace Start Address 1","Trace End Address 3","Trace Start Address 3","Trace End Address 4","Trace Start Address 4","Trace Filter CR3 Match Register (R/W)","Trace Control Register (R/W)","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Tracing Status Register (R/W)","TSX Ctrl Register for TSX Async Abot (TAA) Migration. See …","IFSB BUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter Register (R/W)","IFSB Latency Event Counter Register  (R/W)  See Section …","IFSB Latency Event Control Register  (R/W) See Section …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Last Branch Record 0 (R/W)  One of four last branch record …","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 0 (R/W)  One of 16 pairs of last branch …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 See description of the …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 See description of the …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record Stack TOS (R/W)  Contains an index (0-3 …","Last Branch Record Filtering Select Register (R/W)  See …","Last Exception Record From Linear IP (R)  Contains a …","Last Exception Record To Linear IP (R)  This area contains …","Uncore M-box 0 perfmon local box address mask MSR.","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon local box address match/mask config …","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon local box address match/mask config …","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Always 0 (CMCI not supported).","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Apply to Intel Xeon processor 7400 series (processor …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","Machine Check Miscellaneous See Section 15.3.2.6, IA32_MCG …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check EFLAGS/RFLAG Save State See Section …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","See http://biosbits.org.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","see See Section 18.7.1.2, Load Latency Performance …","See Table 19-26.","","RO. This applies to processors that do not support …","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function-Counter Control Register (R/W)","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","C-State Configuration Control (R/W)  Note: C-state values …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","Platform Feature Requirements (R)","Model Specific Platform ID (R)","see http://biosbits.org.","Power Management IO Redirection in C-state (R/W)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Power Control Register. See http://biosbits.org.","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Performance Throttling Status (R/O) See Section …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Unit Multipliers used in RAPL Interfaces (R/O)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore S-box 1 perfmon local box match MSR.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","SMI Counter (R/O)","SMM Blocked (SMM-RO) Reports the blocked state of all …","SMM Delayed (SMM-RO) Reports the interruptible state of …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","System Management Mode Physical Address Mask register  (WO …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Thermal Monitor 2 Control.","ConfigTDP Control (R/W)","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","Uncore Arb unit, counter 1 event select MSR","Uncore Arb unit, performance counter 0","Uncore Arb unit, performance counter 1","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","Uncore C-Box configuration information (R/O)","Uncore fixed counter","Uncore fixed counter control (R/W)","Uncore PMU global control","Uncore PMU main status","Uncore U-box perfmon counter MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon global status MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box overflow control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon fixed counter","Uncore U-box perfmon fixed counter control MSR","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors,  and see  …","","CS register target for CPL 0 code","CPL 0 code entry point","Stack pointer for CPL 0 stack","Test Control Register","See Section 17.13, Time-Stamp Counter.","Read 64 bits msr register.","Write 64 bits to msr register.","RdRand trait to implement the generic rdrand_slice …","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fills <code>self</code> with random bits. Returns true on success or …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","","","","","Code Segment types for descriptors. See also Intel 3a, …","Data Segment types for descriptors. See also Intel 3a, …","Entry for IDT, GDT or LDT. Provides size and location of a …","Makes building descriptors easier (hopefully).","Code Execute-Only","Code Execute-Only, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions for …","","","","","","Trait to define functions that build an architecture …","","Requestor Privilege Level","","","","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Trait to define functions that build architecture specific …","Specifies which element to load into a segment from …","System-Segment and Gate-Descriptor Types 32-bit mode. See …","System-Segment and Gate-Descriptor Types 64-bit mode See …","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","","","","Trait to implement for building a task-gate (this …","","","","","","","","Returns the set containing all flags.","","Toggle the AVL bit.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the current value of the code segment register.","","","Set default operation size (false for 16bit segment, true …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Specifies the privilege level of the segment.","Returns the current value of the data segment register.","Returns an empty set of flags.","","","","","","Returns the current value of the extra segment register.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Make a new segment selector from a untyped u16 value.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","","Returns segment selector’s index in GDT or LDT.","Inserts the specified flags in-place.","","","","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Set a the interrupt stack table index (only if this ends …","Set L bit if this descriptor is a 64-bit code segment. In …","","","","The segment limit is interpreted in 4-KByte units if this …","","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Reload stack segment register.","","Create a new SegmentSelector","Returns the complement of this set of flags.","","Indicates whether the segment is present in memory (set) …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set AVL bit. System software can use this bit to store …","Create a new segment, TSS or LDT descriptor by setting the …","Set D/B. Performs different functions depending on whether …","Specifies the privilege level of the segment. The DPL is …","Set G bit Determines the scaling of the segment limit …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set Present bit. Indicates whether the segment is present …","Specifies whether the segment descriptor is for a system …","Creates a new descriptor with selector and offset (for IDT …","Set the type of the descriptor (bits 8-11). Indicates the …","Returns the current value of the stack segment register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Loads the task register.","","Returns the current value of the task register.","Read the time stamp counter.","Read the time stamp counter.","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to convey …","VMCS pointer is not valid.","VMCS pointer is valid, but some other error was …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Fields used to access guest-state area.","Fields used to access host-state area.","VM-exit information fields.","Acknowledge interrupt on exit.","APIC-access address (full).","APIC-access address (high).","Clear IA32_BNDCFGS.","Clear IA32_RTIT_CTL.","Conceal VMX from PT.","Conceal VMX from PT.","Conceal VMX from PT.","CR0 guest/host mask.","CR0 read shadow.","CR3-load exiting.","CR3-store exiting.","CR3-target count.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","CR4 guest/host mask.","CR4 read shadow.","CR8-load exiting.","CR8-store exiting.","Deactivate dual-monitor treatment.","Descriptor-table exiting.","Enable EPT.","Enable INVPCID.","Enable PML.","Enable RDTSCP.","Enable user wait and pause.","Enable VM functions.","Enable VPID.","Enable XSAVES/XRSTORS.","Enable ENCLS exiting.","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Enable ENCLV exiting.","Entry to SMM.","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPT pointer (full).","EPT pointer (high).","EPTP index.","EPTP-list address (full).","EPTP-list address (high).","EPT-violation #VE.","Exception bitmap.","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","External-interrupt exiting.","VM-entry controls.","VM-exit controls.","HLT exiting.","Host address-space size.","IA-32e mode guest.","Intel PT uses guest physical addresses.","Interrupt-window exiting.","INVLPG exiting.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Load debug controls.","Load IA32_BNDCFGS.","Load IA32_EFER.","Load IA32_EFER.","Load IA32_PAT.","Load IA32_PAT.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_RTIT_CTL.","Mode-based execute control for EPT.","MONITOR exiting.","Monitor trap flag.","MOV-DR exiting","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","MWAIT exiting.","NMI exiting.","NMI-window exiting.","Page-fault error-code mask.","Page-fault error-code match.","PAUSE exiting.","PAUSE-loop exiting.","Pin-based VM-execution controls.","PLE_Gap.","PLE_Window.","PML address (full).","PML address (high).","Process posted interrupts.","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","Posted-interrupt notification vector.","Primary processor-based VM-execution controls.","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","RDPMC exiting.","RDRAND exiting.","RDSEED exiting.","RDTSC exiting.","Save debug controls.","Save IA32_EFER.","Save IA32_PAT.","Save VMX-preemption timer.","Activate secondary controls.","Secondary processor-based VM-execution controls.","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","Sub-page write permissions for EPT.","Secondary processor-based VM-execution controls.","TPR threshold.","TSC multiplier (full).","TSC multiplier (high).","TSC offset (full).","TSC offset (high).","Unconditional I/O exiting.","Unrestricted guest.","Use I/O bitmaps.","Use MSR bitmaps.","Use TPR shadow.","Use TSC offsetting.","Use TSC scaling.","Virtualize APIC accesses.","APIC-register virtualization.","Virtualize x2APIC mode.","Virtual-interrupt delivery.","Virtual NMIs.","Virtual-APIC address (full).","Virtual-APIC address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","VMCS shadowing.","VM-entry controls.","VM-entry exception error code.","VM-entry instruction length.","VM-entry interruption-information field.","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","VM-entry MSR-load count.","VM-exit controls.","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-exit MSR-load count.","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-store count.","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Activate VMX-preemption timer.","VM-function controls (full).","VM-function controls (high).","Virtual-processor identifier (VPID).","WBINVD exiting.","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Guest activity state.","Guest CR0.","Guest CR3.","Guest CR4.","Guest CS access rights.","Guest CS base.","Guest CS limit.","Guest CS selector.","Guest DR7.","Guest DS access rights.","Guest DS base.","Guest DS limit.","Guest DS selector.","Guest ES access rights.","Guest ES base.","Guest ES limit.","Guest ES selector.","Guest FS access rights.","Guest FS base.","Guest FS limit.","Guest FS selector.","Guest GDTR base.","Guest GDTR limit.","Guest GS access rights.","Guest GS base.","Guest GS limit.","Guest GS selector.","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest IA32_SYSENTER_CS.","Guest IA32_SYSENTER_EIP.","Guest IA32_SYSENTER_ESP.","Guest IDTR base.","Guest IDTR limit.","Guest interruptibility state.","Guest interrupt status.","Guest LDTR access rights.","Guest LDTR base.","Guest LDTR limit.","Guest LDTR selector.","VMCS link pointer (full).","VMCS link pointer (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest pending debug exceptions.","PML index.","Guest RFLAGS.","Guest RIP.","Guest RSP.","Guest SMBASE.","Guest SS access rights.","Guest SS base.","Guest SS limit.","Guest SS selector.","Guest TR access rights.","Guest TR base.","Guest TR limit.","Guest TR selector.","VMX-preemption timer value.","Host CR0.","Host CR3.","Host CR4.","Host CS selector.","Host DS selector.","Host ES selector.","Host FS base.","Host FS selector.","Host GDTR base.","Host GS base.","Host GS selector.","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host IA32_SYSENTER_EIP.","Host IA32_SYSENTER_ESP.","Host IDTR base.","Host RIP.","Host RSP.","Host SS selector.","Host TR base.","Host TR selector.","Exit qualification.","Exit reason.","Guest-linear address.","Guest-physical address (full).","Guest-physical address (high).","IDT-vectoring error code.","IDT-vectoring information field.","I/O RCX.","I/O RDI.","I/O RIP.","I/O RSI.","VM-exit instruction information.","VM-exit instruction length.","VM-exit interruption error code.","VM-exit interruption information.","VM-instruction error."],"i":[0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,14,14,0,0,12,12,0,0,0,0,13,9,0,11,9,0,13,10,9,14,9,14,10,9,11,9,0,8,8,9,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,135,8,135,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,15,15,9,10,11,12,13,14,15,8,135,9,10,11,12,13,14,15,8,8,0,135,135,135,135,15,135,9,10,11,12,13,14,15,8,9,10,11,12,13,14,15,8,135,135,9,10,11,12,13,14,15,8,15,135,0,8,8,8,0,136,137,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,26,27,28,29,30,31,32,0,0,0,31,32,31,32,0,0,0,31,32,0,31,32,0,31,32,0,0,0,31,0,0,0,31,32,0,31,32,31,32,0,26,26,26,27,27,27,28,28,28,26,26,27,27,28,28,28,29,30,26,27,28,26,27,28,26,27,28,26,27,28,31,32,26,28,26,28,26,27,28,26,27,28,26,27,28,26,26,27,27,28,28,28,28,31,32,31,32,26,26,27,27,28,28,28,31,32,31,32,31,32,31,32,31,32,138,139,26,27,28,31,29,32,30,138,139,26,27,28,31,29,32,30,26,27,28,31,29,32,30,26,27,28,31,32,31,32,31,32,31,32,31,32,26,27,28,31,32,31,32,29,30,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,31,31,31,31,31,29,32,32,32,32,32,30,138,139,26,26,26,26,27,27,27,27,28,28,28,28,31,29,32,30,31,32,31,32,31,32,31,32,28,28,26,27,28,31,32,31,32,31,32,31,32,138,139,26,26,26,27,27,27,28,28,28,31,29,32,30,29,30,26,27,28,31,32,26,27,28,29,30,31,32,29,30,26,27,28,29,29,30,29,30,29,30,29,30,29,30,29,30,26,27,28,26,27,28,29,30,31,32,26,27,28,31,32,0,0,26,26,26,27,27,27,28,28,28,31,32,31,32,26,27,28,28,28,26,26,26,27,27,27,28,28,28,31,32,31,32,31,32,31,32,138,139,26,27,28,31,29,32,30,138,139,26,27,28,31,29,32,30,138,139,26,27,28,31,29,32,30,31,32,26,27,28,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,35,36,37,38,39,40,41,42,43,44,45,46,47,0,0,0,45,46,47,45,46,47,0,0,0,0,0,0,0,0,43,44,45,46,47,0,45,46,0,43,44,45,46,47,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,0,0,0,43,44,45,46,47,0,43,44,45,46,47,43,44,45,46,47,0,43,44,45,46,47,35,35,35,36,36,36,37,37,37,35,35,36,36,37,37,37,38,39,40,41,42,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,37,43,44,45,46,47,37,37,35,36,37,35,36,37,35,36,37,35,35,36,36,37,37,37,37,43,44,45,46,47,43,44,45,46,47,35,35,36,36,37,37,37,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,140,141,142,35,36,37,43,44,38,39,45,40,46,41,47,42,140,141,142,35,36,37,43,44,38,39,45,40,46,41,47,42,35,36,37,43,44,38,39,45,40,46,41,47,42,35,36,37,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,35,36,37,43,44,45,46,47,43,44,45,46,47,38,39,40,41,42,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,43,43,43,43,43,44,44,44,44,44,38,39,45,45,45,45,45,40,46,46,46,46,46,41,47,47,47,47,47,42,140,141,142,35,35,35,35,36,36,36,36,37,37,37,37,43,44,38,39,45,40,46,41,47,42,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,37,37,35,36,37,43,44,45,46,47,35,36,37,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,140,141,142,35,35,35,36,36,36,37,37,37,43,44,38,39,45,40,46,41,47,42,38,39,40,41,42,35,36,37,43,44,45,46,47,35,36,37,41,42,43,44,45,46,47,41,42,35,36,37,38,39,40,41,42,35,36,37,40,41,38,39,40,41,42,38,39,40,41,42,40,41,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,35,36,37,35,36,37,38,39,40,41,42,43,44,45,46,47,35,36,37,43,44,45,46,47,0,0,0,0,0,35,35,35,36,36,36,37,37,37,43,44,45,46,47,43,44,45,46,47,35,36,37,37,37,35,36,35,35,35,36,36,36,37,37,37,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,140,141,142,35,36,37,43,44,38,39,45,40,46,41,47,42,140,141,142,35,36,37,43,44,38,39,45,40,46,41,47,42,140,141,142,35,36,37,43,44,38,39,45,40,46,41,47,42,43,44,45,46,47,35,36,37,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,48,0,48,0,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,0,0,49,0,0,0,49,49,49,0,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,55,55,55,55,55,55,55,55,55,0,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,0,0,0,0,0,0,0,0,53,54,55,53,54,55,53,54,55,53,54,55,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,0,0,101,0,0,98,98,98,98,101,0,76,0,0,0,0,0,0,97,0,0,76,0,0,0,71,70,97,0,88,88,111,0,0,0,0,0,0,0,0,0,0,0,88,76,98,101,0,0,99,71,70,97,101,0,0,0,0,0,70,0,0,97,0,98,98,88,71,70,0,0,98,76,0,0,0,0,0,98,101,101,0,0,71,97,76,0,0,0,0,0,0,70,0,76,0,97,0,0,71,70,88,98,70,101,101,0,99,101,56,57,58,59,61,62,61,62,63,64,64,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,99,73,100,81,111,112,82,70,113,62,101,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,99,73,100,81,111,112,82,70,113,62,101,65,64,66,68,69,69,63,72,73,64,74,56,75,76,77,78,63,79,80,81,82,63,83,84,85,86,0,87,87,87,87,74,89,77,87,90,87,90,87,90,87,90,91,56,56,85,56,56,87,90,88,86,58,68,92,93,56,61,75,94,63,71,95,96,97,98,99,73,100,70,62,101,64,64,65,95,64,85,85,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,88,86,58,68,92,93,74,56,61,61,75,76,77,77,94,78,63,71,71,95,79,96,97,97,80,98,98,99,99,73,100,81,111,112,82,70,70,113,62,62,101,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,98,99,73,100,81,111,112,82,70,113,62,101,74,74,74,104,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,110,74,74,74,110,74,110,74,74,74,110,110,74,58,86,69,65,69,65,69,69,65,68,64,65,103,64,65,68,65,85,64,91,92,64,103,103,103,103,103,103,103,103,103,103,103,103,58,64,103,103,64,65,64,64,64,72,63,83,86,64,65,64,64,68,92,64,64,91,91,64,109,109,91,65,65,64,65,103,86,91,92,64,65,93,93,64,103,86,103,64,92,92,91,103,92,64,91,68,86,86,91,91,91,91,91,91,91,91,64,65,91,58,58,86,58,58,103,83,108,108,107,65,92,100,83,84,65,65,64,86,64,58,108,65,64,65,64,65,64,93,103,64,83,64,65,92,92,84,103,65,64,64,68,64,92,92,64,64,64,64,65,65,65,64,103,91,64,83,86,65,103,68,103,64,64,64,91,83,103,58,64,103,103,103,65,103,58,68,86,83,103,68,68,68,103,109,109,103,103,83,65,103,68,103,64,92,64,64,64,64,64,64,65,92,64,86,65,92,65,64,65,86,92,64,86,64,83,83,65,84,83,86,64,103,64,92,91,91,103,58,92,64,68,92,64,86,68,58,65,64,105,65,64,105,105,105,72,73,100,105,105,87,87,87,87,57,64,95,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,99,73,100,81,111,112,82,70,113,62,101,75,78,79,80,81,82,113,58,85,85,85,106,85,69,63,106,106,63,85,85,85,63,63,72,73,105,109,87,90,87,90,87,90,87,90,108,90,90,90,90,108,107,90,90,90,90,95,63,96,96,58,106,103,69,63,63,109,109,68,100,64,58,58,84,108,68,109,64,0,74,75,78,79,80,81,82,113,89,77,58,85,89,106,69,58,58,68,112,63,65,66,66,96,106,92,107,109,94,94,94,94,94,69,63,96,106,112,95,64,106,92,95,95,95,95,95,95,95,95,83,83,83,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,99,73,100,81,111,112,82,70,113,62,101,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,99,73,100,81,111,112,82,70,113,62,101,89,57,77,65,59,64,91,103,104,85,105,106,107,84,108,72,109,83,89,66,69,110,57,87,90,88,86,58,68,92,93,74,56,61,75,76,77,94,78,63,71,95,79,96,97,80,98,99,73,100,81,111,112,82,70,113,62,101,85,69,74,96,105,105,105,105,105,105,105,105,105,105,105,105,143,144,145,145,145,146,0,119,115,115,115,115,115,0,115,115,0,0,0,118,118,118,118,117,117,116,116,116,116,0,0,119,119,119,117,117,119,115,119,115,115,115,115,115,115,115,115,115,116,117,118,119,115,116,117,118,119,115,116,117,118,119,115,115,116,119,115,119,115,119,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,115,119,119,119,119,116,116,119,115,116,117,118,119,115,115,115,115,115,115,116,117,118,119,115,116,117,118,119,115,115,115,115,115,115,115,115,115,116,117,118,119,115,115,115,115,115,115,115,115,115,115,115,116,117,118,119,115,116,117,118,119,115,116,117,118,119,115,116,0,120,120,120,120,120,120,120,0,0,0,120,0,120,120,0,0,120,120,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,0,0,0,0,0,0,121,0,121,0,121,0,0,0,121,0,121,0,121,121,121,121,121,121,121,121,122,121,122,121,121,121,121,121,122,121,0,121,0,121,121,122,122,121,121,121,121,121,121,122,121,121,121,121,121,121,121,121,121,122,121,122,121,121,122,121,121,121,121,122,121,121,121,121,122,121,122,121,122,121,121,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147,148,0,0,0,0,0,0,0,0,0,125,126,126,0,0,0,0,128,128,128,128,128,128,128,128,0,125,126,126,125,126,0,123,50,50,50,50,127,127,127,127,127,127,127,127,0,0,0,0,50,50,126,126,126,0,125,126,126,125,126,125,126,50,123,124,50,50,50,50,50,50,50,50,125,126,127,128,124,123,50,125,126,127,128,124,123,149,124,124,124,50,125,126,127,128,123,50,150,124,50,50,0,150,124,124,123,50,124,0,50,50,125,126,127,128,0,50,151,124,124,50,50,50,50,50,50,125,126,127,128,124,123,123,50,125,126,127,128,124,123,50,50,50,50,50,0,0,50,50,50,149,124,124,124,50,50,50,125,126,127,128,124,123,50,50,124,124,152,124,124,124,0,0,0,0,0,0,123,50,50,50,124,50,50,123,123,123,123,123,123,123,123,123,123,0,50,50,50,153,124,50,149,124,124,124,50,125,126,127,128,124,123,50,125,126,127,128,124,123,149,124,124,124,50,125,126,127,128,124,123,50,123,0,0,0,0,0,0,0,0,0,129,129,129,129,129,129,129,129,129,129,0,0,0,0,0,134,0,0,134,134,132,133,134,0,0,131,131,0,0,0,0,0,0,0,131,131,133,132,132,132,132,132,132,132,132,132,132,0,0,132,133,0,0,0,0,0,0,0,0,0,0,0,0,0,132,0,0,0,130,0,0,131,134,133,132,131,131,0,0,0,0,133,133,133,134,133,134,133,134,133,132,131,131,131,0,0,131,130,131,0,0,131,132,0,0,0,0,0,130,0,0,0,0,0,0,131,132,132,131,134,134,134,134,131,0,0,0,132,0,0,0,0,0,0,131,132,131,131,131,131,132,132,132,132,132,130,0,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,132,0,0,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,130,130,130,130,131,131,131,131,131,132,132,132,132,132,133,133,133,133,133,134,134,134,134,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],0,0,0,0,0,[[1,1],2],0,[[1,3],4],[[]],0,0,[[]],0,[[]],0,0,0,0,[[],5],0,0,0,0,0,[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[8,8],[[]],[[9,9],2],[[10,10],2],[[11,11],2],[[12,12],2],[[13,13],2],[[14,14],2],[[15,15],2],[[8,8],2],[[9,3],4],[[10,3],4],[[11,3],4],[[12,3],4],[[13,3],4],[[14,3],4],[[15,3],4],[[8,3],4],[[16,8,14,9,10,11,12,13],15],[[16,8,14,9,10,11,12,13],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,18],[[]],0,[8],[[]],[[8,16]],[[],17],[15,17],[15],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[16],[5],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[15,17],[[],17],0,[8,17],[8,17],[8,17],0,0,0,0,[[]],[[]],[19],[[19,16,16]],[[]],[19,16],[[]],[18,19],[19,16],[[],6],[[],6],[[],7],[19,16],0,[20],[[]],[[]],[20,2],[[],20],[20],[20],[[20,3],4],[[]],[20,17],[[]],[[20,8]],[20],[[20,8,16]],[20,17],[[],20],[[20,15]],[[20,5]],[[],6],[[],6],[[20,16]],[[20,5]],[[],7],[20,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21],[[]],[[]],[21,2],[21],[21],[[21,3],4],[[]],[21,17],[[]],[[21,8]],[21],[[21,8,16]],[21,17],[[],21],[[21,15]],[[],6],[[],6],[[21,16]],[[21,5]],[[],7],[21,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],22],[[22,22],22],[[22,22]],[[22,22],22],[[22,22]],[22,17],[[22,22],22],[[22,22]],[[]],[[]],[[]],[22,22],[[22,22],23],[22,22],[[22,22],2],[[22,22],22],[[],22],[[22,22],2],[[22,24]],[[22,3],4],[[22,3],4],[[22,3],4],[[22,3],4],[[22,3],4],[[]],[17,[[25,[22]]]],[17,22],[17,22],[24,22],[1,22],[22],[[22,22]],[[22,22],22],[[22,22],2],[[]],[22,2],[22,2],[[],22],[22,22],[[22,22],[[25,[23]]]],[[22,22]],[[22,22,2]],[[]],[[22,22],22],[[22,22]],[[22,22],22],[[22,22]],[[],6],[[],6],[[],7],[[22,22],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[26,17]],[[26,18]],[[26,26]],[[27,27]],[[27,18]],[[27,17]],[[28,17]],[[28,28]],[[28,18]],[[26,26]],[[26,17]],[[27,27]],[[27,17]],[[28,18]],[[28,17]],[[28,28]],[29,26],[30,26],[26,26],[27,27],[28,28],[26,26],[27,27],[28,28],[26,26],[27,27],[28,28],[26,26],[27,27],[28,28],[[],31],[[],32],[26],[28],[26],[28],[26,17],[27,17],[28,17],[26,18],[27,18],[28,18],[26,17],[27,17],[28,17],[[26,26],26],[[26,17]],[[27,17]],[[27,27],27],[[28,28]],[[28,18]],[[28,17]],[[28,33]],[[31,31],31],[[32,32],32],[[31,31]],[[32,32]],[[26,26]],[[26,17]],[[27,17]],[[27,27]],[[28,18]],[[28,28],28],[[28,17]],[[31,31],31],[[32,32],32],[[31,31]],[[32,32]],[31,17],[32,17],[[31,31],31],[[32,32],32],[[31,31]],[[32,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[31,31],[29,29],[32,32],[30,30],[[26,26],23],[[27,27],23],[[28,28],23],[[31,31],23],[[32,32],23],[31,31],[32,32],[[31,31],2],[[32,32],2],[[31,31],31],[[32,32],32],[[],31],[[],32],[[26,26],2],[[27,27],2],[[28,28],2],[[31,31],2],[[32,32],2],[[31,24]],[[32,24]],[29,31],[30,32],[[26,3],4],[[26,3],4],[[26,3],4],[[26,3],4],[[26,3],4],[[26,3],4],[[26,3],4],[[27,3],4],[[27,3],4],[[27,3],4],[[27,3],4],[[27,3],4],[[27,3],4],[[27,3],4],[[28,3],4],[[28,3],4],[[28,3],4],[[28,3],4],[[28,3],4],[[28,3],4],[[28,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[29,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[32,3],4],[[30,3],4],[[]],[[]],[17,26],[33,26],[18,26],[[]],[18,27],[[]],[33,27],[17,27],[18,28],[33,28],[17,28],[[]],[[]],[[]],[[]],[[]],[17,[[25,[31]]]],[17,[[25,[32]]]],[17,31],[17,32],[17,31],[17,32],[24,31],[24,32],[17,28],[18,28],[26],[27],[28],[31],[32],[[31,31]],[[32,32]],[[31,31],31],[[32,32],32],[[31,31],2],[[32,32],2],[[]],[[]],[[]],[26,17],[26,18],[[]],[27,17],[27,18],[[]],[28,17],[28,18],[[]],[[]],[[]],[[]],[29,2],[30,2],[26,2],[27,2],[28,2],[31,2],[32,2],[26,2],[27,2],[28,2],[29,2],[30,2],[31,2],[32,2],[29,2],[30,2],[26,2],[27,2],[28,2],[29,2],[29,2],[30,2],[29,2],[30,2],[29,2],[30,2],[29,2],[30,2],[29,2],[30,2],[29,2],[30,2],[26,2],[27,2],[28,2],[26,17],[27,17],[28,17],[[26,31],29],[[26,32],30],[31,31],[32,32],[[26,26],[[25,[23]]]],[[27,27],[[25,[23]]]],[[28,28],[[25,[23]]]],[[31,31],[[25,[23]]]],[[32,32],[[25,[23]]]],[28,18],[28,18],[[26,18]],[[26,17]],[[26,26]],[[27,17]],[[27,18]],[[27,27]],[[28,28]],[28],[28],[[31,31]],[[32,32]],[[31,31,2]],[[32,32,2]],[[26,17]],[[27,17]],[[28,18]],[[28,17]],[[28,33]],[[26,26]],[[26,18]],[[26,17]],[[27,18]],[[27,27]],[[27,17]],[[28,28]],[[28,17]],[[28,18]],[[31,31],31],[[32,32],32],[[31,31]],[[32,32]],[[31,31],31],[[32,32],32],[[31,31]],[[32,32]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[31,31],31],[[32,32],32],[[],26],[[],27],[[],28],0,[[]],[[]],[34,34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[34,3],4],[[]],0,0,[[]],0,0,0,[[],34],0,0,0,0,[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[35,18]],[[35,35]],[[35,5]],[[36,36]],[[36,5]],[[36,18]],[[37,18]],[[37,5]],[[37,37]],[[35,5]],[[35,35]],[[36,36]],[[36,5]],[[37,5]],[[37,37]],[[37,18]],[38,35],[39,35],[40,35],[41,35],[42,35],[35,35],[36,36],[37,37],[35,35],[36,36],[37,37],[35,35],[36,36],[37,37],[35,35],[36,36],[37,37],[35,35],[36,36],[37,37],[35,35],[36,36],[37,37],[[],43],[[],44],[[],45],[[],46],[[],47],[37],[37],[35,5],[36,5],[37,5],[35,18],[36,18],[37,18],[35,5],[36,5],[37,5],[[35,5]],[[35,35],35],[[36,36],36],[[36,5]],[[37,37]],[[37,5]],[[37,18]],[[37,33]],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[[35,5]],[[35,35]],[[36,36]],[[36,5]],[[37,37],37],[[37,5]],[[37,18]],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[43,5],[44,5],[45,5],[46,5],[47,5],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[37,37],[43,43],[44,44],[38,38],[39,39],[45,45],[40,40],[46,46],[41,41],[47,47],[42,42],[[35,35],23],[[36,36],23],[[37,37],23],[[43,43],23],[[44,44],23],[[45,45],23],[[46,46],23],[[47,47],23],[43,43],[44,44],[45,45],[46,46],[47,47],[[43,43],2],[[44,44],2],[[45,45],2],[[46,46],2],[[47,47],2],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[],43],[[],44],[[],45],[[],46],[[],47],[[35,35],2],[[36,36],2],[[37,37],2],[[43,43],2],[[44,44],2],[[45,45],2],[[46,46],2],[[47,47],2],[[43,24]],[[44,24]],[[45,24]],[[46,24]],[[47,24]],[38,43],[39,44],[40,45],[41,46],[42,47],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[37,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[38,3],4],[[39,3],4],[[45,3],4],[[45,3],4],[[45,3],4],[[45,3],4],[[45,3],4],[[40,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[41,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[42,3],4],[[]],[[]],[[]],[33,35],[18,35],[5,35],[[]],[5,36],[[]],[18,36],[33,36],[33,37],[18,37],[[]],[5,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[25,[43]]]],[5,[[25,[44]]]],[5,[[25,[45]]]],[5,[[25,[46]]]],[5,[[25,[47]]]],[5,43],[5,44],[5,45],[5,46],[5,47],[5,43],[5,44],[5,45],[5,46],[5,47],[24,43],[24,44],[24,45],[24,46],[24,47],[5,37],[18,37],[35],[36],[37],[43],[44],[45],[46],[47],[35,5],[36,5],[37,5],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[43,43],2],[[44,44],2],[[45,45],2],[[46,46],2],[[47,47],2],[[]],[[]],[[]],[35,5],[[]],[35,18],[[]],[36,5],[36,18],[37,18],[[]],[37,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,2],[39,2],[40,2],[41,2],[42,2],[35,2],[36,2],[37,2],[43,2],[44,2],[45,2],[46,2],[47,2],[35,2],[36,2],[37,2],[41,2],[42,2],[43,2],[44,2],[45,2],[46,2],[47,2],[41,2],[42,2],[35,2],[36,2],[37,2],[38,2],[39,2],[40,2],[41,2],[42,2],[35,2],[36,2],[37,2],[40,2],[41,2],[38,2],[39,2],[40,2],[41,2],[42,2],[38,2],[39,2],[40,2],[41,2],[42,2],[40,2],[41,2],[38,2],[39,2],[40,2],[41,2],[42,2],[38,2],[39,2],[40,2],[41,2],[42,2],[38,2],[39,2],[40,2],[41,2],[42,2],[35,2],[36,2],[37,2],[35,5],[36,5],[37,5],[[35,43],38],[[35,44],39],[[35,45],40],[[35,46],41],[[35,47],42],[43,43],[44,44],[45,45],[46,46],[47,47],[[35,35],[[25,[23]]]],[[36,36],[[25,[23]]]],[[37,37],[[25,[23]]]],[[43,43],[[25,[23]]]],[[44,44],[[25,[23]]]],[[45,45],[[25,[23]]]],[[46,46],[[25,[23]]]],[[47,47],[[25,[23]]]],[37,18],[37,18],[37,18],[37,18],[37,18],[[35,18]],[[35,35]],[[35,5]],[[36,5]],[[36,18]],[[36,36]],[[37,37]],[37],[37],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[[43,43,2]],[[44,44,2]],[[45,45,2]],[[46,46,2]],[[47,47,2]],[[35,5]],[[36,5]],[[37,5]],[[37,18]],[[37,33]],[35],[36],[[35,5]],[[35,18]],[[35,35]],[[36,36]],[[36,5]],[[36,18]],[[37,18]],[[37,37]],[[37,5]],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[43,43]],[[44,44]],[[45,45]],[[46,46]],[[47,47]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[43,43],43],[[44,44],44],[[45,45],45],[[46,46],46],[[47,47],47],[[],35],[[],36],[[],37],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],48],[[48,48],48],[[48,48]],[[48,48],48],[[48,48]],[48,5],[[48,48],48],[[48,48]],[[]],[[]],0,[48,48],[[48,48],23],[48,48],[[48,48],2],[[48,48],48],[[],48],[[48,48],2],[[48,24]],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[]],[5,[[25,[48]]]],[5,48],[5,48],[24,48],[1,48],[5,48],[48],[[48,48]],[[48,48],48],[[48,48],2],[[]],[48,2],[48,2],[[],48],[48,48],[[48,48],[[25,[23]]]],[[],48],[[48,48]],[48],[[48,48,2]],0,[[48,48],48],[[48,48]],[[48,48],48],[[48,48]],[[],6],[[],6],[[],7],[[48,48],48],0,0,[[]],[[]],[49,49],[[],49],[[49,3],4],[[]],0,0,[[]],[50],[[],5],[[],5],[[49,5,5]],[[49,16]],[[49,50,5]],[[]],[[],6],[[],6],[[],7],[5],[5],[[5,5]],[[5,5]],[[5,5]],[5,17],[5,5],[[5,5]],[[5,5]],[[5,5,5],17],[[5,5,5],17],[[5,5,5],17],[[5,5],17],[[5,5],17],[[5,5]],[5],[5,17],[[5,5,5],17],[[5,5],17],[[5,5,5],17],[[5,5]],[[5,5]],[[5,5]],[[5,5]],[[5,5,5]],[[5,5]],[5,5],[[5,5],5],[[5,5,5],5],[[5,5,5,5],5],[[5,5,5,5,5],5],[[5,5,5,5,5,5],5],[[5,5,5,5,5,5,5],5],0,[[]],[[]],[51,51],[[],51],[[51,3],4],[[]],[[]],0,0,[[],51],0,0,0,0,0,[[51,18,5]],[[51,1,5]],[[],6],[[],6],[[],7],[5,52],[[],52],[5,52],[[],[[52,[5]]]],[17,[[52,[5]]]],[[],52],[[17,5],52],[[],52],[5,52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],53],[[],54],[[],55],[[53,53],53],[[54,54],54],[[55,55],55],[[53,53]],[[54,54]],[[55,55]],[[53,53],53],[[54,54],54],[[55,55],55],[[53,53]],[[54,54]],[[55,55]],[53,18],[54,18],[55,5],[[53,53],53],[[54,54],54],[[55,55],55],[[53,53]],[[54,54]],[[55,55]],[[]],[[]],[[]],[[]],[[]],[[]],[53,53],[54,54],[55,55],[[53,53],23],[[54,54],23],[[55,55],23],[53,53],[54,54],[55,55],[[53,53],2],[[54,54],2],[[55,55],2],[[],53],[53],[[],18],[5],[[],5],[5],[[],54],[54],[[53,53],53],[[54,54],54],[[55,55],55],[[],53],[[],54],[[],55],[[53,53],2],[[54,54],2],[[55,55],2],[[53,24]],[[54,24]],[[55,24]],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[54,3],4],[[54,3],4],[[54,3],4],[[54,3],4],[[54,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[]],[[]],[[]],[18,[[25,[53]]]],[18,[[25,[54]]]],[5,[[25,[55]]]],[18,53],[18,54],[5,55],[18,53],[18,54],[5,55],[24,53],[24,54],[24,55],[53],[54],[55],[[53,53]],[[54,54]],[[55,55]],[[53,53],53],[[54,54],54],[[55,55],55],[[53,53],2],[[54,54],2],[[55,55],2],[[]],[[]],[[]],[53,2],[54,2],[55,2],[53,2],[54,2],[55,2],[53,53],[54,54],[55,55],[[53,53],[[25,[23]]]],[[54,54],[[25,[23]]]],[[55,55],[[25,[23]]]],[[53,53]],[[54,54]],[[55,55]],[[53,53,2]],[[54,54,2]],[[55,55,2]],[[53,53],53],[[54,54],54],[[55,55],55],[[53,53]],[[54,54]],[[55,55]],[[53,53],53],[[54,54],54],[[55,55],55],[[53,53]],[[54,54]],[[55,55]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[53,53],53],[[54,54],54],[[55,55],55],[[],55],[55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56,2],[57,[[25,[17]]]],[58,16],[59,60],[61,60],[62,60],[61,60],[62,60],[63,18],[64,16],[64,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,17],[64,16],[66,67],[68,16],[69,16],[69,70],[63,71],[72,16],[73,16],[64,16],[74,74],[56,56],[75,75],[76,76],[77,77],[78,78],[63,63],[79,79],[80,80],[81,81],[82,82],[63,18],[83,16],[84,17],[85,16],[86,17],0,[87,88],[87,16],[87,16],[87,16],[[],74],[89,17],[77,60],[87,88],[90,88],[87,16],[90,67],[87,88],[90,88],[87,16],[90,67],[91,16],0,0,[85,16],0,0,[[87,87],2],[[90,90],2],[[88,88],2],[[86,86],2],[[58,58],2],[[68,68],2],[[92,92],2],[[93,93],2],[[56,56],2],[[61,61],2],[[75,75],2],[[94,94],2],[[63,63],2],[[71,71],2],[[95,95],2],[[96,96],2],[[97,97],2],[[98,98],2],[[99,99],2],[[73,73],2],[[100,100],2],[[70,70],2],[[62,62],2],[[101,101],2],[64,16],[64,16],[65,17],[95,2],[64,16],[85,16],[85,16],[[65,3],[[6,[102]]]],[[59,3],[[6,[102]]]],[[64,3],[[6,[102]]]],[[91,3],[[6,[102]]]],[[103,3],[[6,[102]]]],[[104,3],[[6,[102]]]],[[85,3],[[6,[102]]]],[[105,3],[[6,[102]]]],[[106,3],[[6,[102]]]],[[107,3],[[6,[102]]]],[[84,3],[[6,[102]]]],[[108,3],[[6,[102]]]],[[72,3],[[6,[102]]]],[[109,3],[[6,[102]]]],[[83,3],[[6,[102]]]],[[89,3],[[6,[102]]]],[[66,3],[[6,[102]]]],[[69,3],[[6,[102]]]],[[110,3],[[6,[102]]]],[[57,3],[[6,[102]]]],[[87,3],[[6,[102]]]],[[90,3],[[6,[102]]]],[[88,3],[[6,[102]]]],[[88,3],[[6,[102]]]],[[86,3],[[6,[102]]]],[[58,3],[[6,[102]]]],[[68,3],[[6,[102]]]],[[92,3],[[6,[102]]]],[[93,3],[[6,[102]]]],[[74,3],[[6,[102]]]],[[56,3],[[6,[102]]]],[[61,3],[[6,[102]]]],[[61,3],[[6,[102]]]],[[75,3],[[6,[102]]]],[[76,3],[[6,[102]]]],[[77,3],[[6,[102]]]],[[77,3],[[6,[102]]]],[[94,3],[[6,[102]]]],[[78,3],[[6,[102]]]],[[63,3],[[6,[102]]]],[[71,3],[[6,[102]]]],[[71,3],[[6,[102]]]],[[95,3],[[6,[102]]]],[[79,3],[[6,[102]]]],[[96,3],[[6,[102]]]],[[97,3],[[6,[102]]]],[[97,3],[[6,[102]]]],[[80,3],[[6,[102]]]],[[98,3],[[6,[102]]]],[[98,3],[[6,[102]]]],[[99,3],[[6,[102]]]],[[99,3],[[6,[102]]]],[[73,3],[[6,[102]]]],[[100,3],[[6,[102]]]],[[81,3],[[6,[102]]]],[[111,3],[[6,[102]]]],[[112,3],[[6,[102]]]],[[82,3],[[6,[102]]]],[[70,3],[[6,[102]]]],[[70,3],[[6,[102]]]],[[113,3],[[6,[102]]]],[[62,3],[[6,[102]]]],[[62,3],[[6,[102]]]],[[101,3],[[6,[102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,[[25,[86]]]],[74,[[25,[75]]]],[74,[[25,[78]]]],[104,17],[74,[[25,[82]]]],[74,[[25,[104]]]],[74,[[25,[103]]]],[74,[[25,[65]]]],[74,[[25,[105]]]],[74,[[25,[79]]]],[74,[[25,[79]]]],[74,[[25,[64]]]],[74,[[25,[57]]]],[74,[[25,[87]]]],[74,[[25,[90]]]],[74,[[25,[68]]]],[74,[[25,[95]]]],[74,[[25,[85]]]],[74,[[25,[93]]]],[74,[[25,[59]]]],[74,[[25,[58]]]],[74,[[25,[66]]]],[74,[[25,[94]]]],[74,[[25,[83]]]],[110,17],[74,[[25,[108]]]],[74,[[25,[107]]]],[74,[[25,[109]]]],[110,67],[74,[[25,[110]]]],[110,17],[74,[[25,[92]]]],[74,[[25,[91]]]],[74,[[25,[89]]]],[110,[[25,[113]]]],[110,[[25,[62]]]],[74,[[25,[61]]]],[58,16],[86,2],[69,2],[65,2],[69,2],[65,2],[69,2],[69,2],[65,2],[68,2],[64,2],[65,2],[103,2],[64,2],[65,2],[68,2],[65,2],[85,2],[64,2],[91,2],[92,2],[64,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[103,2],[58,2],[64,2],[103,2],[103,2],[64,2],[65,2],[64,2],[64,2],[64,2],[72,2],[63,2],[83,2],[86,2],[64,2],[65,2],[64,2],[64,2],[68,2],[92,2],[64,2],[64,2],[91,2],[91,2],[64,2],[109,2],[109,2],[91,2],[65,2],[65,2],[64,2],[65,2],[103,2],[86,2],[91,2],[92,2],[64,2],[65,2],[93,2],[93,2],[64,2],[103,2],[86,2],[103,2],[64,2],[92,2],[92,2],[91,2],[103,2],[92,2],[64,2],[91,2],[68,2],[86,2],[86,2],[91,2],[91,2],[91,2],[91,2],[91,2],[91,2],[91,2],[91,2],[64,2],[65,2],[91,2],[58,2],[58,2],[86,2],[58,2],[58,2],[103,2],[83,2],[108,2],[108,2],[107,2],[65,2],[92,2],[100,2],[83,2],[84,2],[65,2],[65,2],[64,2],[86,2],[64,2],[58,2],[108,2],[65,2],[64,2],[65,2],[64,2],[65,2],[64,2],[93,2],[103,2],[64,2],[83,2],[64,2],[65,2],[92,2],[92,2],[84,2],[103,2],[65,2],[64,2],[64,2],[68,2],[64,2],[92,2],[92,2],[64,2],[64,2],[64,2],[64,2],[65,2],[65,2],[65,2],[64,2],[103,2],[91,2],[64,2],[83,2],[86,2],[65,2],[103,2],[68,2],[103,2],[64,2],[64,2],[64,2],[91,2],[83,2],[103,2],[58,2],[64,2],[103,2],[103,2],[103,2],[65,2],[103,2],[58,2],[68,2],[86,2],[83,2],[103,2],[68,2],[68,2],[68,2],[103,2],[109,2],[109,2],[103,2],[103,2],[83,2],[65,2],[103,2],[68,2],[103,2],[64,2],[92,2],[64,2],[64,2],[64,2],[64,2],[64,2],[64,2],[65,2],[92,2],[64,2],[86,2],[65,2],[92,2],[65,2],[64,2],[65,2],[86,2],[92,2],[64,2],[86,2],[64,2],[83,2],[83,2],[65,2],[84,2],[83,2],[86,2],[64,2],[103,2],[64,2],[92,2],[91,2],[91,2],[103,2],[58,2],[92,2],[64,2],[68,2],[92,2],[64,2],[86,2],[68,2],[58,2],[65,2],[64,2],[105,2],[65,2],[64,2],[105,2],[105,2],[105,2],[72,67],[73,67],[100,67],[105,2],[105,2],[87,88],[87,16],[87,16],[87,16],[57,101],[64,16],[95,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,67],[85,2],[85,2],[85,2],[106,2],[85,2],[69,2],[63,2],[106,2],[106,2],[63,2],[85,2],[85,2],[85,2],[63,2],[63,2],[72,17],[73,17],[105,80],[109,81],[87,88],[90,88],[87,16],[90,67],[87,88],[90,88],[87,16],[90,67],[108,[[25,[73]]]],[90,88],[90,16],[90,16],[90,67],[108,[[25,[72]]]],[107,[[25,[84]]]],[90,88],[90,16],[90,16],[90,67],[95,67],[63,16],[96,16],[96,97],[58,16],[106,99],[103,16],[69,67],[63,18],[63,18],[109,16],[109,16],[68,17],[100,67],[64,16],[58,67],[58,18],[84,17],[108,[[25,[100]]]],[68,17],[109,17],[64,16],0,[[],74],[75,[[25,[77]]]],[78,[[25,[63]]]],[79,[[25,[96]]]],[80,[[25,[106]]]],[81,[[25,[111]]]],[82,[[25,[69]]]],[113,[[25,[56]]]],[89,17],0,[58,18],[85,16],[89,17],[106,17],[69,16],[58,18],[58,16],[68,16],[112,5],[63,18],[65,17],[66,67],[66,67],[96,67],[106,98],[92,16],[107,17],[109],[94,5],[94,114],[94,17],[94,17],[94,17],[69,17],[63,18],[96,17],[106,17],[112,5],[95,67],[64,16],0,[92,17],[95,67],[95,67],[95,67],[95,67],[95,67],[95,67],[95,67],[95,67],[83,67],[83,67],[83,67],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[89,[[25,[5]]]],[57,[[25,[17]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[85,16],[69,67],[[],74],[96,17],[105,2],[105,2],[105,2],[105,2],[105,2],[105,2],[105,2],[105,2],[105,2],[105,17],[105,17],[105,17],0,0,0,0,0,0,[[17,17],56],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],115],[[115,115],115],[[115,115]],[[115,115],115],[[115,115]],[115,18],[[115,115],115],[[115,115]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,115],[116,116],[117,117],[118,118],[119,119],[[115,115],23],[115,115],[[116,18,117,118]],[[119,116,117,118]],[[115,115],2],[[],119],[[115,115],115],[[119,116,2]],[116],[116],[116,18],[[],18],[18],[[],18],[18],[[],18],[18],[[],18],[18],[[],115],[115],[[],119],[119],[[],115],[[119,116,2]],[119],[119],[119],[116],[116],[119],[[115,115],2],[[116,116],2],[[117,117],2],[[118,118],2],[[119,119],2],[[115,24]],[[115,3],4],[[115,3],4],[[115,3],4],[[115,3],4],[[115,3],4],[[116,3],4],[[117,3],4],[[118,3],4],[[119,3],4],[[]],[[]],[[]],[[]],[[]],[18,[[25,[115]]]],[18,115],[18,115],[24,115],[115],[[115,115]],[[115,115],115],[[115,115],2],[[]],[[]],[[]],[[]],[[]],[115,2],[115,2],[115,115],[[115,115],[[25,[23]]]],[[115,115]],[[115,115,2]],[[115,115],115],[[115,115]],[[115,115],115],[[115,115]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[115,115],115],[[116,18]],0,0,[[]],[[]],[[],120],[[120,3],4],[[]],[[]],[[],50],[120],[120],0,[50],[[],120],[[],120],[120],[120],[[],6],[[],6],[[],7],[[]],[[]],[[]],[67,16],[67,17],[67,67],[[67,16]],[[67,17]],[[67,67]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],121],[[121,121],121],[[121,121]],[[121,121],121],[[121,121]],[121,17],[[121,121],121],[[121,121]],[[]],[[]],[[]],[[]],[121,121],[[121,121],23],[121,121],[[121,121],2],0,[[121,121],121],[[]],[[],121],[[]],[[121,121],2],[[121,24]],[[122,3],4],[[122,3],4],[[121,3],4],[[121,3],4],[[121,3],4],[[121,3],4],[[121,3],4],[[121,3],4],[[]],[[]],[17,[[25,[121]]]],[17,121],[17,121],[24,121],[121],[[121,121]],[[121,121],121],[[121,121],2],[[]],[[]],0,[121,2],[121,2],0,[121,121],[[121,121],[[25,[23]]]],[[121,121]],[[121,121,2]],0,[[121,121],121],[[121,121]],[[121,121],121],[[121,121]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[121,121],121],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,5],[[17,5]],0,0,[[],2],[[],2],[67,2],[17,2],[5,2],[[],2],[67,2],[17,2],[5,2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],50],[123,5],[124,124],[[50,50],50],[[50,50]],[[50,50],50],[[50,50]],[50,67],[[50,50],50],[[50,50]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50],[[50,67],124],[[50,17],124],[[50,5],124],[50,50],[125,125],[126,126],[127,127],[128,128],[123,123],[[50,50],23],[128],[[17,17,128],124],[50,50],[[50,50],2],[[],50],[127],[[17,17,127],124],[124,124],[[],123],[[50,50],50],[[124,1],124],[[],50],[[],50],[[50,50],2],[[125,125],2],[[126,126],2],[[127,127],2],[[128,128],2],[[],50],[[50,24]],[[]],[124,49],[124,123],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[125,3],4],[[126,3],4],[[127,3],4],[[128,3],4],[[124,3],4],[[123,3],4],[[123,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,[[25,[50]]]],[67,50],[67,50],[24,50],[67,50],[[],50],[[],50],[50],[50,67],[[50,50]],[50],[[50,67],124],[[50,5],124],[[50,17],124],[[50,50],50],[[50,50],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,2],[50,2],[[124,16],124],[124,124],[[]],[[5,5],124],[[17,17],124],[124,124],0,[50],[50],[50],[50],[50],0,[[67,1],50],[50,50],[[50,50],[[25,[23]]]],[124,124],[[50,50]],[[50,50,2]],[123],[[123,17,17]],[123],[[123,1]],[123],[123],[123],[123],[[123,50,17]],[[123,16]],[[],50],[[50,50],50],[[50,50]],[[50,50],50],[50],[50,124],[[50,50]],[50],[[50,5],124],[[50,67],124],[[50,17],124],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[5,5,2]],[[5,5,2],124],[[5,5,2],124],[[5,5,2],124],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[50,50],50],0,[50],0,[[],50],[[],5],[[]],[18],[[]],0,0,0,0,[[]],[[]],[[129,3],4],[[]],[[]],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],130],[[],131],[[],132],[[],133],[[],134],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[130,17],[131,17],[132,17],[133,17],[134,17],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,130],[131,131],[132,132],[133,133],[134,134],[[130,130],23],[[131,131],23],[[132,132],23],[[133,133],23],[[134,134],23],[130,130],[131,131],[132,132],[133,133],[134,134],[[130,130],2],[[131,131],2],[[132,132],2],[[133,133],2],[[134,134],2],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[],130],[[],131],[[],132],[[],133],[[],134],[[130,130],2],[[131,131],2],[[132,132],2],[[133,133],2],[[134,134],2],[[130,24]],[[131,24]],[[132,24]],[[133,24]],[[134,24]],[[130,3],4],[[130,3],4],[[130,3],4],[[130,3],4],[[130,3],4],[[131,3],4],[[131,3],4],[[131,3],4],[[131,3],4],[[131,3],4],[[132,3],4],[[132,3],4],[[132,3],4],[[132,3],4],[[132,3],4],[[133,3],4],[[133,3],4],[[133,3],4],[[133,3],4],[[133,3],4],[[134,3],4],[[134,3],4],[[134,3],4],[[134,3],4],[[134,3],4],[[]],[[]],[[]],[[]],[[]],[17,[[25,[130]]]],[17,[[25,[131]]]],[17,[[25,[132]]]],[17,[[25,[133]]]],[17,[[25,[134]]]],[17,130],[17,131],[17,132],[17,133],[17,134],[17,130],[17,131],[17,132],[17,133],[17,134],[24,130],[24,131],[24,132],[24,133],[24,134],[130],[131],[132],[133],[134],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[130,130],2],[[131,131],2],[[132,132],2],[[133,133],2],[[134,134],2],[[]],[[]],[[]],[[]],[[]],[130,2],[131,2],[132,2],[133,2],[134,2],[130,2],[131,2],[132,2],[133,2],[134,2],[130,130],[131,131],[132,132],[133,133],[134,134],[[130,130],[[25,[23]]]],[[131,131],[[25,[23]]]],[[132,132],[[25,[23]]]],[[133,133],[[25,[23]]]],[[134,134],[[25,[23]]]],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[[130,130,2]],[[131,131,2]],[[132,132,2]],[[133,133,2]],[[134,134,2]],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],[[130,130]],[[131,131]],[[132,132]],[[133,133]],[[134,134]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[130,130],130],[[131,131],131],[[132,132],132],[[133,133],133],[[134,134],134],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"Ring"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"ApicId"],[4,"DeliveryMode"],[4,"DestinationMode"],[4,"DeliveryStatus"],[4,"Level"],[4,"TriggerMode"],[4,"DestinationShorthand"],[3,"Icr"],[15,"u8"],[15,"u32"],[15,"usize"],[3,"IoApic"],[3,"X2APIC"],[3,"XAPIC"],[3,"EFlags"],[4,"Ordering"],[8,"IntoIterator"],[4,"Option"],[3,"PAddr"],[3,"IOAddr"],[3,"VAddr"],[3,"PDEntry"],[3,"PTEntry"],[3,"PDFlags"],[3,"PTFlags"],[15,"i32"],[3,"TaskStateSegment"],[3,"PAddr"],[3,"IOAddr"],[3,"VAddr"],[3,"PML4Entry"],[3,"PML5Entry"],[3,"PDPTEntry"],[3,"PDEntry"],[3,"PTEntry"],[3,"PML4Flags"],[3,"PML5Flags"],[3,"PDPTFlags"],[3,"PDFlags"],[3,"PTFlags"],[3,"RFlags"],[3,"Descriptor64"],[3,"SegmentSelector"],[3,"TaskStateSegment"],[6,"Result"],[3,"Cr0"],[3,"Cr4"],[3,"Xcr0"],[3,"CpuIdResult"],[3,"HypervisorInfo"],[3,"ProcessorCapacityAndFeatureInfo"],[3,"ProcessorBrandString"],[15,"str"],[3,"VendorInfo"],[3,"SoCVendorBrand"],[3,"CacheParameter"],[3,"FeatureInfo"],[3,"ExtendedProcessorFeatureIdentifiers"],[3,"ProcessorFrequencyInfo"],[15,"u16"],[3,"MemoryEncryptionInfo"],[3,"DatInfo"],[4,"DatType"],[4,"CacheType"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"CpuId"],[3,"CacheInfoIter"],[4,"CacheInfoType"],[3,"CacheInfo"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"ProcessorTraceInfo"],[3,"L3MonitoringInfo"],[3,"PerformanceMonitoringInfo"],[3,"ApmInfo"],[3,"L1CacheTlbInfo"],[4,"Associativity"],[3,"TscInfo"],[3,"L2And3CacheTlbInfo"],[3,"ThermalPowerInfo"],[3,"SvmFeatures"],[3,"PerformanceOptimizationInfo"],[3,"ProcessorSerial"],[3,"MonitorMwaitInfo"],[3,"ExtendedTopologyLevel"],[4,"TopologyType"],[4,"ExtendedRegisterType"],[4,"ExtendedRegisterStateLocation"],[3,"MemBwAllocationInfo"],[4,"Hypervisor"],[3,"Error"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"RdtAllocationInfo"],[3,"SgxInfo"],[3,"SoCVendorInfo"],[4,"SgxSectionInfo"],[3,"EpcSection"],[3,"SoCVendorAttributesIter"],[15,"u128"],[3,"Dr6"],[4,"Breakpoint"],[4,"BreakCondition"],[4,"BreakSize"],[3,"Dr7"],[3,"DescriptorTablePointer"],[3,"PageFaultError"],[3,"InterruptDescription"],[3,"Descriptor"],[3,"DescriptorBuilder"],[4,"SystemDescriptorTypes64"],[4,"SystemDescriptorTypes32"],[4,"DataSegmentType"],[4,"CodeSegmentType"],[4,"VmFail"],[3,"PinbasedControls"],[3,"PrimaryControls"],[3,"SecondaryControls"],[3,"EntryControls"],[3,"ExitControls"],[8,"ApicControl"],[13,"XApic"],[13,"X2Apic"],[3,"Page"],[3,"LargePage"],[3,"Page"],[3,"LargePage"],[3,"HugePage"],[13,"NWay"],[13,"Unknown"],[13,"Unknown"],[13,"Epc"],[8,"RdRand"],[8,"RdSeed"],[8,"GateDescriptorBuilder"],[8,"SegmentDescriptorBuilder"],[8,"BuildDescriptor"],[8,"LdtDescriptorBuilder"],[8,"TaskGateDescriptorBuilder"]]},\
"x86_64":{"doc":"This crate provides x86_64 specific functions and data …","t":[2,4,13,13,13,13,2,0,2,2,11,11,11,11,11,11,11,11,0,11,0,14,14,0,11,11,11,12,12,3,3,3,3,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,5,0,0,5,0,0,0,5,5,5,5,5,5,6,3,2,8,6,2,8,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,5,13,13,13,4,3,13,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,0,0,0,2,2,2,0,0,2,2,0,18,18,18,3,3,3,3,3,3,3,18,18,18,2,2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,4,4,13,13,8,4,3,13,3,13,3,13,3,13,3,3,3,3,3,18,18,18,18,18,18,13,13,18,18,18,18,18,13,13,13,13,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,3,3,18,3,3,18,18,18,18,18,18,3,18,18,18,3,18,18,18,18,18,18,18,18,18,3,18,3,18,3,18,18,18,3,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,5,5,12,18,3,3,3,3,3,18,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,18,18,18,18,18,18,18,18,18,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,0,0,11,12,0,0,11,11,0,11,18,18,18,18,18,18,18,4,3,18,18,3,18,18,18,18,18,18,18,2,13,18,18,18,18,13,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,18,13,13,4,13,6,6,13,13,3,3,4,13,6,13,6,6,13,18,13,3,3,3,13,13,13,18,13,13,13,18,18,13,3,6,18,18,18,13,13,3,13,13,18,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,12,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,10,0,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,8,4,13,13,13,13,4,4,13,4,3,8,8,3,3,13,13,13,3,13,13,13,13,8,13,13,13,13,3,13,13,13,8,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,8,3,3,3,8,18,18,18,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,4,13,18,18,13,18,18,13,18,3,3,3,3,3,4,13,13,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,3,11,11,11,11,11,12,11,12,11,12,11,11,11],"n":["PhysAddr","PrivilegeLevel","Ring0","Ring1","Ring2","Ring3","VirtAddr","addr","align_down","align_up","borrow","borrow_mut","clone","eq","fmt","from","from_u16","hash","instructions","into","registers","set_general_handler","software_interrupt","structures","try_from","try_into","type_id","0","0","PhysAddr","PhysAddrNotValid","VirtAddr","VirtAddrNotValid","add","add","add","add","add_assign","add_assign","add_assign","add_assign","align_down","align_down","align_down","align_up","align_up","align_up","as_mut_ptr","as_ptr","as_u64","as_u64","backward_checked","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from_ptr","hash","hash","into","into","into","into","is_aligned","is_aligned","is_null","is_null","new","new","new_truncate","new_truncate","new_unsafe","new_unsafe","p1_index","p2_index","p3_index","p4_index","page_offset","page_table_index","partial_cmp","partial_cmp","steps_between","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","type_id","zero","zero","bochs_breakpoint","hlt","interrupts","nop","port","random","read_rip","segmentation","tables","tlb","are_enabled","disable","enable","enable_and_hlt","int3","without_interrupts","Port","PortGeneric","PortRead","PortReadAccess","PortReadOnly","PortWrite","PortWriteAccess","PortWriteOnly","ReadOnlyAccess","ReadWriteAccess","WriteOnlyAccess","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","RdRand","borrow","borrow_mut","clone","fmt","from","get_u16","get_u32","get_u64","into","new","try_from","try_into","type_id","CS","DS","ES","FS","GS","SS","Segment","Segment64","cs","load_ds","load_es","load_fs","load_gs","load_ss","rdfsbase","rdgsbase","set_cs","swap_gs","wrfsbase","wrgsbase","DescriptorTablePointer","lgdt","lidt","load_tss","sgdt","sidt","Address","All","AllExceptGlobal","InvPicdCommand","Pcid","Single","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","eq","flush","flush_all","flush_pcid","fmt","fmt","from","from","hash","into","into","new","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","value","0","0","1","control","debug","model_specific","mxcsr","rdfsbase","rdgsbase","read_rip","rflags","segmentation","wrfsbase","wrgsbase","xcontrol","ALIGNMENT_MASK","CACHE_DISABLE","CONTROL_FLOW_ENFORCEMENT","Cr0","Cr0Flags","Cr2","Cr3","Cr3Flags","Cr4","Cr4Flags","DEBUGGING_EXTENSIONS","EMULATE_COPROCESSOR","EXTENSION_TYPE","Efer","EferFlags","FSGSBASE","KEY_LOCKER","L5_PAGING","MACHINE_CHECK_EXCEPTION","MONITOR_COPROCESSOR","NOT_WRITE_THROUGH","NUMERIC_ERROR","OSFXSR","OSXMMEXCPT_ENABLE","OSXSAVE","PAGE_GLOBAL","PAGE_LEVEL_CACHE_DISABLE","PAGE_LEVEL_WRITETHROUGH","PAGE_SIZE_EXTENSION","PAGING","PCID","PERFORMANCE_MONITOR_COUNTER","PHYSICAL_ADDRESS_EXTENSION","PROTECTED_MODE_ENABLE","PROTECTED_MODE_VIRTUAL_INTERRUPTS","PROTECTION_KEY","PROTECTION_KEY_SUPERVISOR","PROTECTION_KEY_USER","SAFER_MODE_EXTENSIONS","SUPERVISOR_MODE_ACCESS_PREVENTION","SUPERVISOR_MODE_EXECUTION_PROTECTION","TASK_SWITCHED","TIMESTAMP_DISABLE","USER_MODE_INSTRUCTION_PREVENTION","VIRTUAL_8086_MODE_EXTENSIONS","VIRTUAL_MACHINE_EXTENSIONS","WRITE_PROTECT","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","read","read","read","read","read_pcid","read_raw","read_raw","read_raw","read_raw","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","update","update","write","write","write","write_pcid","write_raw","write_raw","ACCESS_DETECTED","BreakpointCondition","BreakpointSize","DataReadsWrites","DataWrites","DebugAddressRegister","DebugAddressRegisterNumber","Dr0","Dr0","Dr1","Dr1","Dr2","Dr2","Dr3","Dr3","Dr6","Dr6Flags","Dr7","Dr7Flags","Dr7Value","GENERAL_DETECT_ENABLE","GLOBAL_BREAKPOINT_0_ENABLE","GLOBAL_BREAKPOINT_1_ENABLE","GLOBAL_BREAKPOINT_2_ENABLE","GLOBAL_BREAKPOINT_3_ENABLE","GLOBAL_EXACT_BREAKPOINT_ENABLE","InstructionExecution","IoReadsWrites","LOCAL_BREAKPOINT_0_ENABLE","LOCAL_BREAKPOINT_1_ENABLE","LOCAL_BREAKPOINT_2_ENABLE","LOCAL_BREAKPOINT_3_ENABLE","LOCAL_EXACT_BREAKPOINT_ENABLE","Length1B","Length2B","Length4B","Length8B","NUM","RESTRICTED_TRANSACTIONAL_MEMORY","RTM","STEP","SWITCH","TRAP","TRAP0","TRAP1","TRAP2","TRAP3","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","complement","complement","condition","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get","global_breakpoint_enable","hash","hash","insert","insert","insert_flags","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","local_breakpoint_enable","new","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","remove_flags","set","set","set_condition","set_flags","set_size","size","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","toggle_flags","trap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","write","write","write","write","write","write","write_raw","CetFlags","Efer","EferFlags","FAST_FXSAVE_FXRSTOR","FsBase","GsBase","IBT_ENABLE","IBT_LEGACY_ENABLE","IBT_LEGACY_SUPPRESS_ENABLE","IBT_NO_TRACK_ENABLE","IBT_SUPPRESS_ENABLE","IBT_TRACKED","KernelGsBase","LONG_MODE_ACTIVE","LONG_MODE_ENABLE","LONG_MODE_SEGMENT_LIMIT_ENABLE","LStar","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","Msr","NO_EXECUTE_ENABLE","SCet","SECURE_VIRTUAL_MACHINE_ENABLE","SFMask","SS_ENABLE","SS_WRITE_ENABLE","SYSTEM_CALL_EXTENSIONS","Star","TRANSLATION_CACHE_EXTENSION","UCet","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update","write","write","write","write","write","write","write","write","write","write","write_raw","write_raw","DENORMAL","DENORMALS_ARE_ZEROS","DENORMAL_MASK","DIVIDE_BY_ZERO","DIVIDE_BY_ZERO_MASK","FLUSH_TO_ZERO","INVALID_OPERATION","INVALID_OPERATION_MASK","MxCsr","OVERFLOW","OVERFLOW_MASK","PRECISION","PRECISION_MASK","ROUNDING_CONTROL_NEGATIVE","ROUNDING_CONTROL_POSITIVE","ROUNDING_CONTROL_ZERO","UNDERFLOW","UNDERFLOW_MASK","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","default","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","read","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","ALIGNMENT_CHECK","AUXILIARY_CARRY_FLAG","CARRY_FLAG","DIRECTION_FLAG","ID","INTERRUPT_FLAG","IOPL_HIGH","IOPL_LOW","NESTED_TASK","OVERFLOW_FLAG","PARITY_FLAG","RESUME_FLAG","RFlags","SIGN_FLAG","TRAP_FLAG","VIRTUAL_8086_MODE","VIRTUAL_INTERRUPT","VIRTUAL_INTERRUPT_PENDING","ZERO_FLAG","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","write_raw","0","BASE","CS","DS","ES","FS","GS","NULL","SS","Segment","Segment64","SegmentSelector","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","cmp","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","hash","index","into","into","into","into","into","into","into","new","partial_cmp","read_base","read_base","read_base","rpl","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_rpl","swap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_base","write_base","write_base","AVX","BNDCSR","BNDREG","HI16_ZMM","LWP","MPK","OPMASK","SSE","X87","XCr0","XCr0Flags","YMM","ZMM_HI256","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","write","write_raw","DescriptorTablePointer","base","borrow","borrow_mut","clone","fmt","from","gdt","idt","into","limit","paging","port","try_from","try_into","tss","type_id","ACCESSED","AVAILABLE","BASE_0_23","BASE_24_31","CONFORMING","DEFAULT_SIZE","DPL_RING_3","Descriptor","DescriptorFlags","EXECUTABLE","GRANULARITY","GlobalDescriptorTable","KERNEL_CODE32","KERNEL_CODE64","KERNEL_DATA","LIMIT_0_15","LIMIT_16_19","LONG_MODE","PRESENT","SegmentSelector","SystemSegment","USER_CODE32","USER_CODE64","USER_DATA","USER_SEGMENT","UserSegment","WRITABLE","add_entry","all","as_raw_slice","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw_slice","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","kernel_code_segment","kernel_data_segment","load","load_unsafe","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","tss_segment","type_id","type_id","type_id","union","user_code_segment","user_data_segment","0","0","1","AlignmentCheck","BoundRange","Breakpoint","CAUSED_BY_WRITE","ControlProtection","Debug","DescriptorTable","DeviceNotAvailable","DivergingHandlerFunc","DivergingHandlerFuncWithErrCode","Division","Double","Entry","EntryOptions","ExceptionVector","Gdt","GeneralHandlerFunc","GeneralProtection","HandlerFunc","HandlerFuncWithErrCode","HypervisorInjection","INSTRUCTION_FETCH","Idt","InterruptDescriptorTable","InterruptStackFrame","InterruptStackFrameValue","InvalidOpcode","InvalidTss","Ldt","MALFORMED_TABLE","MachineCheck","NonMaskableInterrupt","Overflow","PROTECTION_KEY","PROTECTION_VIOLATION","Page","PageFaultErrorCode","PageFaultHandlerFunc","RMP","SGX","SHADOW_STACK","Security","SegmentNotPresent","SelectorErrorCode","SimdFloatingPoint","Stack","USER_MODE","Virtualization","VmmCommunication","X87FloatingPoint","alignment_check","all","as_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","clone","clone","clone","clone","clone","clone","clone","clone","cmp","code_segment","complement","contains","cpu_flags","debug","deref","descriptor_table","device_not_available","difference","disable_interrupts","divide_error","double_fault","empty","eq","eq","eq","eq","eq","eq","extend","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","general_protection_fault","handler_addr","hash","hash","hash","index","index","index_mut","insert","instruction_pointer","intersection","intersects","into","into","into","into","into","into","into","into","into","invalid_opcode","invalid_tss","is_all","is_empty","is_null","load","load_unsafe","machine_check","missing","new","new","new_truncate","non_maskable_interrupt","not","overflow","page_fault","partial_cmp","remove","reset","security_exception","segment_not_present","set","set_handler_addr","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_present","set_privilege_level","set_stack_index","simd_floating_point","slice","slice_mut","stack_pointer","stack_segment","stack_segment_fault","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtualization","vmm_communication_exception","x87_floating_point","FrameAllocator","FrameDeallocator","MappedPageTable","Mapper","OffsetPageTable","Page","PageOffset","PageSize","PageTable","PageTableFlags","PageTableIndex","PhysFrame","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","allocate_frame","deallocate_frame","frame","mapper","page","page_table","PhysFrame","PhysFrameRange","PhysFrameRangeInclusive","add","add_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","containing_address","end","end","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","partial_cmp","range","range_inclusive","size","start","start","start_address","sub","sub","sub_assign","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CleanUp","FlagUpdateError","FrameAllocationFailed","InvalidFrameAddress","InvalidFrameAddress","InvalidFrameAddress","InvalidPageTable","MapToError","Mapped","MappedFrame","MappedPageTable","Mapper","MapperAllSizes","MapperFlush","MapperFlushAll","NotActive","NotMapped","NotRecursive","OffsetPageTable","PageAlreadyMapped","PageNotMapped","PageNotMapped","PageNotMapped","PageTableFrameMapping","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","TranslateError","TranslateResult","UnmapError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_up","clean_up","clean_up","clean_up","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","default","flush","flush_all","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_to_pointer","from","from","from","from","from","from","from","from","from","from","from","from","identity_map","ignore","ignore","into","into","into","into","into","into","into","into","into","into","into","into","level_4_table","level_4_table","level_4_table","map_to","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","new","new","new","new","new","new_unchecked","page_table_frame_mapping","phys_offset","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","size","start_address","translate","translate","translate","translate","translate_addr","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","0","0","0","0","0","0","flags","frame","offset","0","AddressNotAligned","NotGiantPageSize","Page","PageRange","PageRangeInclusive","PageSize","SIZE","SIZE","SIZE_AS_DEBUG_STR","Size1GiB","Size2MiB","Size4KiB","add","add_assign","as_4kib_page_range","backward_checked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","containing_address","end","end","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from","from","from","from_page_table_indices","from_page_table_indices_1gib","from_page_table_indices_2mib","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","p1_index","p2_index","p3_index","p4_index","page_table_index","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range","range_inclusive","size","start","start","start_address","steps_between","sub","sub","sub_assign","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","Four","FrameError","FrameNotPresent","GLOBAL","HUGE_PAGE","HugeFrame","NO_CACHE","NO_EXECUTE","One","PRESENT","PageOffset","PageTable","PageTableEntry","PageTableFlags","PageTableIndex","PageTableLevel","Three","Two","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","addr","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","complement","contains","default","difference","empty","entry_address_space_alignment","eq","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","is_unused","iter","iter_mut","new","new","new","new","new_truncate","new_truncate","next_lower_level","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","set_addr","set_flags","set_frame","set_unused","sub","sub_assign","symmetric_difference","table_address_space_alignment","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","zero","PortRead","PortWrite","read_from_port","write_to_port","TaskStateSegment","borrow","borrow_mut","clone","fmt","from","interrupt_stack_table","into","iomap_base","new","privilege_stack_table","try_from","try_into","type_id"],"q":["x86_64","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::instructions","","","","","","","","","","x86_64::instructions::interrupts","","","","","","x86_64::instructions::port","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::instructions::random","","","","","","","","","","","","","","x86_64::instructions::segmentation","","","","","","","","","","","","","","","","","","","","x86_64::instructions::tables","","","","","","x86_64::instructions::tlb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::instructions::tlb::InvPicdCommand","","","x86_64::registers","","","","","","","","","","","","x86_64::registers::controlx86_64::registers::debugx86_64::registers::model_specificx86_64::registers::mxcsr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers::rflags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers::segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::registers::xcontrol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures","","","","","","","","","","","","","","","","","x86_64::structures::gdt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::gdt::Descriptor","","","x86_64::structures::idtx86_64::structures::paging","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::mapperx86_64::structures::paging::mapper::MapToError","x86_64::structures::paging::mapper::MappedFrame","","","x86_64::structures::paging::mapper::TranslateError","x86_64::structures::paging::mapper::TranslateResult","","","","x86_64::structures::paging::mapper::UnmapError","x86_64::structures::paging::page","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","x86_64::structures::paging::page_tablex86_64::structures::port","","","","x86_64::structures::tss","","","","","","","","","","","","",""],"d":["","Represents a protection ring level.","Privilege-level 0 (most privilege): This level is used by …","Privilege-level 1 (moderate privilege): This level is used …","Privilege-level 2 (moderate privilege): Like level 1, this …","Privilege-level 3 (least privilege): This level is used by …","","Physical and virtual addresses manipulation","","","","","","","","Returns the argument unchanged.","Creates a <code>PrivilegeLevel</code> from a numeric value. The value …","","Special x86_64 instructions.","Calls <code>U::from(self)</code>.","Access to various system and model specific registers.","Set a general handler in an <code>InterruptDescriptorTable</code>.","Generate a software interrupt by invoking the <code>int</code> …","Representations of various x86 specific structures and …","","","","","","A 64-bit physical memory address.","A passed <code>u64</code> was not a valid physical address.","A canonical 64-bit virtual memory address.","A passed <code>u64</code> was not a valid virtual address.","","","","","","","","","Align address downwards.","Aligns the virtual address downwards to the given …","Aligns the physical address downwards to the given …","Align address upwards.","Aligns the virtual address upwards to the given alignment.","Aligns the physical address upwards to the given alignment.","Converts the address to a mutable raw pointer.","Converts the address to a raw pointer.","Converts the address to an <code>u64</code>.","Converts the address to an <code>u64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a virtual address from the given pointer","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the virtual address has the demanded …","Checks whether the physical address has the demanded …","Convenience method for checking if a virtual address is …","Convenience method for checking if a physical address is …","Creates a new canonical virtual address.","Creates a new physical address.","Creates a new canonical virtual address, throwing out bits …","Creates a new physical address, throwing bits 52..64 away.","Creates a new virtual address, without any checks.","Creates a new physical address, without any checks.","Returns the 9-bit level 1 page table index.","Returns the 9-bit level 2 page table index.","Returns the 9-bit level 3 page table index.","Returns the 9-bit level 4 page table index.","Returns the 12-bit page offset of this virtual address.","Returns the 9-bit level page table index.","","","","","","","","","","","","","","","","","","","","","","Tries to create a new canonical virtual address.","Tries to create a new physical address.","","","","","Creates a virtual address that points to <code>0</code>.","Creates a physical address that points to <code>0</code>.","Emits a ‘magic breakpoint’ instruction for the Bochs …","Halts the CPU until the next interrupt arrives.","Enabling and disabling interrupts","Executes the <code>nop</code> instructions, which performs no operation …","Access to I/O ports","Support for build-in RNGs","Gets the current instruction pointer. Note that this is …","Provides functions to read and write segment registers.","Functions to load GDT, IDT, and TSS structures.","Functions to flush the translation lookaside buffer (TLB).","Returns whether interrupts are enabled.","Disable interrupts.","Enable interrupts.","Atomically enable interrupts and put the CPU to sleep","Cause a breakpoint exception by invoking the <code>int3</code> …","Run a closure with disabled interrupts.","A read-write I/O port.","An I/O port.","","A marker trait for access types which allow reading port …","A read-only I/O port.","","A marker trait for access types which allow writing port …","A write-only I/O port.","An access marker type indicating that a port is only …","An access marker type indicating that a port is allowed to …","An access marker type indicating that a port is only …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an I/O port with the given port number.","Reads from the port.","","","","","","","","","","","","","Writes to the port.","Used to obtain random numbers using x86_64’s RDRAND …","","","","","Returns the argument unchanged.","Uniformly sampled u16. May fail in rare circumstances or …","Uniformly sampled u32. May fail in rare circumstances or …","Uniformly sampled u64. May fail in rare circumstances or …","Calls <code>U::from(self)</code>.","Creates Some(RdRand) if RDRAND is supported, None otherwise","","","","","","","","","","","","Alias for <code>CS::get_reg()</code>","Alias for <code>DS::set_reg()</code>","Alias for <code>ES::set_reg()</code>","Alias for <code>FS::set_reg()</code>","Alias for <code>GS::set_reg()</code>","Alias for <code>SS::set_reg()</code>","Alias for <code>FS::read_base()</code>","Alias for <code>GS::read_base()</code>","Alias for <code>CS::set_reg()</code>","Alias for <code>GS::swap()</code>","Alias for <code>FS::write_base()</code>.","Alias for <code>GS::write_base()</code>.","","Load a GDT.","Load an IDT.","Load the task state register using the <code>ltr</code> instruction.","Get the address of the current GDT.","Get the address of the current IDT.","The logical processor invalidates mappings—except global …","The logical processor invalidates all mappings—including …","The logical processor invalidates all mappings—except …","The Invalidate PCID Command to execute.","Structure of a PCID. A PCID has to be &lt;= 4096 for x86_64.","The logical processor invalidates all mappings—except …","","","","","","","","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","Invalidate the given address in the TLB using the <code>invpcid</code> …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new PCID. Will result in a failure if the value of","","","","","","","","Get the value of the current PCID.","","","","Functions to read and write control registers.","Functions to read and write debug registers.","Functions to read and write model specific registers.","Functions to read and write MXCSR register.","","","","Processor state stored in the RFLAGS register.","Abstractions for segment registers.","","","Access to various extended system registers","Enables automatic usermode alignment checking if […","Disables some processor caches, specifics are …","Enables Control-flow Enforcement Technology (CET)","Various control flags modifying the basic operation of the …","Configuration flags of the <code>Cr0</code> register.","Contains the Page Fault Linear Address (PFLA).","Contains the physical address of the highest-level page …","Controls cache settings for the highest-level page table.","Contains various control flags that enable architectural …","Configuration flags of the <code>Cr4</code> register.","Enables I/O breakpoint capability and enforces treatment …","Force all x87 and MMX instructions to cause an <code>#NE</code> …","Indicates support of 387DX math coprocessor instructions.","","","Enables software running in 64-bit mode at any privilege …","Enables the Key Locker feature (Intel Only).","Enables 5-level paging on supported CPUs (Intel Only).","Enables the machine-check exception mechanism.","Enables monitoring of the coprocessor, typical for x87 …","Ignored, should always be unset.","Enables the native (internal) error reporting mechanism …","Enables the use of legacy SSE instructions; allows using …","Enables the SIMD floating-point exception (<code>#XF</code>) for …","Enables extended processor state management instructions, …","Enables the global page feature, allowing some page …","Disable caching for the table.","Use a writethrough cache policy for the table (otherwise a …","Enables the use of 4MB physical frames; ignored if …","Enables paging.","Enables process-context identifiers (PCIDs).","Allows software running at any privilege level to use the …","Enables physical address extensions and 2MB physical …","Enables protected mode.","Enables support for protected-mode virtual interrupts.","Alias for <code>PROTECTION_KEY_USER</code>","Enables protection keys for supervisor-mode pages (Intel …","Enables protection keys for user-mode pages.","Enables SMX instructions (Intel Only).","Enables restrictions for supervisor-mode software when …","Prevents the execution of instructions that reside in …","Automatically set to 1 on <em>hardware</em> task switch.","When set, only privilege-level 0 can execute the <code>RDTSC</code> or …","Prevents the execution of the <code>SGDT</code>, <code>SIDT</code>, <code>SLDT</code>, <code>SMSW</code>, and …","Enables hardware-supported performance enhancements for …","Enables VMX instructions (Intel Only).","Controls whether supervisor-level writes to read-only …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Read the current set of CR0 flags.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register.","Read the current set of CR4 flags.","Read the current P4 table address from the CR3 register …","Read the current raw CR0 value.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register","Read the current raw CR4 value.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Updates CR0 flags.","Updates CR4 flags.","Write CR0 flags.","Write a new P4 table address into the CR3 register.","Write CR4 flags.","Write a new P4 table address into the CR3 register.","Write raw CR0 flags.","Write raw CR4 flags.","Next instruction accesses one of the debug registers.","The condition for a hardware breakpoint.","The size of a hardware breakpoint.","Data reads or writes but not instruction fetches","Data writes","Debug Address Register","A valid debug address register number.","Debug Address Register","The debug address register number of <code>Dr0</code> (0).","Debug Address Register","The debug address register number of <code>Dr1</code> (1).","Debug Address Register","The debug address register number of <code>Dr2</code> (2).","Debug Address Register","The debug address register number of <code>Dr3</code> (3).","Debug Status Register (DR6).","Debug condition flags of the <code>Dr6</code> register.","Debug Control Register (DR7).","Debug control flags of the <code>Dr7</code> register.","A valid value of the <code>Dr7</code> debug register.","Enables debug register protection.","Breakpoint 0 is enabled for all tasks.","Breakpoint 1 is enabled for all tasks.","Breakpoint 2 is enabled for all tasks.","Breakpoint 3 is enabled for all tasks.","Enable detection of exact instruction causing a data …","Instruction execution","I/O reads or writes","Breakpoint 0 is enabled for the current task.","Breakpoint 1 is enabled for the current task.","Breakpoint 2 is enabled for the current task.","Breakpoint 3 is enabled for the current task.","Enable detection of exact instruction causing a data …","1 byte length","2 byte length","4 byte length","8 byte length","The corresponding <code>DebugAddressRegisterNumber</code>.","Enables advanced debugging of RTM transactional regions.","When <em>clear</em>, indicates a debug or breakpoint exception …","CPU is in single-step execution mode.","Task switch.","Breakpoint condition was detected.","Breakpoint condition 0 was detected.","Breakpoint condition 1 was detected.","Breakpoint condition 2 was detected.","Breakpoint condition 3 was detected.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the fields currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the condition field of a debug address register.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","Returns the <code>Dr7Flags</code> in this value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Creates a new hardware breakpoint condition if <code>bits</code> is …","Creates a new hardware breakpoint size if <code>bits</code> is valid.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Returns the number as a primitive type.","Returns the global breakpoint enable flag of the provided …","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified <code>Dr7Flags</code> in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the local breakpoint enable flag of the provided …","Creates a debug address register number if it is valid.","Creates a new hardware breakpoint size if <code>size</code> is valid.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Reads the current breakpoint address.","","","","","Read the current set of DR6 flags.","Read the current set of DR7 flags.","Read the current raw DR6 value.","Read the current raw DR7 value.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified <code>Dr7Flags</code> in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the condition field of a debug address register.","Inserts or removes the specified <code>Dr7Flags</code> depending on the …","Sets the size field of a debug address register.","Returns the size field of a debug address register.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified <code>Dr7Flags</code> in-place.","Returns the trap flag of the provided debug address …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Writes the provided breakpoint address.","","","","","Write DR7 value.","Write raw DR7 value.","Flags stored in IA32_U_CET and IA32_S_CET (Table-2-2 in …","The Extended Feature Enable Register.","Flags of the Extended Feature Enable Register.","Enable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute …","FS.Base Model Specific Register.","GS.Base Model Specific Register.","Enable indirect branch tracking (ENDBR_EN)","Enable legacy treatment for indirect branch tracking …","Disable suppression of CET on legacy compatibility …","Enable no-track opcode prefix for indirect branch tracking …","Enable suppression of indirect branch tracking (SUPPRESS)","Is IBT waiting for a branch to return? (read-only, TRACKER)","KernelGsBase Model Specific Register.","Indicates that long mode is active.","Activates long mode, requires activating paging.","Enable certain limit checks in 64-bit mode.","Syscall Register: LSTAR","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","A model specific register.","Enables the no-execute page-protection feature.","IA32_S_CET: supervisor mode CET configuration","Enables SVM extensions.","Syscall Register: SFMASK","Enable shadow stack (SH_STK_EN)","Enable WRSS{D,Q}W instructions (WR_SHTK_EN)","Enables the <code>syscall</code> and <code>sysret</code> instructions.","Syscall Register: STAR","Changes how the <code>invlpg</code> instruction operates on TLB entries …","IA32_U_CET: user mode CET configuration","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Create an instance from a register.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Read 64 bits msr register.","Read the current EFER flags.","Read the current FsBase register.","Read the current GsBase register.","Read the current KernelGsBase register.","Read the Ring 0 and Ring 3 segment bases. Returns","Read the current LStar register. This holds the target RIP …","Read to the SFMask register. The SFMASK register is used …","Read IA32_U_CET. Returns a tuple of the flags and the …","Read IA32_S_CET. Returns a tuple of the flags and the …","Read the current raw EFER flags.","Read the Ring 0 and Ring 3 segment bases. The remaining …","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Update EFER flags.","Write 64 bits to msr register.","Write the EFER flags, preserving reserved values.","Write a given virtual address to the FS.Base register.","Write a given virtual address to the GS.Base register.","Write a given virtual address to the KernelGsBase register.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Write a given virtual address to the LStar register. This …","Write to the SFMask register. The SFMASK register is used …","Write IA32_U_CET.","Write IA32_S_CET.","Write the EFER flags.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Denormal","Denormals are zeros","Denormal mask","Divide-by-zero","Divide-by-zero mask","Flush to zero","Invalid operation","Invalid operation mask","MXCSR register.","Overflow","Overflow mask","Precision","Precision mask","Toward negative infinity","Toward positive infinity","Toward zero (positive + negative)","Underflow","Underflow mask","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return the default MXCSR value at reset, as documented in …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Read the value of MXCSR.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write MXCSR.","Enable automatic alignment checking if CR0.AM is set. Only …","Set by hardware if last arithmetic operation generated a …","Set by hardware if last arithmetic operation generated a …","Determines the order in which strings are processed.","Processor feature identification flag.","Enable interrupts.","The high bit of the I/O Privilege Level field.","The low bit of the I/O Privilege Level field.","Used by <code>iret</code> in hardware task switch mode to determine if …","Set by hardware to indicate that the sign bit of the …","Set by hardware if last result has an even number of 1 …","Allows to restart an instruction following an instrucion …","The RFLAGS register.","Set by hardware if last arithmetic operation resulted in a …","Enable single-step mode for debugging.","Enable the virtual-8086 mode.","Virtual image of the INTERRUPT_FLAG bit.","Indicates that an external, maskable interrupt is pending.","Set by hardware if last arithmetic operation resulted in a …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Returns the current value of the RFLAGS register.","Returns the raw current value of the RFLAGS register.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Writes the RFLAGS register, preserves reserved bits.","Writes the RFLAGS register.","","MSR containing the segment base. This MSR can be used to …","Code Segment","Data Segment","ES Segment","FS Segment","GS Segment","Can be used as a selector into a non-existent segment and …","Stack Segment","An x86 segment","An x86 segment which is actually used in 64-bit mode","Specifies which element to load into a segment from …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current value of the segment register.","","","","","","","","Returns the GDT index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new SegmentSelector","","Reads the segment base address","","","Returns the requested privilege level.","Reload the segment register. Depending on the segment, …","Note this is special since we cannot directly move to <code>CS</code>; …","","","","","","Set the privilege level for this Segment selector.","Swap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.","","","","","","","","","","","","","","","","","","","","","","Writes the segment base address","","","Enables AVX instructions and using the upper halves of the …","Enables MPX instructions and using the BNDCFGU and …","Enables MPX instructions and using the BND0-BND3 bound …","Enables AVX-512 instructions and using the upper ZMM …","Enables Lightweight Profiling extensions and managing LWP …","Enables using the PKRU register with <code>XSAVE</code>/<code>XRSTOR</code>.","Enables AVX-512 instructions and using the K0-K7 mask …","Enables using MXCSR and the XMM registers with <code>XSAVE</code>/<code>XRSTOR</code>…","Enables using the x87 FPU state with <code>XSAVE</code>/<code>XRSTOR</code>.","Extended feature enable mask register","Configuration flags of the XCr0 register.","Alias for <code>AVX</code>","Enables AVX-512 instructions and using the upper halves of …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Read the current set of XCR0 flags.","Read the current raw XCR0 value.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write XCR0 flags.","Write raw XCR0 flags.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Types for the Global Descriptor Table and segment …","Provides types for the Interrupt Descriptor Table and its …","Calls <code>U::from(self)</code>.","Size of the DT.","Abstractions for page tables and other paging related …","Traits for accessing I/O ports.","","","Provides a type for the task state segment structure.","","Set by the processor if this segment has been accessed. …","Available for use by the Operating System","Bits <code>0..=23</code> of the base field (ignored in 64-bit mode, …","Bits <code>24..=31</code> of the base field (ignored in 64-bit mode, …","For code segments, sets the segment as “conforming”, …","Use 32-bit (as opposed to 16-bit) operands. If <code>LONG_MODE</code> …","The DPL for this descriptor is Ring 3. In 64-bit mode, …","A 64-bit mode segment descriptor.","Flags for a GDT descriptor. Not all flags are valid for …","This flag must be set for code segments and unset for data …","Limit field is scaled by 4096 bytes. In 64-bit mode, …","A 64-bit mode global descriptor table (GDT).","A flat 32-bit kernel code segment","A 64-bit kernel code segment","A kernel data segment (64-bit or flat 32-bit)","Bits <code>0..=15</code> of the limit field (ignored in 64-bit mode)","Bits <code>16..=19</code> of the limit field (ignored in 64-bit mode)","Must be set for 64-bit code segments, unset otherwise.","Must be set for any segment, causes a segment not present …","","A system segment descriptor such as a LDT or TSS …","A flat 32-bit user code segment","A 64-bit user code segment","A user data segment (64-bit or flat 32-bit)","This flag must be set for user segments (in contrast to …","Descriptor for a code or data segment.","For 32-bit data segments, sets the segment as writable. …","Adds the given segment descriptor to the GDT, returning …","Returns the set containing all flags.","Get a reference to the internal table.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Forms a GDT from a slice of <code>u64</code>.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a segment descriptor for a 64-bit kernel code …","Creates a segment descriptor for a kernel data segment …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Creates an empty GDT.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Creates a TSS system descriptor for the given TSS.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Creates a segment descriptor for a 64-bit ring 3 code …","Creates a segment descriptor for a ring 3 data segment …","","","","Alignment Check","Bound Range Exceeded","Breakpoint","If this flag is set, the memory access that caused the …","Control Protection Exception","Debug","The possible descriptor table values.","Device Not Available","A handler function that must not return, e.g. for a …","A handler function with an error code that must not …","Error during Division","Double Fault","An Interrupt Descriptor Table entry.","Represents the options field of an IDT entry.","This structure defines the CPU-internal exception vector …","Global Descriptor Table.","A general handler function for an interrupt or an …","General Protection Fault","A handler function for an interrupt or an exception …","A handler function for an exception that pushes an error …","Hypervisor Injection (AMD-only)","If this flag is set, it indicates that the access that …","Interrupt Descriptor Table.","An Interrupt Descriptor Table with 256 entries.","Wrapper type for the interrupt stack frame pushed by the …","Represents the interrupt stack frame pushed by the CPU on …","Invalid Opcode","Invalid TSS","Logical Descriptor Table.","If this flag is set, the page fault is a result of the …","Machine Check","Non-Maskable Interrupt","Overflow","If this flag is set, it indicates that the page fault was …","If this flag is set, the page fault was caused by a …","Page Fault","Describes an page fault error code.","A page fault handler function that pushes a page fault …","If this flag is set, it indicates that the page fault is a …","If this flag is set, it indicates that the page fault was …","If this flag is set, it indicates that the page fault was …","Security Exception","Segment Not Present","Describes an error code referencing a segment selector.","SIMD Floating-Point Exception","Stack Fault","If this flag is set, an access in user mode (CPL=3) caused …","Virtualization Exception (Intel-only)","VMM Communication (AMD-only)","x87 Floating-Point Exception","An alignment check exception (<code>#AC</code>) occurs when an …","Returns the set containing all flags.","Gives mutable access to the contents of the interrupt …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","A bound-range exception (<code>#BR</code>) exception can occur as a …","A breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> …","","","","","","","","","","The code segment selector, padded with zeros.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The flags register before the interrupt handler was …","When the debug-exception mechanism is enabled, a <code>#DB</code> …","","The descriptor table this error code refers to.","A device not available exception (<code>#NM</code>) occurs under any of …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Let the CPU disable hardware interrupts when the handler …","A divide error (<code>#DE</code>) occurs when the denominator of a DIV …","A double fault (<code>#DF</code>) exception can occur when a second …","Returns an empty set of flags.","","","","","","","","If true, indicates that the exception occurred during …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","A general protection fault (<code>#GP</code>) can occur in various …","Returns the virtual address of this IDT entry’s handler …","","","","Returns the IDT entry with the specified index.","The index of the selector which caused the error.","Returns a mutable reference to the IDT entry with the …","Inserts the specified flags in-place.","This value points to the instruction that should be …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","An invalid opcode exception (<code>#UD</code>) occurs when an attempt …","An invalid TSS exception (<code>#TS</code>) occurs only as a result of …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","If true, the #SS or #GP has returned zero as opposed to a …","Loads the IDT in the CPU using the <code>lidt</code> command.","Loads the IDT in the CPU using the <code>lidt</code> command.","The machine check exception (<code>#MC</code>) is model specific. …","Creates a non-present IDT entry (but sets the must-be-one …","Creates a new IDT filled with non-present entries.","Create a SelectorErrorCode. Returns None is any of the …","Create a new SelectorErrorCode dropping any reserved bits …","An non maskable interrupt exception (NMI) occurs as a …","Returns the complement of this set of flags.","An overflow exception (<code>#OF</code>) occurs as a result of …","A page fault (<code>#PF</code>) can occur during a memory access in any …","","Removes the specified flags in-place.","Resets all entries of this IDT in place.","The Security Exception (<code>#SX</code>) signals security-sensitive …","An segment-not-present exception (<code>#NP</code>) occurs when an …","Inserts or removes the specified flags depending on the …","Set the handler address for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set or reset the preset bit.","Set the required privilege level (DPL) for invoking the …","Assigns a Interrupt Stack Table (IST) stack to this …","The SIMD Floating-Point Exception (<code>#XF</code>) is used to handle …","Returns slice of IDT entries with the specified range.","Returns a mutable slice of IDT entries with the specified …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","An stack segment exception (<code>#SS</code>) can occur in the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","vector nr. 20","The VMM Communication Exception (<code>#VC</code>) is always generated …","The x87 Floating-Point Exception-Pending exception (<code>#MF</code>) …","A trait for types that can allocate a frame of memory.","A trait for types that can deallocate a frame of memory.","","","","","","","","","","","","","","","","Allocate a frame of the appropriate size and return it if …","Deallocate the given unused frame.","Abstractions for default-sized and huge physical memory …","Abstractions for reading and modifying the mapping of …","Abstractions for default-sized and huge virtual memory …","Abstractions for page tables and page table entries.","A physical memory frame.","An range of physical memory frames, exclusive the upper …","An range of physical memory frames, inclusive the upper …","","","","","","","","","","","","","Returns the frame that contains the given physical address.","The end of the range, exclusive.","The start of the range, inclusive.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the frame that starts at the given virtual address.","Returns the frame that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the range contains no frames.","Returns whether the range contains no frames.","","","","Returns a range of frames, exclusive <code>end</code>.","Returns a range of frames, inclusive <code>end</code>.","Returns the size the frame (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the frame.","","","","","","","","","","","","","Provides methods for cleaning up unused entries.","An error indicating that an <code>update_flags</code> call failed.","An additional frame was needed for the mapping process, …","The page table entry for the given virtual address points …","The page table entry for the given page points to an …","The page table entry for the given page points to an …","The given page table was not suitable to create a …","This error is returned from <code>map_to</code> and similar methods.","The virtual address is mapped to a physical frame.","Represents a physical frame mapped in a page table.","A Mapper implementation that relies on a PhysAddr to …","A trait for common page table operations on pages of size <code>S</code>…","An empty convencience trait that requires the <code>Mapper</code> trait …","This type represents a page whose mapping has changed in …","This type represents a change of a page table requiring a …","The given page table was not active on the CPU.","The given virtual address is not mapped to a physical …","The given page table was not at an recursive address.","A Mapper implementation that requires that the complete …","The given page is already mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","Provides a virtual address mapping for physical page table …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","A recursive page table is a last level page table with an …","The virtual address is mapped to a “huge” 1GiB frame.","The virtual address is mapped to a “large” 2MiB frame.","The virtual address is mapped to a 4KiB frame.","Provides methods for translating virtual addresses.","An error indicating that an <code>translate</code> call failed.","The return value of the <code>Translate::translate</code> function.","An error indicating that an <code>unmap</code> call failed.","","","","","","","","","","","","","","","","","","","","","","","","","Remove all empty P1-P3 tables","","","","Remove all empty P1-P3 tables in a certain range","","","","","Flush the page from the TLB to ensure that the newest …","Flush all pages from the TLB to ensure that the newest …","","","","","","","","","","","","","","Translate the given physical frame to a virtual page table …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Maps the given frame to the virtual page with the same …","Don’t flush the TLB and silence the “must be used” …","Don’t flush the TLB and silence the “must be used” …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Creates a new mapping in the page table.","Creates a new mapping in the page table.","","","","","","","","","","Creates a new <code>MappedPageTable</code> that uses the passed …","Creates a new <code>OffsetPageTable</code> that uses the given offset …","Creates a new RecursivePageTable from the passed level 4 …","Create a new flush promise","Create a new flush promise","Creates a new RecursivePageTable without performing any …","Returns the <code>PageTableFrameMapping</code> used for converting …","Returns the offset used for converting virtual to physical …","Set the flags of an existing page table level 2 entry","","","","","","","","","","Set the flags of an existing page table level 3 entry","","","","","","","","","","Set the flags of an existing page level 4 table entry","","","","","","","","","","Returns the size the frame (4KB, 2MB or 1GB).","Returns the start address of the frame.","Return the frame that the given virtual address is mapped …","","","","Translates the given virtual address to the physical …","Return the frame that the specified page is mapped to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes a mapping from the page table and returns the …","","","","","","","","","","Updates the flags of an existing mapping.","","","","","","","","","","","","","","","","The entry flags in the lowest-level page table.","The mapped frame.","The offset whithin the mapped frame.","","The given address was not sufficiently aligned.","This trait is implemented for 4KiB and 2MiB pages, but not …","A virtual memory page.","A range of pages with exclusive upper bound.","A range of pages with inclusive upper bound.","Trait for abstracting over the three possible page sizes …","The page size in bytes.","The page size in bytes.","A string representation of the page size for debug output.","A “giant” 1GiB page.","A “huge” 2MiB page.","A standard 4KiB page.","","","Converts the range of 2MiB pages to a range of 4KiB pages.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the page that contains the given virtual address.","The end of the range, exclusive.","The end of the range, inclusive.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the 4KiB memory page with the specified page table …","Returns the 1GiB memory page with the specified page table …","Returns the 2MiB memory page with the specified page table …","Returns the page that starts at the given virtual address.","Returns the page that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns wether this range contains no pages.","Returns wether this range contains no pages.","","","Returns the level 1 page table index of this page.","Returns the level 2 page table index of this page.","Returns the level 3 page table index of this page.","Returns the level 4 page table index of this page.","Returns the table index of this page at the specified …","","","","","Returns a range of pages, exclusive <code>end</code>.","Returns a range of pages, inclusive <code>end</code>.","Returns the size the page (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the page.","","","","","","","","","","","","","","","","","","","","","","","","","","Set by the CPU when the mapped frame or page table is …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Set by the CPU on a write to the mapped frame.","Represents the level for a page-map level-4.","The error returned by the <code>PageTableEntry::frame</code> method.","The entry does not have the <code>PRESENT</code> flag set, so it isn’…","Indicates that the mapping is present in all address …","Specifies that the entry maps a huge frame instead of a …","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …","Disables caching for the pointed entry is cacheable.","Forbid code execution from the mapped frames.","Represents the level for a page table.","Specifies whether the mapped frame or page table is loaded …","A 12-bit offset into a 4KiB Page.","Represents a page table.","A 64-bit page table entry.","Possible flags for a page table entry.","A 9-bit index into a page table.","A value between 1 and 4.","Represents the level for a page-directory pointer.","Represents the level for a page directory.","Controls whether accesses from userspace (i.e. ring 3) are …","Controls whether writes to the mapped frames are allowed.","If this bit is set, a “write-through” policy is used …","Returns the physical address mapped by this entry, might …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns the alignment for the address space described by …","","","","","","","Returns the flags of this entry.","","","","","","","","","","","","Returns the physical frame mapped by this entry.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns whether this entry is zero.","Returns an iterator over the entries of the page table.","Returns an iterator that allows modifying the entries of …","Creates an unused page table entry.","Creates an empty page table.","Creates a new index from the given <code>u16</code>. Panics if the …","Creates a new offset from the given <code>u16</code>. Panics if the …","Creates a new index from the given <code>u16</code>. Throws away bits …","Creates a new offset from the given <code>u16</code>. Throws away bits …","Returns the next lower level or <code>None</code> for level 1","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Map the entry to the specified physical address with the …","Sets the flags of this entry.","Map the entry to the specified physical frame with the …","Sets this entry to zero.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the alignment for the address space described by a …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Clears all entries.","A helper trait that implements the read port operation.","A helper trait that implements the write port operation.","Reads a <code>Self</code> value from the given port.","Writes a <code>Self</code> value to the given port.","In 64-bit mode the TSS holds information that is not …","","","","","Returns the argument unchanged.","The full 64-bit canonical forms of the interrupt stack …","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","Creates a new TSS with zeroed privilege and interrupt …","The full 64-bit canonical forms of the stack pointers …","","",""],"i":[0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,14,15,0,0,0,0,8,8,11,11,8,8,11,11,0,8,11,0,8,11,8,8,8,11,8,14,15,8,11,14,15,8,11,8,11,8,11,8,11,14,15,8,8,8,8,8,8,11,11,11,11,11,11,8,14,15,8,11,8,8,11,14,15,8,11,8,11,8,11,8,11,8,11,8,11,8,8,8,8,8,8,8,11,8,8,8,8,11,11,11,8,8,11,11,14,15,8,11,14,15,8,11,8,11,14,15,8,11,8,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,20,21,22,19,20,21,22,19,19,19,20,21,22,19,20,21,22,19,20,21,22,19,19,19,20,21,22,19,20,21,22,19,20,21,22,19,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,0,0,32,32,31,32,31,31,31,31,0,0,0,32,31,32,31,31,32,31,31,31,32,31,32,31,32,31,31,133,134,133,0,0,0,0,0,0,0,0,0,0,0,0,34,34,36,0,0,0,0,0,0,0,36,34,34,0,0,36,36,36,36,34,34,34,36,36,36,36,35,35,36,34,36,36,36,34,36,36,36,36,36,36,36,34,36,36,36,36,34,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,38,34,39,40,35,41,36,38,34,39,40,35,41,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,38,34,34,34,34,34,39,40,35,35,35,35,35,41,36,36,36,36,36,38,34,39,40,35,41,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,38,34,39,40,35,41,36,34,35,36,34,35,36,34,35,36,34,35,36,38,39,40,41,40,38,39,40,41,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,36,38,34,39,40,35,41,36,38,34,39,40,35,41,36,38,34,39,40,35,41,36,34,35,36,38,41,38,40,41,40,38,41,43,0,0,47,47,0,0,0,46,0,46,0,46,0,46,0,0,0,0,0,44,44,44,44,44,44,47,47,44,44,44,44,44,48,48,48,48,135,44,43,43,43,43,43,43,43,43,43,44,43,44,43,44,43,44,43,44,43,44,45,43,44,43,44,49,50,51,52,46,53,43,44,47,48,45,54,49,50,51,52,46,53,43,44,47,48,45,54,46,43,44,47,48,45,43,44,43,44,45,43,44,43,44,43,44,46,43,44,47,48,45,43,44,45,49,50,51,52,46,53,43,43,43,43,43,44,44,44,44,44,47,48,45,54,49,50,51,52,46,53,43,44,47,48,45,45,54,43,44,47,48,45,43,44,45,43,44,45,43,44,46,44,43,44,43,44,45,43,44,43,44,49,50,51,52,46,53,43,44,47,48,45,54,43,44,43,44,44,46,48,43,44,43,44,135,49,50,51,52,53,54,53,54,43,44,45,43,44,45,45,45,45,43,44,43,44,43,44,43,44,45,43,49,50,51,52,46,53,43,44,47,48,45,54,49,50,51,52,46,53,43,44,47,48,45,54,49,50,51,52,46,53,43,44,47,48,45,54,43,44,135,49,50,51,52,54,54,0,0,0,56,0,0,57,57,57,57,57,57,0,56,56,56,0,59,60,61,62,63,64,65,66,67,0,56,0,56,0,57,57,56,0,56,0,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,58,59,60,61,62,63,64,65,66,67,56,56,56,56,56,57,57,57,57,57,58,59,60,61,62,63,64,65,66,67,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,58,59,60,61,62,63,64,65,66,67,56,57,56,57,56,57,58,56,57,56,57,58,59,60,61,62,63,64,65,66,67,59,63,56,57,56,57,56,57,56,57,56,57,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,56,57,58,59,60,61,62,63,64,65,66,67,56,57,56,57,59,58,59,60,61,62,63,64,65,66,67,59,63,70,70,70,70,70,70,70,70,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,70,70,70,70,70,70,70,70,70,70,0,68,68,68,68,68,68,68,68,68,68,68,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,68,68,68,68,68,68,68,68,68,68,0,0,29,136,0,0,0,0,0,29,0,0,0,0,29,71,72,73,74,75,76,29,71,72,73,74,75,76,29,29,29,29,71,72,73,74,75,76,29,71,72,73,74,75,76,137,71,72,73,74,75,76,29,29,29,71,72,73,74,75,76,29,29,136,75,76,29,137,71,72,73,74,75,76,29,76,29,71,72,73,74,75,76,29,71,72,73,74,75,76,29,71,72,73,74,75,76,136,75,76,77,77,77,77,77,77,77,77,77,0,0,77,77,77,77,77,77,77,77,77,77,78,77,78,77,77,77,77,77,77,77,77,77,78,77,77,77,77,77,78,77,77,77,77,77,77,77,77,77,78,77,77,77,77,77,78,78,77,77,77,77,77,77,78,77,78,77,78,77,77,78,78,0,30,30,30,30,30,30,0,0,30,30,0,0,30,30,0,30,81,81,81,81,81,81,81,0,0,81,81,0,81,81,81,81,81,81,81,0,80,81,81,81,81,80,81,79,81,79,81,81,81,81,81,81,81,79,80,81,79,80,81,79,80,81,81,81,81,81,81,81,81,79,80,81,81,81,81,81,79,80,81,81,81,81,81,79,81,81,81,81,79,80,81,81,81,80,80,79,79,79,81,81,81,81,81,81,81,81,79,80,81,79,80,81,80,79,80,81,81,80,80,138,139,139,93,93,93,83,93,93,0,93,0,0,93,93,0,0,0,92,0,93,0,0,93,83,92,0,0,0,93,93,92,83,93,93,93,83,83,93,0,0,83,83,83,93,93,0,93,93,83,93,93,93,87,83,84,83,83,83,83,83,83,83,84,87,89,90,85,83,91,92,93,84,87,89,90,85,83,91,92,93,87,87,87,89,90,85,83,91,92,93,83,85,83,83,85,87,84,91,87,83,90,87,87,83,89,90,83,91,92,93,83,91,84,87,89,90,85,83,83,83,83,83,91,92,93,84,87,89,90,85,83,91,92,93,83,83,83,83,87,89,83,91,92,87,91,87,83,85,83,83,84,87,89,90,85,83,91,92,93,87,87,83,83,91,87,87,87,89,87,91,91,87,83,87,87,83,83,87,87,87,83,89,89,89,89,89,89,90,90,90,87,87,87,85,85,87,83,83,83,83,84,87,89,90,85,83,91,92,93,84,87,89,90,85,83,91,92,93,84,87,89,90,85,83,91,92,93,83,87,87,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,141,0,0,0,0,0,0,0,42,42,42,101,102,42,101,102,42,101,102,42,42,101,102,42,101,102,42,101,102,42,101,102,42,42,42,101,102,42,101,102,101,102,101,102,101,102,42,42,42,42,101,102,42,42,42,42,42,101,102,42,101,102,42,101,102,0,0,119,117,120,122,0,0,117,0,0,0,0,0,0,116,117,116,0,119,120,121,122,0,119,120,121,122,0,118,118,118,0,0,0,0,109,110,111,116,117,118,114,113,119,120,121,122,109,110,111,116,117,118,114,113,119,120,121,122,142,109,110,111,142,109,110,111,113,114,113,109,110,111,116,116,117,118,114,113,119,120,121,122,108,109,110,111,116,117,118,114,113,119,120,121,122,143,114,113,109,110,111,116,117,118,114,113,119,120,121,122,109,110,111,143,143,109,109,109,110,110,110,111,111,111,109,110,111,114,113,111,109,110,143,109,109,109,110,110,110,111,111,111,143,109,109,109,110,110,110,111,111,111,143,109,109,109,110,110,110,111,111,111,118,118,144,109,110,111,144,143,109,109,109,110,110,110,111,111,111,109,110,111,116,117,118,114,113,119,120,121,122,109,110,111,116,117,118,114,113,119,120,121,122,109,110,111,116,117,118,114,113,119,120,121,122,143,109,109,109,110,110,110,111,111,111,143,109,109,109,110,110,110,111,111,111,145,146,147,148,149,150,151,151,151,152,0,0,0,0,0,0,100,69,100,0,0,0,69,69,128,69,127,126,125,69,128,112,105,127,126,125,69,128,112,105,127,126,125,69,128,112,127,126,125,69,69,128,112,127,126,125,69,128,112,127,126,125,69,128,112,105,105,69,127,126,125,69,128,112,105,69,69,69,69,69,69,128,112,127,126,125,69,128,112,105,128,112,128,112,128,112,69,69,69,69,69,127,126,125,69,69,69,69,128,112,69,69,69,69,69,127,126,125,69,128,112,105,127,126,125,69,128,112,105,127,126,125,69,128,112,105,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,18,0,131,124,124,131,124,124,18,124,0,0,0,0,0,0,18,18,124,124,124,130,124,124,124,124,124,124,124,124,131,130,124,123,16,17,18,131,130,124,123,16,17,18,131,130,124,123,16,17,18,124,16,17,18,124,124,123,124,124,18,131,124,16,17,18,124,130,131,130,124,124,124,124,124,123,16,17,18,130,131,130,124,123,16,17,18,124,124,124,124,124,16,17,18,123,123,123,123,124,124,124,131,130,124,123,16,17,18,124,124,130,123,123,130,123,16,17,16,17,18,124,124,16,17,18,124,124,130,130,130,130,124,124,124,18,124,131,130,124,123,16,17,18,131,130,124,123,16,17,18,131,130,124,123,16,17,18,124,123,0,0,23,25,0,82,82,82,82,82,82,82,82,82,82,82,82,82],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[1,1],2],[[1,3],4],[[]],[5,1],[1],0,[[]],0,0,0,0,[[],6],[[],6],[[],7],0,0,0,0,0,0,[[8,9]],[[8,10]],[[11,9]],[[11,10]],[[8,9]],[[8,10]],[[11,10]],[[11,9]],[[9,9],9],[8,8],[11,11],[[9,9],9],[8,8],[11,11],[8],[8],[8,9],[11,9],[[8,10],[[12,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[11,11],[[8,8],13],[[11,11],13],[[8,8],2],[[11,11],2],[[14,3],4],[[15,3],4],[[8,3],4],[[8,3],4],[[8,3],4],[[8,3],4],[[8,3],4],[[8,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[8,10],[[12,[8]]]],[[]],[[]],[[]],[[]],[[],8],[8],[11],[[]],[[]],[[]],[[]],[8,2],[11,2],[8,2],[11,2],[9,8],[9,11],[9,8],[9,11],[9,8],[9,11],[8,16],[8,16],[8,16],[8,16],[8,17],[[8,18],16],[[8,8],[[12,[13]]]],[[11,11],[[12,[13]]]],[[8,8],[[12,[10]]]],[[8,8]],[[8,10]],[[8,9]],[[11,11]],[[11,10]],[[11,9]],[[8,10]],[[8,9]],[[11,10]],[[11,9]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[9,[[6,[8,14]]]],[9,[[6,[11,15]]]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],11],[[]],[[]],0,[[]],0,0,[[],8],0,0,0,[[],2],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[[19,19],2],[[[19,[0]],3],4],[[20,3],4],[[21,3],4],[[22,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,19],[[[19,[23,24]]],23],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[[19,[25,26]],25]],0,[[]],[[]],[27,27],[[27,3],4],[[]],[27,[[12,[5]]]],[27,[[12,[28]]]],[27,[[12,[9]]]],[[]],[[],[[12,[27]]]],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,[[],29],[29],[29],[29],[29],[29],[[],9],[[],9],[29],[[]],[9],[9],0,[30],[30],[29],[[],30],[[],30],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[31,31],[[31,31],13],[[31,31],2],[8],[[]],[32],[[32,3],4],[[31,3],4],[[]],[[]],[31],[[]],[[]],[5,[[6,[31,33]]]],[[31,31],[[12,[13]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[31,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],34],[[],35],[[],36],[[34,34],34],[[35,35],35],[[36,36],36],[[34,34]],[[35,35]],[[36,36]],[[34,34],34],[[35,35],35],[[36,36],36],[[34,34]],[[35,35]],[[36,36]],[34,9],[35,9],[36,9],[[34,34],34],[[35,35],35],[[36,36],36],[[34,34]],[[35,35]],[[36,36]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[36,36],[[34,34],13],[[35,35],13],[[36,36],13],[34,34],[35,35],[36,36],[[34,34],2],[[35,35],2],[[36,36],2],[[34,34],34],[[35,35],35],[[36,36],36],[[],34],[[],35],[[],36],[[34,34],2],[[35,35],2],[[36,36],2],[[34,37]],[[35,37]],[[36,37]],[[38,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[39,3],4],[[40,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[41,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[36,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[12,[34]]]],[9,[[12,[35]]]],[9,[[12,[36]]]],[9,34],[9,35],[9,36],[9,34],[9,35],[9,36],[37,34],[37,35],[37,36],[34],[35],[36],[[34,34]],[[35,35]],[[36,36]],[[34,34],34],[[35,35],35],[[36,36],36],[[34,34],2],[[35,35],2],[[36,36],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,2],[35,2],[36,2],[34,2],[35,2],[36,2],[34,34],[35,35],[36,36],[[34,34],[[12,[13]]]],[[35,35],[[12,[13]]]],[[36,36],[[12,[13]]]],[[],34],[[],8],[[]],[[],36],[[]],[[],9],[[],9],[[]],[[],9],[[34,34]],[[35,35]],[[36,36]],[[34,34,2]],[[35,35,2]],[[36,36,2]],[[34,34],34],[[35,35],35],[[36,36],36],[[34,34]],[[35,35]],[[36,36]],[[34,34],34],[[35,35],35],[[36,36],36],[[34,34]],[[35,35]],[[36,36]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[34,34],34],[[35,35],35],[[36,36],36],[[]],[[]],[34],[[42,35]],[36],[[42,31]],[9],[9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],43],[[],44],[[43,43],43],[[44,44],44],[[43,43]],[[44,44]],[[43,43],43],[[44,44],44],[[43,43]],[[44,44]],[43,9],[44,9],[45,9],[[43,43],43],[[44,44],44],[[43,43]],[[44,44]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,46],[43,43],[44,44],[47,47],[48,48],[45,45],[[43,43],13],[[44,44],13],[43,43],[44,44],[[45,46],47],[[43,43],2],[[44,44],2],[[43,43],43],[[44,44],44],[[],43],[[],44],[[46,46],2],[[43,43],2],[[44,44],2],[[47,47],2],[[48,48],2],[[45,45],2],[[43,37]],[[44,37]],[45,44],[[49,3],4],[[50,3],4],[[51,3],4],[[52,3],4],[[46,3],4],[[53,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[43,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[44,3],4],[[47,3],4],[[48,3],4],[[45,3],4],[[54,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,45],[[]],[9,[[12,[43]]]],[9,[[12,[44]]]],[9,[[12,[47]]]],[9,[[12,[48]]]],[9,[[12,[45]]]],[9,43],[9,44],[9,45],[9,43],[9,44],[9,45],[37,43],[37,44],[46,55],[46,44],[43],[44],[[43,43]],[[44,44]],[[45,44]],[[43,43],43],[[44,44],44],[[43,43],2],[[44,44],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,2],[44,2],[43,2],[44,2],[46,44],[55,[[12,[46]]]],[10,[[12,[48]]]],[43,43],[44,44],[[43,43],[[12,[13]]]],[[44,44],[[12,[13]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],43],[[],45],[[],9],[[],9],[[43,43]],[[44,44]],[[45,44]],[[43,43,2]],[[44,44,2]],[[45,46,47]],[[45,44,2]],[[45,46,48]],[[45,46],48],[[43,43],43],[[44,44],44],[[43,43]],[[44,44]],[[43,43],43],[[44,44],44],[[43,43]],[[44,44]],[[45,44]],[46,43],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[43,43],43],[[44,44],44],[9],[9],[9],[9],[9],[45],[9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],56],[[],57],[[56,56],56],[[57,57],57],[[56,56]],[[57,57]],[[56,56],56],[[57,57],57],[[56,56]],[[57,57]],[56,9],[57,9],[[56,56],56],[[57,57],57],[[56,56]],[[57,57]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[57,57],[[56,56],13],[[57,57],13],[56,56],[57,57],[[56,56],2],[[57,57],2],[[56,56],56],[[57,57],57],[[],56],[[],57],[[56,56],2],[[57,57],2],[[56,37]],[[57,37]],[[58,3],4],[[59,3],4],[[60,3],4],[[61,3],4],[[62,3],4],[[63,3],4],[[64,3],4],[[65,3],4],[[66,3],4],[[67,3],4],[[56,3],4],[[56,3],4],[[56,3],4],[[56,3],4],[[56,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[12,[56]]]],[9,[[12,[57]]]],[9,56],[9,57],[9,56],[9,57],[37,56],[37,57],[56],[57],[[56,56]],[[57,57]],[[56,56],56],[[57,57],57],[[56,56],2],[[57,57],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,2],[57,2],[56,2],[57,2],[28,58],[56,56],[57,57],[[56,56],[[12,[13]]]],[[57,57],[[12,[13]]]],[58,9],[[],56],[[],8],[[],8],[[],8],[[]],[[],8],[[],68],[[]],[[]],[[],9],[[]],[[56,56]],[[57,57]],[[56,56,2]],[[57,57,2]],[[56,56],56],[[57,57],57],[[56,56]],[[57,57]],[[56,56],56],[[57,57],57],[[56,56]],[[57,57]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[56,56],56],[[57,57],57],[[]],[[58,9]],[56],[8],[8],[8],[[29,29,29,29],[[6,[33]]]],[8],[68],[[57,69]],[[57,69]],[9],[[5,5]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],70],[[70,70],70],[[70,70]],[[70,70],70],[[70,70]],[70,28],[[70,70],70],[[70,70]],[[]],[[]],[70,70],[[70,70],13],[70,70],[[70,70],2],[[],70],[[70,70],70],[[],70],[[70,70],2],[[70,37]],[[70,3],4],[[70,3],4],[[70,3],4],[[70,3],4],[[70,3],4],[[]],[28,[[12,[70]]]],[28,70],[28,70],[37,70],[70],[[70,70]],[[70,70],70],[[70,70],2],[[]],[70,2],[70,2],[70,70],[[70,70],[[12,[13]]]],[[],70],[[70,70]],[[70,70,2]],[[70,70],70],[[70,70]],[[70,70],70],[[70,70]],[[],6],[[],6],[[],7],[[70,70],70],[70],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],68],[[68,68],68],[[68,68]],[[68,68],68],[[68,68]],[68,9],[[68,68],68],[[68,68]],[[]],[[]],[68,68],[[68,68],13],[68,68],[[68,68],2],[[68,68],68],[[],68],[[68,68],2],[[68,37]],[[68,3],4],[[68,3],4],[[68,3],4],[[68,3],4],[[68,3],4],[[]],[9,[[12,[68]]]],[9,68],[9,68],[37,68],[68],[[68,68]],[[68,68],68],[[68,68],2],[[]],[68,2],[68,2],[68,68],[[68,68],[[12,[13]]]],[[],68],[[],9],[[68,68]],[[68,68,2]],[[68,68],68],[[68,68]],[[68,68],68],[[68,68]],[[],6],[[],6],[[],7],[[68,68],68],[68],[9],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[[29,29],13],[[29,29],2],[[29,3],4],[[71,3],4],[[72,3],4],[[73,3],4],[[74,3],4],[[75,3],4],[[76,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[29],[29,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,1],29],[[29,29],[[12,[13]]]],[[],8],[[],8],[[],8],[29,1],[29],[29],[29],[29],[29],[29],[29],[[29,1]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[8],[8],[8],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],77],[[77,77],77],[[77,77]],[[77,77],77],[[77,77]],[77,9],[[77,77],77],[[77,77]],[[]],[[]],[[]],[[]],[77,77],[[77,77],13],[77,77],[[77,77],2],[[77,77],77],[[],77],[[77,77],2],[[77,37]],[[78,3],4],[[77,3],4],[[77,3],4],[[77,3],4],[[77,3],4],[[77,3],4],[[]],[[]],[9,[[12,[77]]]],[9,77],[9,77],[37,77],[77],[[77,77]],[[77,77],77],[[77,77],2],[[]],[[]],[77,2],[77,2],[77,77],[[77,77],[[12,[13]]]],[[],77],[[],9],[[77,77]],[[77,77,2]],[[77,77],77],[[77,77]],[[77,77],77],[[77,77]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[77,77],77],[77],[9],0,0,[[]],[[]],[30,30],[[30,3],4],[[]],0,0,[[]],0,0,0,[[],6],[[],6],0,[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[79,80],29],[[],81],[79],[[81,81],81],[[81,81]],[[81,81],81],[[81,81]],[81,9],[[81,81],81],[[81,81]],[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[80,80],[81,81],[[81,81],13],[81,81],[[81,81],2],[[81,81],81],[[],81],[[81,81],2],[[81,37]],[[79,3],4],[[80,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[[]],[[]],[[]],[9,[[12,[81]]]],[9,81],[9,81],[37,81],[[],79],[81],[[81,81]],[[81,81],81],[[81,81],2],[[]],[[]],[[]],[81,2],[81,2],[[],80],[[],80],[79],[79],[[],79],[81,81],[[81,81],[[12,[13]]]],[[81,81]],[[81,81,2]],[[81,81],81],[[81,81]],[[81,81],81],[[81,81]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[82,80],[[],7],[[],7],[[],7],[[81,81],81],[[],80],[[],80],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],83],[84,[[86,[85]]]],[[83,83],83],[[83,83]],[[83,83],83],[[83,83]],[83,9],[[83,83],83],[[83,83]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[87,87],[[[89,[88]]],[[89,[88]]]],[90,90],[85,85],[83,83],[91,91],[92,92],[93,93],[[83,83],13],0,[83,83],[[83,83],2],0,0,[84],[91,92],0,[[83,83],83],[[90,2],90],0,0,[[],83],[[89,89],2],[[90,90],2],[[83,83],2],[[91,91],2],[[92,92],2],[[93,93],2],[[83,37]],[91,2],[[84,3],4],[[87,3],4],[[89,3],4],[[90,3],4],[[85,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[[91,3],4],[[92,3],4],[[93,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[12,[83]]]],[9,83],[9,83],[37,83],0,[89,8],[83],[91],[92],[[87,10]],[91,9],[[87,10]],[[83,83]],0,[[83,83],83],[[83,83],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[83,2],[83,2],[91,2],[87],[87],0,[[],89],[[],87],[9,[[12,[91]]]],[9,91],0,[83,83],0,0,[[83,83],[[12,[13]]]],[[83,83]],[87],0,0,[[83,83,2]],[[89,8],90],[[[89,[94]],94],90],[[[89,[95]],95],90],[[[89,[96]],96],90],[[[89,[97]],97],90],[[[89,[98]],98],90],[[90,2],90],[[90,1],90],[[90,5],90],0,[[87,[99,[10]]]],[[87,[99,[10]]]],0,0,0,[[83,83],83],[[83,83]],[[83,83],83],[[83,83]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[83,83],83],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[12,[42]]]],[42],0,0,0,0,0,0,0,[[[42,[100]],9]],[[[42,[100]],9]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[[0,[88,100]]]]],[[42,[[0,[88,100]]]]]],[[[101,[[0,[88,100]]]]],[[101,[[0,[88,100]]]]]],[[[102,[[0,[88,100]]]]],[[102,[[0,[88,100]]]]]],[[[42,[[0,[103,100]]]],42],13],[11,[[42,[100]]]],0,0,[[[42,[[0,[104,100]]]],42],2],[[[101,[[0,[104,100]]]],101],2],[[[102,[[0,[104,100]]]],102],2],[[[42,[100]],3],4],[[[101,[100]],3],4],[[[102,[100]],3],4],[[]],[[]],[[]],[11,[[6,[[42,[100]],105]]]],[11,[[42,[100]]]],[[[42,[[0,[106,100]]]]]],[[[101,[[0,[106,100]]]]]],[[[102,[[0,[106,100]]]]]],[[]],[[]],[[]],[[]],[[]],[[[101,[100]]],2],[[[102,[100]]],2],[[[101,[100]]],12],[[[102,[100]]],12],[[[42,[[0,[107,100]]]],42],[[12,[13]]]],[[[42,[100]],[42,[100]]],[[101,[100]]]],[[[42,[100]],[42,[100]]],[[102,[100]]]],[[[42,[100]]],9],0,0,[[[42,[100]]],11],[[[42,[100]],9]],[[[42,[100]],[42,[100]]]],[[[42,[100]],9]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[109,[108]]]],[110],[111],[112],[[[109,[108]],112]],[[110,112]],[[111,112]],[[],113],[[[114,[100]]]],[113],[[[109,[[0,[115,108]]]],3],4],[[110,3],4],[[111,3],4],[[116,3],4],[[116,3],4],[[117,3],4],[[118,3],4],[[[114,[[0,[115,100]]]],3],4],[[113,3],4],[[[119,[[0,[115,100]]]],3],4],[[120,3],4],[[121,3],4],[[122,3],4],[42,123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,124],[[6,[114,119]]]],[[[114,[100]]]],[113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[109,[108]]],123],[110,123],[111,123],[[69,42,124],[[6,[114,119]]]],[[69,42,124,124],[[6,[114,119]]]],[[[109,[108]],[69,[125]],[42,[125]],124,124],[[6,[[114,[125]],[119,[125]]]]]],[[[109,[108]],[69,[126]],[42,[126]],124,124],[[6,[[114,[126]],[119,[126]]]]]],[[[109,[108]],[69,[127]],[42,[127]],124,124],[[6,[[114,[127]],[119,[127]]]]]],[[110,[69,[126]],[42,[126]],124,124],[[6,[[114,[126]],[119,[126]]]]]],[[110,[69,[125]],[42,[125]],124,124],[[6,[[114,[125]],[119,[125]]]]]],[[110,[69,[127]],[42,[127]],124,124],[[6,[[114,[127]],[119,[127]]]]]],[[111,[69,[125]],[42,[125]],124,124],[[6,[[114,[125]],[119,[125]]]]]],[[111,[69,[127]],[42,[127]],124,124],[[6,[[114,[127]],[119,[127]]]]]],[[111,[69,[126]],[42,[126]],124,124],[[6,[[114,[126]],[119,[126]]]]]],[[123,108],[[109,[108]]]],[[123,8],110],[123,[[6,[111,116]]]],[[[69,[100]]],[[114,[100]]]],[[],113],[[123,16],111],[[[109,[108]]]],[110,8],[[69,124],[[6,[113,121]]]],[[[109,[108]],[69,[127]],124],[[6,[113,121]]]],[[[109,[108]],[69,[126]],124],[[6,[113,121]]]],[[[109,[108]],[69,[125]],124],[[6,[113,121]]]],[[110,[69,[127]],124],[[6,[113,121]]]],[[110,[69,[126]],124],[[6,[113,121]]]],[[110,[69,[125]],124],[[6,[113,121]]]],[[111,[69,[127]],124],[[6,[113,121]]]],[[111,[69,[126]],124],[[6,[113,121]]]],[[111,[69,[125]],124],[[6,[113,121]]]],[[69,124],[[6,[113,121]]]],[[[109,[108]],[69,[126]],124],[[6,[113,121]]]],[[[109,[108]],[69,[127]],124],[[6,[113,121]]]],[[[109,[108]],[69,[125]],124],[[6,[113,121]]]],[[110,[69,[127]],124],[[6,[113,121]]]],[[110,[69,[126]],124],[[6,[113,121]]]],[[110,[69,[125]],124],[[6,[113,121]]]],[[111,[69,[127]],124],[[6,[113,121]]]],[[111,[69,[126]],124],[[6,[113,121]]]],[[111,[69,[125]],124],[[6,[113,121]]]],[[69,124],[[6,[113,121]]]],[[[109,[108]],[69,[126]],124],[[6,[113,121]]]],[[[109,[108]],[69,[125]],124],[[6,[113,121]]]],[[[109,[108]],[69,[127]],124],[[6,[113,121]]]],[[110,[69,[127]],124],[[6,[113,121]]]],[[110,[69,[125]],124],[[6,[113,121]]]],[[110,[69,[126]],124],[[6,[113,121]]]],[[111,[69,[127]],124],[[6,[113,121]]]],[[111,[69,[125]],124],[[6,[113,121]]]],[[111,[69,[126]],124],[[6,[113,121]]]],[118,9],[118,11],[8,117],[[[109,[108]],8],117],[[110,8],117],[[111,8],117],[8,[[12,[11]]]],[69,[[6,[42,122]]]],[[[109,[108]],[69,[127]]],[[6,[[42,[127]],122]]]],[[[109,[108]],[69,[125]]],[[6,[[42,[125]],122]]]],[[[109,[108]],[69,[126]]],[[6,[[42,[126]],122]]]],[[110,[69,[127]]],[[6,[[42,[127]],122]]]],[[110,[69,[125]]],[[6,[[42,[125]],122]]]],[[110,[69,[126]]],[[6,[[42,[126]],122]]]],[[111,[69,[126]]],[[6,[[42,[126]],122]]]],[[111,[69,[127]]],[[6,[[42,[127]],122]]]],[[111,[69,[125]]],[[6,[[42,[125]],122]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[69,[[6,[120]]]],[[[109,[108]],[69,[126]]],[[6,[120]]]],[[[109,[108]],[69,[127]]],[[6,[120]]]],[[[109,[108]],[69,[125]]],[[6,[120]]]],[[110,[69,[126]]],[[6,[120]]]],[[110,[69,[127]]],[[6,[120]]]],[[110,[69,[125]]],[[6,[120]]]],[[111,[69,[125]]],[[6,[120]]]],[[111,[69,[127]]],[[6,[120]]]],[[111,[69,[126]]],[[6,[120]]]],[[69,124],[[6,[114,121]]]],[[[109,[108]],[69,[125]],124],[[6,[[114,[125]],121]]]],[[[109,[108]],[69,[127]],124],[[6,[[114,[127]],121]]]],[[[109,[108]],[69,[126]],124],[[6,[[114,[126]],121]]]],[[110,[69,[127]],124],[[6,[[114,[127]],121]]]],[[110,[69,[125]],124],[[6,[[114,[125]],121]]]],[[110,[69,[126]],124],[[6,[[114,[126]],121]]]],[[111,[69,[127]],124],[[6,[[114,[127]],121]]]],[[111,[69,[126]],124],[[6,[[114,[126]],121]]]],[[111,[69,[125]],124],[[6,[[114,[125]],121]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[69,[100]],9]],[[[69,[100]],9]],[[[128,[126]]],[[128,[127]]]],[[[69,[100]],10],[[12,[[69,[100]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127,127],[126,126],[125,125],[[[69,[[0,[88,100]]]]],[[69,[[0,[88,100]]]]]],[[[128,[[0,[88,100]]]]],[[128,[[0,[88,100]]]]]],[[[112,[[0,[88,100]]]]],[[112,[[0,[88,100]]]]]],[[127,127],13],[[126,126],13],[[125,125],13],[[[69,[[0,[103,100]]]],69],13],[8,[[69,[100]]]],0,0,[[127,127],2],[[126,126],2],[[125,125],2],[[[69,[[0,[104,100]]]],69],2],[[[128,[[0,[104,100]]]],128],2],[[[112,[[0,[104,100]]]],112],2],[[127,3],4],[[126,3],4],[[125,3],4],[[[69,[100]],3],4],[[[128,[100]],3],4],[[[112,[100]],3],4],[[105,3],4],[[105,3],4],[[[69,[100]],10],[[12,[[69,[100]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,16,16,16],[[69,[127]]]],[[16,16],[[69,[125]]]],[[16,16,16],[[69,[126]]]],[8,[[6,[[69,[100]],105]]]],[8,[[69,[100]]]],[[[69,[[0,[106,100]]]]]],[[[128,[[0,[106,100]]]]]],[[[112,[[0,[106,100]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[128,[100]]],2],[[[112,[100]]],2],[[[128,[100]]],12],[[[112,[100]]],12],[[[69,[127]]],16],[[[69,[129]]],16],[[[69,[100]]],16],[[[69,[100]]],16],[[[69,[100]],18],16],[[127,127],[[12,[13]]]],[[126,126],[[12,[13]]]],[[125,125],[[12,[13]]]],[[[69,[[0,[107,100]]]],69],[[12,[13]]]],[[[69,[100]],[69,[100]]],[[128,[100]]]],[[[69,[100]],[69,[100]]],[[112,[100]]]],[[[69,[100]]],9],0,0,[[[69,[100]]],8],[[[69,[100]],[69,[100]]],[[12,[10]]]],[[[69,[100]],[69,[100]]]],[[[69,[100]],9]],[[[69,[100]],9]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[130,11],[[],124],[[124,124],124],[[124,124]],[[124,124],124],[[124,124]],[124,9],[[124,124],124],[[124,124]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[131,131],[130,130],[124,124],[123,123],[16,16],[17,17],[18,18],[[124,124],13],[[16,16],13],[[17,17],13],[[18,18],13],[124,124],[[124,124],2],[[],123],[[124,124],124],[[],124],[18,9],[[131,131],2],[[124,124],2],[[16,16],2],[[17,17],2],[[18,18],2],[[124,37]],[130,124],[[131,3],4],[[130,3],4],[[124,3],4],[[124,3],4],[[124,3],4],[[124,3],4],[[124,3],4],[[123,3],4],[[16,3],4],[[17,3],4],[[18,3],4],[130,[[6,[42,131]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[12,[124]]]],[9,124],[9,124],[37,124],[124],[16],[17],[18],[[123,10]],[[123,16]],[[123,10]],[[123,16]],[[124,124]],[[124,124],124],[[124,124],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,2],[124,2],[130,2],[123,132],[123,132],[[],130],[[],123],[5,16],[5,17],[5,16],[5,17],[18,[[12,[18]]]],[124,124],[[124,124],[[12,[13]]]],[[16,16],[[12,[13]]]],[[17,17],[[12,[13]]]],[[18,18],[[12,[13]]]],[[124,124]],[[124,124,2]],[[130,11,124]],[[130,124]],[[130,42,124]],[130],[[124,124],124],[[124,124]],[[124,124],124],[18,9],[[124,124]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[124,124],124],[123],0,0,[5],[5],0,[[]],[[]],[82,82],[[82,3],4],[[]],0,[[]],0,[[],82],0,[[],6],[[],6],[[],7]],"p":[[4,"PrivilegeLevel"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u16"],[4,"Result"],[3,"TypeId"],[3,"VirtAddr"],[15,"u64"],[15,"usize"],[3,"PhysAddr"],[4,"Option"],[4,"Ordering"],[3,"VirtAddrNotValid"],[3,"PhysAddrNotValid"],[3,"PageTableIndex"],[3,"PageOffset"],[4,"PageTableLevel"],[3,"PortGeneric"],[3,"ReadOnlyAccess"],[3,"WriteOnlyAccess"],[3,"ReadWriteAccess"],[8,"PortRead"],[8,"PortReadAccess"],[8,"PortWrite"],[8,"PortWriteAccess"],[3,"RdRand"],[15,"u32"],[3,"SegmentSelector"],[3,"DescriptorTablePointer"],[3,"Pcid"],[4,"InvPicdCommand"],[15,"str"],[3,"Cr0Flags"],[3,"Cr3Flags"],[3,"Cr4Flags"],[8,"IntoIterator"],[3,"Cr0"],[3,"Cr2"],[3,"Cr3"],[3,"Cr4"],[3,"PhysFrame"],[3,"Dr6Flags"],[3,"Dr7Flags"],[3,"Dr7Value"],[4,"DebugAddressRegisterNumber"],[4,"BreakpointCondition"],[4,"BreakpointSize"],[3,"Dr0"],[3,"Dr1"],[3,"Dr2"],[3,"Dr3"],[3,"Dr6"],[3,"Dr7"],[15,"u8"],[3,"EferFlags"],[3,"CetFlags"],[3,"Msr"],[3,"Efer"],[3,"FsBase"],[3,"GsBase"],[3,"KernelGsBase"],[3,"Star"],[3,"LStar"],[3,"SFMask"],[3,"UCet"],[3,"SCet"],[3,"RFlags"],[3,"Page"],[3,"MxCsr"],[3,"CS"],[3,"SS"],[3,"DS"],[3,"ES"],[3,"FS"],[3,"GS"],[3,"XCr0Flags"],[3,"XCr0"],[3,"GlobalDescriptorTable"],[4,"Descriptor"],[3,"DescriptorFlags"],[3,"TaskStateSegment"],[3,"PageFaultErrorCode"],[3,"InterruptStackFrame"],[3,"InterruptStackFrameValue"],[3,"Volatile"],[3,"InterruptDescriptorTable"],[8,"Clone"],[3,"Entry"],[3,"EntryOptions"],[3,"SelectorErrorCode"],[4,"DescriptorTable"],[4,"ExceptionVector"],[6,"HandlerFunc"],[6,"HandlerFuncWithErrCode"],[6,"PageFaultHandlerFunc"],[6,"DivergingHandlerFunc"],[6,"DivergingHandlerFuncWithErrCode"],[8,"RangeBounds"],[8,"PageSize"],[3,"PhysFrameRange"],[3,"PhysFrameRangeInclusive"],[8,"Ord"],[8,"PartialEq"],[3,"AddressNotAligned"],[8,"Hash"],[8,"PartialOrd"],[8,"PageTableFrameMapping"],[3,"MappedPageTable"],[3,"OffsetPageTable"],[3,"RecursivePageTable"],[3,"PageRangeInclusive"],[3,"MapperFlushAll"],[3,"MapperFlush"],[8,"Debug"],[4,"InvalidPageTable"],[4,"TranslateResult"],[4,"MappedFrame"],[4,"MapToError"],[4,"UnmapError"],[4,"FlagUpdateError"],[4,"TranslateError"],[3,"PageTable"],[3,"PageTableFlags"],[4,"Size1GiB"],[4,"Size2MiB"],[4,"Size4KiB"],[3,"PageRange"],[8,"NotGiantPageSize"],[3,"PageTableEntry"],[4,"FrameError"],[8,"Iterator"],[13,"Address"],[13,"Single"],[8,"DebugAddressRegister"],[8,"Segment64"],[8,"Segment"],[13,"UserSegment"],[13,"SystemSegment"],[8,"FrameAllocator"],[8,"FrameDeallocator"],[8,"CleanUp"],[8,"Mapper"],[8,"Translate"],[13,"PageAlreadyMapped"],[13,"Size4KiB"],[13,"Size2MiB"],[13,"Size1GiB"],[13,"InvalidFrameAddress"],[13,"InvalidFrameAddress"],[13,"Mapped"],[13,"InvalidFrameAddress"]]},\
"xmas_elf":{"doc":"","t":[3,8,6,6,11,11,0,11,11,11,11,10,11,10,11,11,11,0,0,12,12,11,11,0,11,11,11,11,0,0,11,11,11,13,13,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,5,11,11,11,11,11,12,13,13,13,13,13,4,3,13,13,4,3,13,13,3,13,13,3,4,3,13,13,13,13,13,17,4,3,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,5,11,12,11,12,11,12,12,12,5,11,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,17,17,17,17,17,3,13,13,13,13,13,13,13,13,13,13,13,4,3,3,3,4,13,17,17,17,17,17,13,4,3,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,12,5,11,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,3,3,4,3,13,13,13,13,13,13,13,13,13,13,17,17,17,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,3,13,13,13,3,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,3,3,3,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,13,13,3,3,8,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12],"n":["ElfFile","Extensions","P32","P64","borrow","borrow_mut","dynamic","find_section_by_name","fmt","from","get_dyn_string","get_gnu_buildid","get_gnu_buildid","get_gnu_debuglink","get_gnu_debuglink","get_shstr","get_string","hash","header","header","input","into","new","program","program_header","program_iter","section_header","section_iter","sections","symbol_table","try_from","try_into","type_id","BindNow","Debug","Dynamic","FLAG_1_CONFALT","FLAG_1_DIRECT","FLAG_1_DISPRELDNE","FLAG_1_DISPRELPND","FLAG_1_EDITED","FLAG_1_ENDFILTEE","FLAG_1_GLOBAL","FLAG_1_GLOBAUDIT","FLAG_1_GROUP","FLAG_1_IGNMULDEF","FLAG_1_INITFIRST","FLAG_1_INTERPOSE","FLAG_1_LOADFLTR","FLAG_1_NODEFLIB","FLAG_1_NODELETE","FLAG_1_NODIRECT","FLAG_1_NODUMP","FLAG_1_NOHDR","FLAG_1_NOKSYMS","FLAG_1_NOOPEN","FLAG_1_NORELOC","FLAG_1_NOW","FLAG_1_ORIGIN","FLAG_1_PIE","FLAG_1_SINGLETON","FLAG_1_STUB","FLAG_1_SYMINTPOSE","FLAG_1_TRANS","Fini","FiniArray","FiniArraySize","Flags","Flags1","Hash","Init","InitArray","InitArraySize","JmpRel","Needed","Null","OsSpecific","PltRel","PltRelSize","Pltgot","PreInitArray","PreInitArraySize","ProcessorSpecific","RPath","Rel","RelEnt","RelSize","Rela","RelaEnt","RelaSize","RunPath","SoName","StrSize","StrTab","SymEnt","SymTab","SymTabShIndex","Symbolic","Tag","Tag_","TextRel","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","get_ptr","get_ptr","get_tag","get_tag","get_val","get_val","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","HashTable","borrow","borrow_mut","clone","fmt","from","get_bucket","get_chain","hash","into","lookup","try_from","try_into","type_id","0","AArch64","Aix","Arm","BPF","BigEndian","Class","Class_","Core","Current","Data","Data_","Executable","FreeBSD","Header","Header32","Header64","HeaderPt1","HeaderPt2","HeaderPt2_","HpUx","Ia64","Irix","Linux","LittleEndian","MAGIC","Machine","Machine_","Mips","NetBSD","None","None","None","None","None","OpenBSD","OpenVMS","OsAbi","OsAbi_","Other","Other","Other","Other","Other","PowerPC","ProcessorSpecific","RISC_V","Relocatable","SharedObject","SixtyFour","Solaris","Sparc","SuperH","SystemV","ThirtyTwo","Type","Type_","Version","Version_","X86","X86_64","abi_version","as_class","as_data","as_machine","as_os_abi","as_type","as_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","data","data","entry_point","entry_point","eq","eq","eq","eq","eq","eq","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header_size","header_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_none","is_none","is_none","is_none","is_none","is_none","machine","machine","magic","os_abi","os_abi","padding","parse_header","ph_count","ph_count","ph_entry_size","ph_entry_size","ph_offset","ph_offset","pt1","pt2","sanity_check","sh_count","sh_count","sh_entry_size","sh_entry_size","sh_offset","sh_offset","sh_str_index","sh_str_index","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","0","0","0","0","0","0","0","0","0","Dynamic","Dynamic32","Dynamic64","Empty","FLAG_MASKOS","FLAG_MASKPROC","FLAG_R","FLAG_W","FLAG_X","Flags","GnuRelro","Interp","Load","Note","Note64","Null","OsSpecific","Ph32","Ph64","Phdr","ProcessorSpecific","ProgramHeader","ProgramHeader32","ProgramHeader64","ProgramIter","SegmentData","ShLib","TYPE_GNU_RELRO","TYPE_HIOS","TYPE_HIPROC","TYPE_LOOS","TYPE_LOPROC","Tls","Type","Type_","Undefined","align","align","align","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","eq","eq","file","file_size","file_size","file_size","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_data","get_data","get_data","get_type","get_type","get_type","into","into","into","into","into","into","into","into","into_iter","is_execute","is_read","is_write","mem_size","mem_size","mem_size","next","next_index","offset","offset","offset","parse_program_header","physical_addr","physical_addr","physical_addr","raw_data","raw_data","sanity_check","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","virtual_addr","virtual_addr","virtual_addr","0","0","0","0","0","0","1","0","0","COMPRESS_HIOS","COMPRESS_HIPROC","COMPRESS_LOOS","COMPRESS_LOPROC","CompressionHeader32","CompressionHeader64","CompressionType","CompressionType_","DynSym","DynSymbolTable32","DynSymbolTable64","Dynamic","Dynamic32","Dynamic64","Empty","FiniArray","FnArray32","FnArray64","GRP_COMDAT","GRP_MASKOS","GRP_MASKPROC","Group","Group","Hash","HashTable","InitArray","NoBits","Note","Note64","NoteHeader","Null","OsSpecific","OsSpecific","PreInitArray","ProcessorSpecific","ProcessorSpecific","ProgBits","Rel","Rel","Rel32","Rel64","Rela","Rela","Rela32","Rela64","SHF_ALLOC","SHF_COMPRESSED","SHF_EXECINSTR","SHF_GROUP","SHF_INFO_LINK","SHF_LINK_ORDER","SHF_MASKOS","SHF_MASKPROC","SHF_MERGE","SHF_OS_NONCONFORMING","SHF_STRINGS","SHF_TLS","SHF_WRITE","SHN_ABS","SHN_COMMON","SHN_HIOS","SHN_HIPROC","SHN_HIRESERVE","SHN_LOOS","SHN_LOPROC","SHN_LORESERVE","SHN_UNDEF","SHN_XINDEX","SHT_HIOS","SHT_HIPROC","SHT_HIUSER","SHT_LOOS","SHT_LOPROC","SHT_LOUSER","SectionData","SectionHeader","SectionHeader_","SectionIter","SectionStrings","Sh32","Sh64","ShLib","ShType","ShType_","StrArray","StrTab","SymTab","SymTabShIndex","SymTabShIndex","SymbolTable32","SymbolTable64","Undefined","User","Zlib","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","desc","eq","eq","file","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_addend","get_addend","get_data","get_name","get_offset","get_offset","get_offset","get_offset","get_symbol_table_index","get_symbol_table_index","get_symbol_table_index","get_symbol_table_index","get_type","get_type","get_type","get_type","get_type","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","link","name","name","next","next","next_index","offset","parse_section_header","raw_data","sanity_check","size","strings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","flags","indicies","0","0","0","0","0","Binding","Binding_","Common","Default","DynEntry32","DynEntry64","Entry","Entry32","Entry64","File","Func","Global","Hidden","Internal","Local","NoType","Object","OsSpecific","OsSpecific","ProcessorSpecific","ProcessorSpecific","Protected","Section","Tls","Type","Type_","Visibility","Visibility_","Weak","as_binding","as_type","as_visibility","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_binding","get_name","get_name","get_name","get_name","get_name","get_other","get_section_header","get_type","info","info","info","info","info","into","into","into","into","into","into","into","into","into","into","name","name","name","name","name","other","other","other","other","other","shndx","shndx","shndx","shndx","shndx","size","size","size","size","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","0","0","0","0"],"q":["xmas_elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::dynamic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::dynamic::Tag","","xmas_elf::hash","","","","","","","","","","","","","","xmas_elf::headerxmas_elf::header::Class","xmas_elf::header::Data","xmas_elf::header::HeaderPt2","","xmas_elf::header::Machine","xmas_elf::header::OsAbi","xmas_elf::header::Type","xmas_elf::header::Version","xmas_elf::program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::program::ProgramHeader","","xmas_elf::program::SegmentData","","","","","xmas_elf::program::Type","","xmas_elf::sectionsxmas_elf::sections::CompressionType","","xmas_elf::sections::SectionData","","","","","","","","","","","","","","","","","","","","xmas_elf::sections::SectionHeader","","xmas_elf::sections::ShType","","","xmas_elf::symbol_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::symbol_table::Binding","","xmas_elf::symbol_table::Type",""],"d":["","A trait for things that are common ELF conventions but not …","","","","","","","","Returns the argument unchanged.","","Parse and return the value of the .note.gnu.build-id …","","Parse and return the value of the .gnu_debuglink section, …","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,1,1,1,1,73,1,73,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,17,20,15,17,20,15,17,15,17,20,15,15,17,20,15,17,20,20,20,20,20,20,20,15,17,20,15,17,20,15,17,20,15,17,74,75,0,23,23,23,23,23,23,23,0,23,23,23,23,23,33,30,32,30,30,28,0,0,34,36,0,0,34,32,0,39,39,0,0,0,32,30,32,32,28,0,0,0,30,32,26,28,36,34,30,32,32,0,0,26,28,36,32,30,30,34,30,34,34,26,32,30,30,32,26,0,0,0,0,30,30,37,25,27,29,31,33,35,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,37,37,38,37,39,25,26,27,28,35,36,31,32,33,34,29,30,37,37,39,41,25,26,28,36,32,34,30,41,38,38,37,39,39,41,41,25,26,27,28,35,36,31,32,33,34,29,30,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,39,41,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,25,26,27,28,35,36,39,41,37,37,37,37,0,39,41,39,41,39,41,38,38,0,39,41,39,41,39,41,39,41,39,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,39,41,38,37,39,41,25,26,27,28,35,36,31,32,33,34,29,30,37,39,37,41,76,77,78,79,80,81,82,83,46,48,49,49,49,0,0,0,0,0,0,48,48,48,48,49,48,48,10,10,48,48,0,0,0,0,0,48,0,0,0,0,0,48,0,0,49,10,44,45,11,10,44,45,46,47,48,49,11,10,44,45,46,47,48,49,11,10,44,45,46,47,48,44,45,46,47,46,48,11,10,44,45,10,44,45,11,10,10,44,44,45,45,46,46,46,46,47,48,49,11,10,44,45,46,47,48,49,10,44,45,10,44,45,11,10,44,45,46,47,48,49,11,46,46,46,10,44,45,11,11,10,44,45,0,10,44,45,44,45,0,11,10,44,45,46,47,48,49,11,10,44,45,46,47,48,49,44,45,11,10,44,45,46,47,48,49,10,44,45,84,85,86,87,88,89,89,90,91,0,0,0,0,0,0,0,0,51,58,58,51,58,58,58,51,58,58,0,0,0,51,58,51,58,51,51,51,58,0,51,51,55,51,51,55,51,0,51,58,58,0,51,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,51,0,0,58,51,51,51,58,58,58,58,51,55,3,12,3,57,50,51,58,59,52,53,54,55,60,61,56,12,3,57,50,51,58,59,52,53,54,55,60,61,56,12,3,50,51,52,53,54,55,56,56,51,55,12,3,12,3,3,57,50,51,58,59,52,53,54,55,60,61,56,12,3,57,50,51,58,59,52,53,54,55,60,61,56,60,60,3,3,60,60,61,61,60,60,61,61,3,60,60,61,61,3,12,3,57,50,51,58,59,52,53,54,55,60,61,56,12,59,3,3,56,12,59,12,3,0,3,0,3,58,12,3,57,50,51,58,59,52,53,54,55,60,61,56,12,3,57,50,51,58,59,52,53,54,55,60,61,56,3,56,12,3,57,50,51,58,59,52,53,54,55,60,61,56,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,103,111,111,112,113,114,115,116,0,0,66,68,0,0,0,0,0,66,66,64,68,68,64,66,66,64,66,64,66,68,66,66,0,0,0,0,64,63,65,67,69,70,71,72,67,68,63,64,65,66,69,70,71,72,67,68,63,64,65,66,67,68,63,64,65,66,64,66,24,69,70,71,72,67,68,63,64,65,66,69,70,71,72,67,68,63,64,65,66,24,24,69,70,71,72,24,24,24,24,69,70,71,72,69,70,71,72,67,68,63,64,65,66,24,69,70,71,72,24,69,70,71,72,24,69,70,71,72,24,69,70,71,72,69,70,71,72,67,68,63,64,65,66,69,70,71,72,67,68,63,64,65,66,69,70,71,72,67,68,63,64,65,66,24,69,70,71,72,117,118,119,120],"f":[0,0,0,0,[[]],[[]],0,[[1,2],[[4,[3]]]],[[1,5],6],[[]],[[1,7],[[8,[2,2]]]],[[],4],[1,4],[[],4],[1,4],[[1,7],[[8,[2,2]]]],[[1,7],[[8,[2,2]]]],0,0,0,0,[[]],[[],[[8,[1,2]]]],0,[[1,9],[[8,[10,2]]]],[1,11],[[1,9],[[8,[3,2]]]],[1,12],0,0,[[],8],[[],8],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[17,[16]],17],18],[[[20,[19]],5],6],[[[15,[21]],5],6],[[[15,[22]],5],6],[[[17,[19]],5],6],[[]],[[]],[[]],[[[20,[21]]],[[8,[21,2]]]],[[[20,[22]]],[[8,[22,2]]]],[[[20,[21]]],[[8,[[17,[21]],2]]]],[[[20,[22]]],[[8,[[17,[22]],2]]]],[[[20,[21]]],[[8,[21,2]]]],[[[20,[22]]],[[8,[22,2]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],13],[[],13],[[],13],0,0,0,[[]],[[]],[23,23],[[23,5],6],[[]],[[23,7],7],[[23,7],7],[2,7],[[]],[[23,2],24],[[],8],[[],8],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,26],[27,28],[29,30],[31,32],[33,34],[35,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,26],0,[38,38],[37,37],[39,39],[25,25],[26,26],[27,27],[28,28],[35,35],[36,36],[31,31],[32,32],[33,33],[34,34],[29,29],[30,30],[37,28],0,[39,40],0,[[25,25],18],[[26,26],18],[[28,28],18],[[36,36],18],[[32,32],18],[[34,34],18],[[30,30],18],0,[[38,5],6],[[38,5],6],[[37,5],6],[[39,5],6],[[39,5],6],[[[41,[19]],5],6],[[[41,[42]],5],6],[[25,5],6],[[26,5],6],[[27,5],6],[[28,5],6],[[35,5],6],[[36,5],6],[[31,5],6],[[32,5],6],[[33,5],6],[[34,5],6],[[29,5],6],[[30,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,18],[26,18],[27,18],[28,18],[35,18],[36,18],[39,29],0,0,[37,32],0,0,[[],[[8,[38,2]]]],[39,9],0,[39,9],0,[39,40],0,0,0,[1,[[8,[2]]]],[39,9],0,[39,9],0,[39,40],0,[39,9],0,[39,43],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[39,33],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[37,36],[39,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,40],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[10,10],[44,44],[45,45],[46,46],[47,47],[48,48],[[],44],[[],45],[[],46],[[],47],[[46,46],18],[[48,48],18],0,[10,40],0,0,[10,46],0,0,[[11,5],6],[[10,5],6],[[10,5],6],[[44,5],6],[[44,5],6],[[45,5],6],[[45,5],6],[[46,5],6],[[46,5],6],[[46,5],6],[[46,5],6],[[47,5],6],[[48,5],6],[[49,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,1],[[8,[49,2]]]],[[44,1],[[8,[49,2]]]],[[45,1],[[8,[49,2]]]],[10,[[8,[48,2]]]],[44,[[8,[48,2]]]],[45,[[8,[48,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,18],[46,18],[46,18],[10,40],0,0,[11,4],0,[10,40],0,0,[[38,9],[[8,[10,2]]]],[10,40],0,0,[[44,1]],[[45,1]],[[10,1],[[8,[2]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[10,40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[3,3],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[56],[[51,51],18],[[55,55],18],0,[3,40],[[12,5],6],[[3,5],6],[[3,5],6],[[[57,[19]],5],6],[[50,5],6],[[51,5],6],[[58,5],6],[[59,5],6],[[52,5],6],[[53,5],6],[[54,5],6],[[55,5],6],[[[60,[19]],5],6],[[[61,[19]],5],6],[[56,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[60,[22]]],7],[[[60,[21]]],40],[[3,1],[[8,[58,2]]]],[[3,1],[[8,[2,2]]]],[[[60,[22]]],7],[[[60,[21]]],40],[[[61,[22]]],7],[[[61,[21]]],40],[[[60,[22]]],7],[[[60,[21]]],7],[[[61,[22]]],7],[[[61,[21]]],7],[3,[[8,[51,2]]]],[[[60,[22]]],62],[[[60,[21]]],7],[[[61,[22]]],62],[[[61,[21]]],7],[3,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,7],[3,7],[56,2],[12,4],[59,[[4,[2]]]],0,[3,40],[[38,9],[[8,[3,2]]]],[[3,1]],[[3,1],[[8,[2]]]],[3,40],[58,[[8,[59]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[3,50],[56,7],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,[[8,[64,2]]]],[65,[[8,[66,2]]]],[67,68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[68,68],[63,63],[64,64],[65,65],[66,66],[[64,64],18],[[66,66],18],[[24,5],6],[[69,5],6],[[70,5],6],[[71,5],6],[[72,5],6],[[67,5],6],[[68,5],6],[[63,5],6],[[64,5],6],[[65,5],6],[[66,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[64,2]]]],[1,[[8,[2,2]]]],[[69,1],[[8,[2,2]]]],[[70,1],[[8,[2,2]]]],[[71,1],[[8,[2,2]]]],[[72,1],[[8,[2,2]]]],[[],68],[[1,43],[[8,[3,2]]]],[[],[[8,[66,2]]]],[[],62],[69,62],[70,62],[71,62],[72,62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[69,7],[70,7],[71,7],[72,7],[[],67],[69,67],[70,67],[71,67],[72,67],[[],9],[69,9],[70,9],[71,9],[72,9],[[],40],[69,40],[70,40],[71,40],[72,40],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],40],[69,40],[70,40],[71,40],[72,40],0,0,0,0],"p":[[3,"ElfFile"],[15,"str"],[4,"SectionHeader"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"u32"],[4,"Result"],[15,"u16"],[4,"ProgramHeader"],[3,"ProgramIter"],[3,"SectionIter"],[3,"TypeId"],[8,"Clone"],[3,"Tag_"],[8,"PartialEq"],[4,"Tag"],[15,"bool"],[8,"Debug"],[3,"Dynamic"],[6,"P64"],[6,"P32"],[3,"HashTable"],[8,"Entry"],[3,"Class_"],[4,"Class"],[3,"Data_"],[4,"Data"],[3,"Machine_"],[4,"Machine"],[3,"OsAbi_"],[4,"OsAbi"],[3,"Type_"],[4,"Type"],[3,"Version_"],[4,"Version"],[3,"HeaderPt1"],[3,"Header"],[4,"HeaderPt2"],[15,"u64"],[3,"HeaderPt2_"],[8,"Display"],[15,"usize"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"Flags"],[3,"Type_"],[4,"Type"],[4,"SegmentData"],[3,"ShType_"],[4,"ShType"],[3,"CompressionHeader64"],[3,"CompressionHeader32"],[3,"CompressionType_"],[4,"CompressionType"],[3,"NoteHeader"],[3,"SectionHeader_"],[4,"SectionData"],[3,"SectionStrings"],[3,"Rela"],[3,"Rel"],[15,"u8"],[3,"Binding_"],[4,"Binding"],[3,"Type_"],[4,"Type"],[3,"Visibility_"],[4,"Visibility"],[3,"Entry32"],[3,"Entry64"],[3,"DynEntry32"],[3,"DynEntry64"],[8,"Extensions"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"Other"],[13,"Other"],[13,"Header32"],[13,"Header64"],[13,"Other"],[13,"Other"],[13,"ProcessorSpecific"],[13,"Other"],[13,"Ph32"],[13,"Ph64"],[13,"Undefined"],[13,"Dynamic32"],[13,"Dynamic64"],[13,"Note64"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"Undefined"],[13,"StrArray"],[13,"FnArray32"],[13,"FnArray64"],[13,"SymbolTable32"],[13,"SymbolTable64"],[13,"DynSymbolTable32"],[13,"DynSymbolTable64"],[13,"SymTabShIndex"],[13,"Note64"],[13,"Rela32"],[13,"Rela64"],[13,"Rel32"],[13,"Rel64"],[13,"Dynamic32"],[13,"Dynamic64"],[13,"HashTable"],[13,"Group"],[13,"Sh32"],[13,"Sh64"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"User"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"OsSpecific"],[13,"ProcessorSpecific"]]},\
"zero":{"doc":"Functions for reading binary data into Rust data …","t":[8,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11],"n":["Pod","StrReaderIterator","borrow","borrow_mut","clone","fmt","from","into","into_iter","next","read","read_array","read_array_unsafe","read_str","read_str_unsafe","read_strs_to_null","read_unsafe","size_hint","try_from","try_into","type_id"],"q":["zero","","","","","","","","","","","","","","","","","","","",""],"d":["Implementing this trait means that the concrete type is …","Iterates over <code>self.data</code>, yielding strings (null-terminated …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Reads a single <code>T</code> from <code>input</code>.","Read an array of <code>T</code>s from input.","Reads an array of <code>T</code>s from <code>input</code> with no checks.","Read a string from <code>input</code>. The string must be a …","Reads a null-terminated string from <code>input</code> with no checks.","Returns an iterator which will return a sequence of …","Reads a <code>T</code> from <code>input</code> with no checks.","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],"f":[0,0,[[]],[[]],[1,1],[[1,2],3],[[]],[[]],[[]],[1,[[5,[4]]]],[[]],[[]],[[]],[[],4],[[],4],[[],1],[[]],[1],[[],6],[[],6],[[],7]],"p":[[3,"StrReaderIterator"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Option"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
